{
	"id": "beb88695009312de1df9fba87770e417",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"Treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./iTreasury.sol\";\nimport \"./DoAConstants.sol\";\n\ncontract Treasury is iTreasury, Ownable, Pausable, ReentrancyGuard {\n\n    //--------------------------------------------------------------------------------\n    //  State Variables\n    //--------------------------------------------------------------------------------\n\n    uint256 public privateFund;\n    uint256 public publicFund;\n    \n    mapping(address => bool) private _authorizedContracts;   //contracts that are allo\n\n\n    //--------------------------------------------------------------------------------\n    // Utility functions\n    //--------------------------------------------------------------------------------\n\n\n    //--------------------------------------------------------------------------------\n    // Constructor\n    //--------------------------------------------------------------------------------\n    function addAuthorizedContract(address contractAddress) external  onlyOwner {\n        _authorizedContracts[contractAddress] = true;\n    }\n\n\n    //--------------------------------------------------------------------------------\n    // Functions: Owner\n    //--------------------------------------------------------------------------------\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n\n\n\n    //------------------------------------------------------------------------------------\n    // Functions: DOA\n    //------------------------------------------------------------------------------------\n\n    function depositNFTRevenue() external  payable {\n        //TODO:require(_authorizedContracts[msg.sender], \"Not authorized\");\n\n        uint256 publicShare = (msg.value * uint256(DoAConstants.PUBLIC_FUND_PERCENTAGE)) / 100;\n        \n        publicFund += publicShare;\n        privateFund += (msg.value - publicShare);\n    }\n\n    function withdrawPrivateFund(uint256 amount) external override onlyOwner {\n        //TODO:require(_authorizedContracts[msg.sender], \"Not authorized\");\n\n        require(amount <= privateFund, \"Not enough funds\");\n\n        privateFund -= amount;\n        payable(msg.sender).transfer(amount);\n    }\n\n    function getCombinedBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n\n\n}"
			},
			"DoAConstants.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n\n//--------------------------------------------------------------------------------\n//  Enums\n//--------------------------------------------------------------------------------\nenum NFT_CLASS {\n    HERO,\n    LEGEND,\n    RARE,\n    UNCOMMON,\n    COMMON\n}\n\n\n   \n//-----------------------------------------------------------------------------------\n// Constants\n//-----------------------------------------------------------------------------------\n\nlibrary DoAConstants {\n\n    \n    //--------------------------------------------------------------------------------\n    //  Minting rounds & supply\n    //--------------------------------------------------------------------------------\n    \n    //#  NFTs supply in 1st round\n    uint16 public constant HERO_NFT_SUPPLY_1st = 25;\n    uint16 public constant LEGEND_NFT_SUPPLY_1st = 1;\n    uint16 public constant RARE_NFT_SUPPLY_1st = 5;\n    uint16 public constant UNCOMMON_NFT_SUPPLY_1st = 25;\n    uint16 public constant COMMON_NFT_SUPPLY_1st = 125;\n\n    //#  NFTs supply in 2nd round\n    uint16 public constant HERO_NFT_SUPPLY_2nd = 0;\n    uint16 public constant LEGEND_NFT_SUPPLY_2nd = 10;\n    uint16 public constant RARE_NFT_SUPPLY_2nd = 50;\n    uint16 public constant UNCOMMON_NFT_SUPPLY_2nd = 250;\n    uint16 public constant COMMON_NFT_SUPPLY_2nd = 1250;\n\n    //#  NFTs supply in 3rd round\n    uint16 public constant HERO_NFT_SUPPLY_3rd = 0;\n    uint16 public constant LEGEND_NFT_SUPPLY_3rd = 80;\n    uint16 public constant RARE_NFT_SUPPLY_3rd = 400;\n    uint16 public constant UNCOMMON_NFT_SUPPLY_3rd = 2000;\n    uint16 public constant COMMON_NFT_SUPPLY_3rd = 5770;\n\n    //#  NFTs supply totals\n    uint16 public constant NFT_SUPPLY_1st = 181;\n    uint16 public constant NFT_SUPPLY_2nd = 1560;\n    uint16 public constant NFT_SUPPLY_3rd = 8250;\n\n\n    //--------------------------------------------------------------------------------\n    // NFTs start indexes for first 10K NFTs\n    //--------------------------------------------------------------------------------\n\n    //#  NFT Type start indexes\n    uint16 public constant HERO_NFT_START_INDEX = 0;\n    uint16 public constant LEGEND_NFT_START_INDEX = 25;\n    uint16 public constant RARE_NFT_START_INDEX = 126;\n    uint16 public constant UNCOMMON_NFT_START_INDEX = 627;\n    uint16 public constant COMMON_NFT_START_INDEX = 3128;\n\n\n\n    //--------------------------------------------------------------------------------\n    //  Minting prices\n    //--------------------------------------------------------------------------------\n \n    uint256 public constant LEGEND_NFT_PRICE = 1.64 ether; //~$2500\n    uint256 public constant RARE_NFT_PRICE = 0.33 ether; //~$500\n    uint256 public constant COMMON_NFT_PRICE = 0.066 ether; //~$100\n    uint256 public constant UNCOMMON_NFT_PRICE = 0.013 ether; //~$20\n\n\n\n\n    //--------------------------------------------------------------------------------\n    // NFTs metadata\n    //--------------------------------------------------------------------------------\n\n    string public constant BASE_URI = \"ipfs://<hash>/doa/nft\";\n\n    string public constant BASE_HERO_URI = \"/hero/metadata\";\n    string public constant BASE_LEGEND_URI = \"/legend/metadata\";\n    string public constant BASE_RARE_URI = \"/rare/metadata\";\n    string public constant BASE_UNCOMMON_URI = \"/uncommon/metadata\";\n    string public constant BASE_COMMON_URI = \"/common/metadata\";\n\n    \n    //--------------------------------------------------------------------------------\n    // Treasury\n    //--------------------------------------------------------------------------------\n    uint8 public constant PUBLIC_FUND_PERCENTAGE = 60;\n\n\n    \n    // Returns NFT class for given token ID\n    function getClassForTokenId(uint256 tokenId) public pure returns (NFT_CLASS tokenClass) {\n        \n        if (tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.HERO;\n        } else if (tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.LEGEND;\n        } else if (tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.RARE;\n        } else if (tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.UNCOMMON;\n        } else if (tokenId >= DoAConstants.COMMON_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.COMMON;\n        } else {\n            revert(\"Invalid token ID\");\n        }\n\n        return tokenClass;\n    }\n\n    function getClassName(NFT_CLASS nftClass) public pure returns (string memory tokenClassName) {\n        \n        if (nftClass == NFT_CLASS.HERO) {\n            tokenClassName = \"Hero\";\n        } else if (nftClass == NFT_CLASS.LEGEND) {\n            tokenClassName = \"Legend\";\n        } else if (nftClass == NFT_CLASS.RARE) {\n            tokenClassName = \"Rare\";\n        } else if (nftClass == NFT_CLASS.UNCOMMON) {\n            tokenClassName = \"Uncommon\";\n        } else if (nftClass == NFT_CLASS.COMMON) {\n            tokenClassName = \"Common\";\n        } else {\n            revert(\"Invalid token class\");\n        }\n\n    } \n\n\n    function getClassPrice(NFT_CLASS nftClass) public pure returns (uint256 classNFTPrice) {\n        if(nftClass == NFT_CLASS.LEGEND) \n            classNFTPrice = DoAConstants.LEGEND_NFT_PRICE;\n        else if(nftClass == NFT_CLASS.RARE) \n            classNFTPrice = DoAConstants.RARE_NFT_PRICE;\n        else if(nftClass == NFT_CLASS.UNCOMMON) \n            classNFTPrice = DoAConstants.UNCOMMON_NFT_PRICE;\n        else if(nftClass == NFT_CLASS.COMMON) \n            classNFTPrice = DoAConstants.COMMON_NFT_PRICE;\n        else revert(\"Invalid class\");\n\n        return classNFTPrice;\n    }\n\n    function testClassForTokenId(uint256 tokenId) public pure returns (string memory className) {\n        return getClassName(getClassForTokenId(tokenId));\n    }\n\n}"
			},
			"iTreasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n\n\ninterface iTreasury {\n\n\n    function depositNFTRevenue() external payable;\n\n    function withdrawPrivateFund(uint256 amount) external ;\n    \n    function getCombinedBalance() external view returns (uint256) ;\n}"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 0xD PUSH32 0x86E1AB2F8303D17696B97E631053FD399CF240C2D50EF4C88FDBA17564736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "424:971:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 0xD PUSH32 0x86E1AB2F8303D17696B97E631053FD399CF240C2D50EF4C88FDBA17564736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "424:971:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"Treasury.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH6 0x290B9DA26864 0xE5 DUP16 0xA5 MULMOD DUP6 0xA9 PUSH3 0x7A3EDB 0x4A 0xAF PUSH10 0xFEE8E3EDC3CA33127A2D SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH6 0x290B9DA26864 0xE5 DUP16 0xA5 MULMOD DUP6 0xA9 PUSH3 0x7A3EDB 0x4A 0xAF PUSH10 0xFEE8E3EDC3CA33127A2D SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"Treasury.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1C4CD965BC5B6BC4AC36FCFA833570 XOR CALLDATALOAD 0xF8 CALL RETURNDATASIZE 0x24 LOG1 CODESIZE 0xD1 0xD PUSH26 0x9A9389425864736F6C6343000813003300000000000000000000 ",
							"sourceMap": "202:12302:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1C4CD965BC5B6BC4AC36FCFA833570 XOR CALLDATALOAD 0xF8 CALL RETURNDATASIZE 0x24 LOG1 CODESIZE 0xD1 0xD PUSH26 0x9A9389425864736F6C6343000813003300000000000000000000 ",
							"sourceMap": "202:12302:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"Treasury.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DoAConstants.sol": {
				"DoAConstants": {
					"abi": [
						{
							"inputs": [],
							"name": "BASE_COMMON_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_HERO_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_LEGEND_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_RARE_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_UNCOMMON_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HERO_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HERO_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HERO_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HERO_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PUBLIC_FUND_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getClassForTokenId",
							"outputs": [
								{
									"internalType": "enum NFT_CLASS",
									"name": "tokenClass",
									"type": "NFT_CLASS"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum NFT_CLASS",
									"name": "nftClass",
									"type": "NFT_CLASS"
								}
							],
							"name": "getClassName",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenClassName",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum NFT_CLASS",
									"name": "nftClass",
									"type": "NFT_CLASS"
								}
							],
							"name": "getClassPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "classNFTPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "testClassForTokenId",
							"outputs": [
								{
									"internalType": "string",
									"name": "className",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DoAConstants.sol\":503:6072  library DoAConstants {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DoAConstants.sol\":503:6072  library DoAConstants {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9ee58048\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xca45f599\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xed944cb6\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xed944cb6\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xeda14323\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf41dc7d2\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf59528d2\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xfd642870\n      eq\n      tag_39\n      jumpi\n      jump(tag_1)\n    tag_42:\n      dup1\n      0xca45f599\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xcb937d2b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xcfc2abb7\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdbddb26a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe93e980b\n      eq\n      tag_34\n      jumpi\n      jump(tag_1)\n    tag_41:\n      dup1\n      0xbe8ca905\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xbe8ca905\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbeb9e75e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xbf0832ae\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc244e88b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc525c0c8\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_43:\n      dup1\n      0x9ee58048\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa1bd4a07\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa1d2002d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa83179db\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_40:\n      dup1\n      0x5e28c936\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x828d481b\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x828d481b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8d1da411\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8f5236e5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x970f6e2f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x971cba96\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_45:\n      dup1\n      0x5e28c936\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6871d79f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6b606f0f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6e2f5a5f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x811d5c6c\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_44:\n      dup1\n      0x32a41506\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x32a41506\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x38d79b52\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e2ecca1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x58a0d923\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5e09346a\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_46:\n      dup1\n      0x10a309f3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x11f47eb5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ab7730c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1eb1a2d3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DoAConstants.sol\":2216:2265  uint16 public constant RARE_NFT_START_INDEX = 126 */\n    tag_2:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2271:2324  uint16 public constant UNCOMMON_NFT_START_INDEX = 627 */\n    tag_3:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1753:1797  uint16 public constant NFT_SUPPLY_2nd = 1560 */\n    tag_4:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3185:3244  string public constant BASE_LEGEND_URI = \"/legend/metadata\" */\n    tag_5:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1704:1747  uint16 public constant NFT_SUPPLY_1st = 181 */\n    tag_6:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1140:1189  uint16 public constant LEGEND_NFT_SUPPLY_2nd = 10 */\n    tag_7:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2590:2643  uint256 public constant LEGEND_NFT_PRICE = 1.64 ether */\n    tag_8:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2107:2154  uint16 public constant HERO_NFT_START_INDEX = 0 */\n    tag_9:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1195:1242  uint16 public constant RARE_NFT_SUPPLY_2nd = 50 */\n    tag_10:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":940:991  uint16 public constant UNCOMMON_NFT_SUPPLY_1st = 25 */\n    tag_11:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3311:3374  string public constant BASE_UNCOMMON_URI = \"/uncommon/metadata\" */\n    tag_12:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1803:1847  uint16 public constant NFT_SUPPLY_3rd = 8250 */\n    tag_13:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":5324:5906  function getClassPrice(NFT_CLASS nftClass) public pure returns (uint256 classNFTPrice) {... */\n    tag_14:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3380:3439  string public constant BASE_COMMON_URI = \"/common/metadata\" */\n    tag_15:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":997:1047  uint16 public constant COMMON_NFT_SUPPLY_1st = 125 */\n    tag_16:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":834:882  uint16 public constant LEGEND_NFT_SUPPLY_1st = 1 */\n    tag_17:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":4697:5316  function getClassName(NFT_CLASS nftClass) public pure returns (string memory tokenClassName) {... */\n    tag_18:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":888:934  uint16 public constant RARE_NFT_SUPPLY_1st = 5 */\n    tag_19:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2330:2382  uint16 public constant COMMON_NFT_START_INDEX = 3128 */\n    tag_20:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2723:2777  uint256 public constant COMMON_NFT_PRICE = 0.066 ether */\n    tag_21:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2160:2210  uint16 public constant LEGEND_NFT_START_INDEX = 25 */\n    tag_22:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1559:1612  uint16 public constant UNCOMMON_NFT_SUPPLY_3rd = 2000 */\n    tag_23:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1088:1134  uint16 public constant HERO_NFT_SUPPLY_2nd = 0 */\n    tag_24:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2658:2709  uint256 public constant RARE_NFT_PRICE = 0.33 ether */\n    tag_25:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2791:2847  uint256 public constant UNCOMMON_NFT_PRICE = 0.013 ether */\n    tag_26:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1450:1499  uint16 public constant LEGEND_NFT_SUPPLY_3rd = 80 */\n    tag_27:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3250:3305  string public constant BASE_RARE_URI = \"/rare/metadata\" */\n    tag_28:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1306:1357  uint16 public constant COMMON_NFT_SUPPLY_2nd = 1250 */\n    tag_29:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1505:1553  uint16 public constant RARE_NFT_SUPPLY_3rd = 400 */\n    tag_30:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1618:1669  uint16 public constant COMMON_NFT_SUPPLY_3rd = 5770 */\n    tag_31:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3124:3179  string public constant BASE_HERO_URI = \"/hero/metadata\" */\n    tag_32:\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3060:3117  string public constant BASE_URI = \"ipfs://<hash>/doa/nft\" */\n    tag_33:\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":781:828  uint16 public constant HERO_NFT_SUPPLY_1st = 25 */\n    tag_34:\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3747:4691  function getClassForTokenId(uint256 tokenId) public pure returns (NFT_CLASS tokenClass) {... */\n    tag_35:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      tag_155\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3641:3690  uint8 public constant PUBLIC_FUND_PERCENTAGE = 60 */\n    tag_36:\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1398:1444  uint16 public constant HERO_NFT_SUPPLY_3rd = 0 */\n    tag_37:\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1248:1300  uint16 public constant UNCOMMON_NFT_SUPPLY_2nd = 250 */\n    tag_38:\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":5912:6069  function testClassForTokenId(uint256 tokenId) public pure returns (string memory className) {... */\n    tag_39:\n      tag_168\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2216:2265  uint16 public constant RARE_NFT_START_INDEX = 126 */\n    tag_48:\n        /* \"DoAConstants.sol\":2262:2265  126 */\n      0x7e\n        /* \"DoAConstants.sol\":2216:2265  uint16 public constant RARE_NFT_START_INDEX = 126 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2271:2324  uint16 public constant UNCOMMON_NFT_START_INDEX = 627 */\n    tag_52:\n        /* \"DoAConstants.sol\":2321:2324  627 */\n      0x0273\n        /* \"DoAConstants.sol\":2271:2324  uint16 public constant UNCOMMON_NFT_START_INDEX = 627 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1753:1797  uint16 public constant NFT_SUPPLY_2nd = 1560 */\n    tag_55:\n        /* \"DoAConstants.sol\":1793:1797  1560 */\n      0x0618\n        /* \"DoAConstants.sol\":1753:1797  uint16 public constant NFT_SUPPLY_2nd = 1560 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3185:3244  string public constant BASE_LEGEND_URI = \"/legend/metadata\" */\n    tag_58:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      0x2f6c6567656e642f6d6574616461746100000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1704:1747  uint16 public constant NFT_SUPPLY_1st = 181 */\n    tag_62:\n        /* \"DoAConstants.sol\":1744:1747  181 */\n      0xb5\n        /* \"DoAConstants.sol\":1704:1747  uint16 public constant NFT_SUPPLY_1st = 181 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1140:1189  uint16 public constant LEGEND_NFT_SUPPLY_2nd = 10 */\n    tag_65:\n        /* \"DoAConstants.sol\":1187:1189  10 */\n      0x0a\n        /* \"DoAConstants.sol\":1140:1189  uint16 public constant LEGEND_NFT_SUPPLY_2nd = 10 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2590:2643  uint256 public constant LEGEND_NFT_PRICE = 1.64 ether */\n    tag_68:\n        /* \"DoAConstants.sol\":2633:2643  1.64 ether */\n      0x16c2734f97a40000\n        /* \"DoAConstants.sol\":2590:2643  uint256 public constant LEGEND_NFT_PRICE = 1.64 ether */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2107:2154  uint16 public constant HERO_NFT_START_INDEX = 0 */\n    tag_72:\n        /* \"DoAConstants.sol\":2153:2154  0 */\n      0x00\n        /* \"DoAConstants.sol\":2107:2154  uint16 public constant HERO_NFT_START_INDEX = 0 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1195:1242  uint16 public constant RARE_NFT_SUPPLY_2nd = 50 */\n    tag_75:\n        /* \"DoAConstants.sol\":1240:1242  50 */\n      0x32\n        /* \"DoAConstants.sol\":1195:1242  uint16 public constant RARE_NFT_SUPPLY_2nd = 50 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":940:991  uint16 public constant UNCOMMON_NFT_SUPPLY_1st = 25 */\n    tag_78:\n        /* \"DoAConstants.sol\":989:991  25 */\n      0x19\n        /* \"DoAConstants.sol\":940:991  uint16 public constant UNCOMMON_NFT_SUPPLY_1st = 25 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3311:3374  string public constant BASE_UNCOMMON_URI = \"/uncommon/metadata\" */\n    tag_81:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      0x2f756e636f6d6d6f6e2f6d657461646174610000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1803:1847  uint16 public constant NFT_SUPPLY_3rd = 8250 */\n    tag_84:\n        /* \"DoAConstants.sol\":1843:1847  8250 */\n      0x203a\n        /* \"DoAConstants.sol\":1803:1847  uint16 public constant NFT_SUPPLY_3rd = 8250 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":5324:5906  function getClassPrice(NFT_CLASS nftClass) public pure returns (uint256 classNFTPrice) {... */\n    tag_89:\n        /* \"DoAConstants.sol\":5388:5409  uint256 classNFTPrice */\n      0x00\n        /* \"DoAConstants.sol\":5436:5452  NFT_CLASS.LEGEND */\n      0x01\n        /* \"DoAConstants.sol\":5424:5452  nftClass == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_173\n      jumpi\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n    tag_173:\n        /* \"DoAConstants.sol\":5424:5432  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5424:5452  nftClass == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_176\n      jumpi\n      tag_177\n      tag_175\n      jump\t// in\n    tag_177:\n    tag_176:\n      sub\n        /* \"DoAConstants.sol\":5421:5868  if(nftClass == NFT_CLASS.LEGEND) ... */\n      tag_178\n      jumpi\n        /* \"DoAConstants.sol\":2633:2643  1.64 ether */\n      0x16c2734f97a40000\n        /* \"DoAConstants.sol\":5467:5512  classNFTPrice = DoAConstants.LEGEND_NFT_PRICE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5421:5868  if(nftClass == NFT_CLASS.LEGEND) ... */\n      jump(tag_179)\n    tag_178:\n        /* \"DoAConstants.sol\":5542:5556  NFT_CLASS.RARE */\n      0x02\n        /* \"DoAConstants.sol\":5530:5556  nftClass == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      tag_181\n      tag_175\n      jump\t// in\n    tag_181:\n    tag_180:\n        /* \"DoAConstants.sol\":5530:5538  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5530:5556  nftClass == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_182\n      jumpi\n      tag_183\n      tag_175\n      jump\t// in\n    tag_183:\n    tag_182:\n      sub\n        /* \"DoAConstants.sol\":5527:5868  if(nftClass == NFT_CLASS.RARE) ... */\n      tag_184\n      jumpi\n        /* \"DoAConstants.sol\":2699:2709  0.33 ether */\n      0x0494654067e10000\n        /* \"DoAConstants.sol\":5571:5614  classNFTPrice = DoAConstants.RARE_NFT_PRICE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5527:5868  if(nftClass == NFT_CLASS.RARE) ... */\n      jump(tag_185)\n    tag_184:\n        /* \"DoAConstants.sol\":5644:5662  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"DoAConstants.sol\":5632:5662  nftClass == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_186\n      jumpi\n      tag_187\n      tag_175\n      jump\t// in\n    tag_187:\n    tag_186:\n        /* \"DoAConstants.sol\":5632:5640  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5632:5662  nftClass == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_188\n      jumpi\n      tag_189\n      tag_175\n      jump\t// in\n    tag_189:\n    tag_188:\n      sub\n        /* \"DoAConstants.sol\":5629:5868  if(nftClass == NFT_CLASS.UNCOMMON) ... */\n      tag_190\n      jumpi\n        /* \"DoAConstants.sol\":2836:2847  0.013 ether */\n      0x2e2f6e5e148000\n        /* \"DoAConstants.sol\":5677:5724  classNFTPrice = DoAConstants.UNCOMMON_NFT_PRICE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5629:5868  if(nftClass == NFT_CLASS.UNCOMMON) ... */\n      jump(tag_191)\n    tag_190:\n        /* \"DoAConstants.sol\":5754:5770  NFT_CLASS.COMMON */\n      0x04\n        /* \"DoAConstants.sol\":5742:5770  nftClass == NFT_CLASS.COMMON */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_192\n      jumpi\n      tag_193\n      tag_175\n      jump\t// in\n    tag_193:\n    tag_192:\n        /* \"DoAConstants.sol\":5742:5750  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5742:5770  nftClass == NFT_CLASS.COMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_195\n      tag_175\n      jump\t// in\n    tag_195:\n    tag_194:\n      sub\n        /* \"DoAConstants.sol\":5739:5868  if(nftClass == NFT_CLASS.COMMON) ... */\n      tag_196\n      jumpi\n        /* \"DoAConstants.sol\":2766:2777  0.066 ether */\n      0xea7aa67b2d0000\n        /* \"DoAConstants.sol\":5785:5830  classNFTPrice = DoAConstants.COMMON_NFT_PRICE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5739:5868  if(nftClass == NFT_CLASS.COMMON) ... */\n      jump(tag_197)\n    tag_196:\n        /* \"DoAConstants.sol\":5845:5868  revert(\"Invalid class\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DoAConstants.sol\":5739:5868  if(nftClass == NFT_CLASS.COMMON) ... */\n    tag_197:\n        /* \"DoAConstants.sol\":5629:5868  if(nftClass == NFT_CLASS.UNCOMMON) ... */\n    tag_191:\n        /* \"DoAConstants.sol\":5527:5868  if(nftClass == NFT_CLASS.RARE) ... */\n    tag_185:\n        /* \"DoAConstants.sol\":5421:5868  if(nftClass == NFT_CLASS.LEGEND) ... */\n    tag_179:\n        /* \"DoAConstants.sol\":5324:5906  function getClassPrice(NFT_CLASS nftClass) public pure returns (uint256 classNFTPrice) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DoAConstants.sol\":3380:3439  string public constant BASE_COMMON_URI = \"/common/metadata\" */\n    tag_92:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      0x2f636f6d6d6f6e2f6d6574616461746100000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":997:1047  uint16 public constant COMMON_NFT_SUPPLY_1st = 125 */\n    tag_95:\n        /* \"DoAConstants.sol\":1044:1047  125 */\n      0x7d\n        /* \"DoAConstants.sol\":997:1047  uint16 public constant COMMON_NFT_SUPPLY_1st = 125 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":834:882  uint16 public constant LEGEND_NFT_SUPPLY_1st = 1 */\n    tag_98:\n        /* \"DoAConstants.sol\":881:882  1 */\n      0x01\n        /* \"DoAConstants.sol\":834:882  uint16 public constant LEGEND_NFT_SUPPLY_1st = 1 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":4697:5316  function getClassName(NFT_CLASS nftClass) public pure returns (string memory tokenClassName) {... */\n    tag_102:\n        /* \"DoAConstants.sol\":4760:4788  string memory tokenClassName */\n      0x60\n        /* \"DoAConstants.sol\":4825:4839  NFT_CLASS.HERO */\n      0x00\n        /* \"DoAConstants.sol\":4813:4839  nftClass == NFT_CLASS.HERO */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_175\n      jump\t// in\n    tag_202:\n    tag_201:\n        /* \"DoAConstants.sol\":4813:4821  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":4813:4839  nftClass == NFT_CLASS.HERO */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_203\n      jumpi\n      tag_204\n      tag_175\n      jump\t// in\n    tag_204:\n    tag_203:\n      sub\n        /* \"DoAConstants.sol\":4809:5309  if (nftClass == NFT_CLASS.HERO) {... */\n      tag_205\n      jumpi\n        /* \"DoAConstants.sol\":4855:4878  tokenClassName = \"Hero\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x4865726f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4809:5309  if (nftClass == NFT_CLASS.HERO) {... */\n      jump(tag_206)\n    tag_205:\n        /* \"DoAConstants.sol\":4911:4927  NFT_CLASS.LEGEND */\n      0x01\n        /* \"DoAConstants.sol\":4899:4927  nftClass == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_207\n      jumpi\n      tag_208\n      tag_175\n      jump\t// in\n    tag_208:\n    tag_207:\n        /* \"DoAConstants.sol\":4899:4907  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":4899:4927  nftClass == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_209\n      jumpi\n      tag_210\n      tag_175\n      jump\t// in\n    tag_210:\n    tag_209:\n      sub\n        /* \"DoAConstants.sol\":4895:5309  if (nftClass == NFT_CLASS.LEGEND) {... */\n      tag_211\n      jumpi\n        /* \"DoAConstants.sol\":4943:4968  tokenClassName = \"Legend\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4c6567656e640000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4895:5309  if (nftClass == NFT_CLASS.LEGEND) {... */\n      jump(tag_212)\n    tag_211:\n        /* \"DoAConstants.sol\":5001:5015  NFT_CLASS.RARE */\n      0x02\n        /* \"DoAConstants.sol\":4989:5015  nftClass == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_213\n      jumpi\n      tag_214\n      tag_175\n      jump\t// in\n    tag_214:\n    tag_213:\n        /* \"DoAConstants.sol\":4989:4997  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":4989:5015  nftClass == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_215\n      jumpi\n      tag_216\n      tag_175\n      jump\t// in\n    tag_216:\n    tag_215:\n      sub\n        /* \"DoAConstants.sol\":4985:5309  if (nftClass == NFT_CLASS.RARE) {... */\n      tag_217\n      jumpi\n        /* \"DoAConstants.sol\":5031:5054  tokenClassName = \"Rare\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x5261726500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4985:5309  if (nftClass == NFT_CLASS.RARE) {... */\n      jump(tag_218)\n    tag_217:\n        /* \"DoAConstants.sol\":5087:5105  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"DoAConstants.sol\":5075:5105  nftClass == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_220\n      tag_175\n      jump\t// in\n    tag_220:\n    tag_219:\n        /* \"DoAConstants.sol\":5075:5083  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5075:5105  nftClass == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_222\n      tag_175\n      jump\t// in\n    tag_222:\n    tag_221:\n      sub\n        /* \"DoAConstants.sol\":5071:5309  if (nftClass == NFT_CLASS.UNCOMMON) {... */\n      tag_223\n      jumpi\n        /* \"DoAConstants.sol\":5121:5148  tokenClassName = \"Uncommon\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x556e636f6d6d6f6e000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5071:5309  if (nftClass == NFT_CLASS.UNCOMMON) {... */\n      jump(tag_224)\n    tag_223:\n        /* \"DoAConstants.sol\":5181:5197  NFT_CLASS.COMMON */\n      0x04\n        /* \"DoAConstants.sol\":5169:5197  nftClass == NFT_CLASS.COMMON */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_226\n      tag_175\n      jump\t// in\n    tag_226:\n    tag_225:\n        /* \"DoAConstants.sol\":5169:5177  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5169:5197  nftClass == NFT_CLASS.COMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_175\n      jump\t// in\n    tag_228:\n    tag_227:\n      sub\n        /* \"DoAConstants.sol\":5165:5309  if (nftClass == NFT_CLASS.COMMON) {... */\n      tag_229\n      jumpi\n        /* \"DoAConstants.sol\":5213:5238  tokenClassName = \"Common\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x436f6d6d6f6e0000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5165:5309  if (nftClass == NFT_CLASS.COMMON) {... */\n      jump(tag_230)\n    tag_229:\n        /* \"DoAConstants.sol\":5269:5298  revert(\"Invalid token class\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DoAConstants.sol\":5165:5309  if (nftClass == NFT_CLASS.COMMON) {... */\n    tag_230:\n        /* \"DoAConstants.sol\":5071:5309  if (nftClass == NFT_CLASS.UNCOMMON) {... */\n    tag_224:\n        /* \"DoAConstants.sol\":4985:5309  if (nftClass == NFT_CLASS.RARE) {... */\n    tag_218:\n        /* \"DoAConstants.sol\":4895:5309  if (nftClass == NFT_CLASS.LEGEND) {... */\n    tag_212:\n        /* \"DoAConstants.sol\":4809:5309  if (nftClass == NFT_CLASS.HERO) {... */\n    tag_206:\n        /* \"DoAConstants.sol\":4697:5316  function getClassName(NFT_CLASS nftClass) public pure returns (string memory tokenClassName) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DoAConstants.sol\":888:934  uint16 public constant RARE_NFT_SUPPLY_1st = 5 */\n    tag_105:\n        /* \"DoAConstants.sol\":933:934  5 */\n      0x05\n        /* \"DoAConstants.sol\":888:934  uint16 public constant RARE_NFT_SUPPLY_1st = 5 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2330:2382  uint16 public constant COMMON_NFT_START_INDEX = 3128 */\n    tag_108:\n        /* \"DoAConstants.sol\":2378:2382  3128 */\n      0x0c38\n        /* \"DoAConstants.sol\":2330:2382  uint16 public constant COMMON_NFT_START_INDEX = 3128 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2723:2777  uint256 public constant COMMON_NFT_PRICE = 0.066 ether */\n    tag_111:\n        /* \"DoAConstants.sol\":2766:2777  0.066 ether */\n      0xea7aa67b2d0000\n        /* \"DoAConstants.sol\":2723:2777  uint256 public constant COMMON_NFT_PRICE = 0.066 ether */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2160:2210  uint16 public constant LEGEND_NFT_START_INDEX = 25 */\n    tag_114:\n        /* \"DoAConstants.sol\":2208:2210  25 */\n      0x19\n        /* \"DoAConstants.sol\":2160:2210  uint16 public constant LEGEND_NFT_START_INDEX = 25 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1559:1612  uint16 public constant UNCOMMON_NFT_SUPPLY_3rd = 2000 */\n    tag_117:\n        /* \"DoAConstants.sol\":1608:1612  2000 */\n      0x07d0\n        /* \"DoAConstants.sol\":1559:1612  uint16 public constant UNCOMMON_NFT_SUPPLY_3rd = 2000 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1088:1134  uint16 public constant HERO_NFT_SUPPLY_2nd = 0 */\n    tag_120:\n        /* \"DoAConstants.sol\":1133:1134  0 */\n      0x00\n        /* \"DoAConstants.sol\":1088:1134  uint16 public constant HERO_NFT_SUPPLY_2nd = 0 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2658:2709  uint256 public constant RARE_NFT_PRICE = 0.33 ether */\n    tag_123:\n        /* \"DoAConstants.sol\":2699:2709  0.33 ether */\n      0x0494654067e10000\n        /* \"DoAConstants.sol\":2658:2709  uint256 public constant RARE_NFT_PRICE = 0.33 ether */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2791:2847  uint256 public constant UNCOMMON_NFT_PRICE = 0.013 ether */\n    tag_126:\n        /* \"DoAConstants.sol\":2836:2847  0.013 ether */\n      0x2e2f6e5e148000\n        /* \"DoAConstants.sol\":2791:2847  uint256 public constant UNCOMMON_NFT_PRICE = 0.013 ether */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1450:1499  uint16 public constant LEGEND_NFT_SUPPLY_3rd = 80 */\n    tag_129:\n        /* \"DoAConstants.sol\":1497:1499  80 */\n      0x50\n        /* \"DoAConstants.sol\":1450:1499  uint16 public constant LEGEND_NFT_SUPPLY_3rd = 80 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3250:3305  string public constant BASE_RARE_URI = \"/rare/metadata\" */\n    tag_132:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      0x2f726172652f6d65746164617461000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1306:1357  uint16 public constant COMMON_NFT_SUPPLY_2nd = 1250 */\n    tag_135:\n        /* \"DoAConstants.sol\":1353:1357  1250 */\n      0x04e2\n        /* \"DoAConstants.sol\":1306:1357  uint16 public constant COMMON_NFT_SUPPLY_2nd = 1250 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1505:1553  uint16 public constant RARE_NFT_SUPPLY_3rd = 400 */\n    tag_138:\n        /* \"DoAConstants.sol\":1550:1553  400 */\n      0x0190\n        /* \"DoAConstants.sol\":1505:1553  uint16 public constant RARE_NFT_SUPPLY_3rd = 400 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1618:1669  uint16 public constant COMMON_NFT_SUPPLY_3rd = 5770 */\n    tag_141:\n        /* \"DoAConstants.sol\":1665:1669  5770 */\n      0x168a\n        /* \"DoAConstants.sol\":1618:1669  uint16 public constant COMMON_NFT_SUPPLY_3rd = 5770 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3124:3179  string public constant BASE_HERO_URI = \"/hero/metadata\" */\n    tag_144:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      0x2f6865726f2f6d65746164617461000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3060:3117  string public constant BASE_URI = \"ipfs://<hash>/doa/nft\" */\n    tag_147:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      0x697066733a2f2f3c686173683e2f646f612f6e66740000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":781:828  uint16 public constant HERO_NFT_SUPPLY_1st = 25 */\n    tag_150:\n        /* \"DoAConstants.sol\":826:828  25 */\n      0x19\n        /* \"DoAConstants.sol\":781:828  uint16 public constant HERO_NFT_SUPPLY_1st = 25 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3747:4691  function getClassForTokenId(uint256 tokenId) public pure returns (NFT_CLASS tokenClass) {... */\n    tag_155:\n        /* \"DoAConstants.sol\":3813:3833  NFT_CLASS tokenClass */\n      0x00\n        /* \"DoAConstants.sol\":2153:2154  0 */\n      dup1\n        /* \"DoAConstants.sol\":3858:3902  tokenId >= DoAConstants.HERO_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":3858:3865  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":3858:3902  tokenId >= DoAConstants.HERO_NFT_START_INDEX */\n      lt\n      iszero\n        /* \"DoAConstants.sol\":3858:3951  tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":2208:2210  25 */\n      0x19\n        /* \"DoAConstants.sol\":3906:3951  tokenId < DoAConstants.LEGEND_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":3906:3913  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":3906:3951  tokenId < DoAConstants.LEGEND_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":3858:3951  tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX */\n    tag_234:\n        /* \"DoAConstants.sol\":3854:4657  if (tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"DoAConstants.sol\":3980:3994  NFT_CLASS.HERO */\n      0x00\n        /* \"DoAConstants.sol\":3967:3994  tokenClass = NFT_CLASS.HERO */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":3854:4657  if (tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX) {... */\n      jump(tag_236)\n    tag_235:\n        /* \"DoAConstants.sol\":2208:2210  25 */\n      0x19\n        /* \"DoAConstants.sol\":4015:4061  tokenId >= DoAConstants.LEGEND_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4015:4022  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4015:4061  tokenId >= DoAConstants.LEGEND_NFT_START_INDEX */\n      lt\n      iszero\n        /* \"DoAConstants.sol\":4015:4108  tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX */\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":2262:2265  126 */\n      0x7e\n        /* \"DoAConstants.sol\":4065:4108  tokenId < DoAConstants.RARE_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4065:4072  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4065:4108  tokenId < DoAConstants.RARE_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":4015:4108  tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX */\n    tag_237:\n        /* \"DoAConstants.sol\":4011:4657  if (tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"DoAConstants.sol\":4137:4153  NFT_CLASS.LEGEND */\n      0x01\n        /* \"DoAConstants.sol\":4124:4153  tokenClass = NFT_CLASS.LEGEND */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4011:4657  if (tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX) {... */\n      jump(tag_239)\n    tag_238:\n        /* \"DoAConstants.sol\":2262:2265  126 */\n      0x7e\n        /* \"DoAConstants.sol\":4174:4218  tokenId >= DoAConstants.RARE_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4174:4181  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4174:4218  tokenId >= DoAConstants.RARE_NFT_START_INDEX */\n      lt\n      iszero\n        /* \"DoAConstants.sol\":4174:4269  tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX */\n      dup1\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":2321:2324  627 */\n      0x0273\n        /* \"DoAConstants.sol\":4222:4269  tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4222:4229  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4222:4269  tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":4174:4269  tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX */\n    tag_240:\n        /* \"DoAConstants.sol\":4170:4657  if (tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"DoAConstants.sol\":4298:4312  NFT_CLASS.RARE */\n      0x02\n        /* \"DoAConstants.sol\":4285:4312  tokenClass = NFT_CLASS.RARE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4170:4657  if (tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX) {... */\n      jump(tag_242)\n    tag_241:\n        /* \"DoAConstants.sol\":2321:2324  627 */\n      0x0273\n        /* \"DoAConstants.sol\":4333:4381  tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4333:4340  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4333:4381  tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX */\n      lt\n      iszero\n        /* \"DoAConstants.sol\":4333:4430  tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX */\n      dup1\n      iszero\n      tag_243\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":2378:2382  3128 */\n      0x0c38\n        /* \"DoAConstants.sol\":4385:4430  tokenId < DoAConstants.COMMON_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4385:4392  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4385:4430  tokenId < DoAConstants.COMMON_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":4333:4430  tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX */\n    tag_243:\n        /* \"DoAConstants.sol\":4329:4657  if (tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"DoAConstants.sol\":4459:4477  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"DoAConstants.sol\":4446:4477  tokenClass = NFT_CLASS.UNCOMMON */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4329:4657  if (tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX) {... */\n      jump(tag_245)\n    tag_244:\n        /* \"DoAConstants.sol\":2378:2382  3128 */\n      0x0c38\n        /* \"DoAConstants.sol\":4498:4544  tokenId >= DoAConstants.COMMON_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4498:4505  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4498:4544  tokenId >= DoAConstants.COMMON_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":4494:4657  if (tokenId >= DoAConstants.COMMON_NFT_START_INDEX) {... */\n      tag_246\n      jumpi\n        /* \"DoAConstants.sol\":4573:4589  NFT_CLASS.COMMON */\n      0x04\n        /* \"DoAConstants.sol\":4560:4589  tokenClass = NFT_CLASS.COMMON */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4494:4657  if (tokenId >= DoAConstants.COMMON_NFT_START_INDEX) {... */\n      jump(tag_247)\n    tag_246:\n        /* \"DoAConstants.sol\":4620:4646  revert(\"Invalid token ID\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DoAConstants.sol\":4494:4657  if (tokenId >= DoAConstants.COMMON_NFT_START_INDEX) {... */\n    tag_247:\n        /* \"DoAConstants.sol\":4329:4657  if (tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX) {... */\n    tag_245:\n        /* \"DoAConstants.sol\":4170:4657  if (tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX) {... */\n    tag_242:\n        /* \"DoAConstants.sol\":4011:4657  if (tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX) {... */\n    tag_239:\n        /* \"DoAConstants.sol\":3854:4657  if (tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX) {... */\n    tag_236:\n        /* \"DoAConstants.sol\":3747:4691  function getClassForTokenId(uint256 tokenId) public pure returns (NFT_CLASS tokenClass) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DoAConstants.sol\":3641:3690  uint8 public constant PUBLIC_FUND_PERCENTAGE = 60 */\n    tag_159:\n        /* \"DoAConstants.sol\":3688:3690  60 */\n      0x3c\n        /* \"DoAConstants.sol\":3641:3690  uint8 public constant PUBLIC_FUND_PERCENTAGE = 60 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1398:1444  uint16 public constant HERO_NFT_SUPPLY_3rd = 0 */\n    tag_163:\n        /* \"DoAConstants.sol\":1443:1444  0 */\n      0x00\n        /* \"DoAConstants.sol\":1398:1444  uint16 public constant HERO_NFT_SUPPLY_3rd = 0 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1248:1300  uint16 public constant UNCOMMON_NFT_SUPPLY_2nd = 250 */\n    tag_166:\n        /* \"DoAConstants.sol\":1297:1300  250 */\n      0xfa\n        /* \"DoAConstants.sol\":1248:1300  uint16 public constant UNCOMMON_NFT_SUPPLY_2nd = 250 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":5912:6069  function testClassForTokenId(uint256 tokenId) public pure returns (string memory className) {... */\n    tag_170:\n        /* \"DoAConstants.sol\":5979:6002  string memory className */\n      0x60\n        /* \"DoAConstants.sol\":6021:6062  getClassName(getClassForTokenId(tokenId)) */\n      tag_251\n        /* \"DoAConstants.sol\":6034:6061  getClassForTokenId(tokenId) */\n      tag_252\n        /* \"DoAConstants.sol\":6053:6060  tokenId */\n      dup4\n        /* \"DoAConstants.sol\":6034:6052  getClassForTokenId */\n      tag_155\n        /* \"DoAConstants.sol\":6034:6061  getClassForTokenId(tokenId) */\n      jump\t// in\n    tag_252:\n        /* \"DoAConstants.sol\":6021:6033  getClassName */\n      tag_102\n        /* \"DoAConstants.sol\":6021:6062  getClassName(getClassForTokenId(tokenId)) */\n      jump\t// in\n    tag_251:\n        /* \"DoAConstants.sol\":6014:6062  return getClassName(getClassForTokenId(tokenId)) */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5912:6069  function testClassForTokenId(uint256 tokenId) public pure returns (string memory className) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:96   */\n    tag_253:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:89   */\n      0xffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:90   */\n      and\n        /* \"#utility.yul\":61:90   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:96   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":102:225   */\n    tag_254:\n        /* \"#utility.yul\":195:218   */\n      tag_285\n        /* \"#utility.yul\":212:217   */\n      dup2\n        /* \"#utility.yul\":195:218   */\n      tag_253\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":190:193   */\n      dup3\n        /* \"#utility.yul\":183:219   */\n      mstore\n        /* \"#utility.yul\":102:225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":231:465   */\n    tag_50:\n        /* \"#utility.yul\":330:334   */\n      0x00\n        /* \"#utility.yul\":368:370   */\n      0x20\n        /* \"#utility.yul\":357:366   */\n      dup3\n        /* \"#utility.yul\":353:371   */\n      add\n        /* \"#utility.yul\":345:371   */\n      swap1\n      pop\n        /* \"#utility.yul\":381:458   */\n      tag_287\n        /* \"#utility.yul\":455:456   */\n      0x00\n        /* \"#utility.yul\":444:453   */\n      dup4\n        /* \"#utility.yul\":440:457   */\n      add\n        /* \"#utility.yul\":431:437   */\n      dup5\n        /* \"#utility.yul\":381:458   */\n      tag_254\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":231:465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":471:570   */\n    tag_255:\n        /* \"#utility.yul\":523:529   */\n      0x00\n        /* \"#utility.yul\":557:562   */\n      dup2\n        /* \"#utility.yul\":551:563   */\n      mload\n        /* \"#utility.yul\":541:563   */\n      swap1\n      pop\n        /* \"#utility.yul\":471:570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":576:753   */\n    tag_256:\n        /* \"#utility.yul\":668:679   */\n      0x00\n        /* \"#utility.yul\":702:708   */\n      dup3\n        /* \"#utility.yul\":697:700   */\n      dup3\n        /* \"#utility.yul\":690:709   */\n      mstore\n        /* \"#utility.yul\":742:746   */\n      0x20\n        /* \"#utility.yul\":737:740   */\n      dup3\n        /* \"#utility.yul\":733:747   */\n      add\n        /* \"#utility.yul\":718:747   */\n      swap1\n      pop\n        /* \"#utility.yul\":576:753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":759:1005   */\n    tag_257:\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":850:963   */\n    tag_291:\n        /* \"#utility.yul\":864:870   */\n      dup4\n        /* \"#utility.yul\":861:862   */\n      dup2\n        /* \"#utility.yul\":858:871   */\n      lt\n        /* \"#utility.yul\":850:963   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":949:950   */\n      dup1\n        /* \"#utility.yul\":944:947   */\n      dup3\n        /* \"#utility.yul\":940:951   */\n      add\n        /* \"#utility.yul\":934:952   */\n      mload\n        /* \"#utility.yul\":930:931   */\n      dup2\n        /* \"#utility.yul\":925:928   */\n      dup5\n        /* \"#utility.yul\":921:932   */\n      add\n        /* \"#utility.yul\":914:953   */\n      mstore\n        /* \"#utility.yul\":886:888   */\n      0x20\n        /* \"#utility.yul\":883:884   */\n      dup2\n        /* \"#utility.yul\":879:889   */\n      add\n        /* \"#utility.yul\":874:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":850:963   */\n      jump(tag_291)\n    tag_293:\n        /* \"#utility.yul\":997:998   */\n      0x00\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:995   */\n      add\n        /* \"#utility.yul\":972:999   */\n      mstore\n        /* \"#utility.yul\":821:1005   */\n      pop\n        /* \"#utility.yul\":759:1005   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1011:1113   */\n    tag_258:\n        /* \"#utility.yul\":1052:1058   */\n      0x00\n        /* \"#utility.yul\":1103:1105   */\n      0x1f\n        /* \"#utility.yul\":1099:1106   */\n      not\n        /* \"#utility.yul\":1094:1096   */\n      0x1f\n        /* \"#utility.yul\":1087:1092   */\n      dup4\n        /* \"#utility.yul\":1083:1097   */\n      add\n        /* \"#utility.yul\":1079:1107   */\n      and\n        /* \"#utility.yul\":1069:1107   */\n      swap1\n      pop\n        /* \"#utility.yul\":1011:1113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1119:1512   */\n    tag_259:\n        /* \"#utility.yul\":1215:1218   */\n      0x00\n        /* \"#utility.yul\":1243:1282   */\n      tag_296\n        /* \"#utility.yul\":1276:1281   */\n      dup3\n        /* \"#utility.yul\":1243:1282   */\n      tag_255\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1298:1377   */\n      tag_297\n        /* \"#utility.yul\":1370:1376   */\n      dup2\n        /* \"#utility.yul\":1365:1368   */\n      dup6\n        /* \"#utility.yul\":1298:1377   */\n      tag_256\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1291:1377   */\n      swap4\n      pop\n        /* \"#utility.yul\":1386:1451   */\n      tag_298\n        /* \"#utility.yul\":1444:1450   */\n      dup2\n        /* \"#utility.yul\":1439:1442   */\n      dup6\n        /* \"#utility.yul\":1432:1436   */\n      0x20\n        /* \"#utility.yul\":1425:1430   */\n      dup7\n        /* \"#utility.yul\":1421:1437   */\n      add\n        /* \"#utility.yul\":1386:1451   */\n      tag_257\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1476:1505   */\n      tag_299\n        /* \"#utility.yul\":1498:1504   */\n      dup2\n        /* \"#utility.yul\":1476:1505   */\n      tag_258\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1471:1474   */\n      dup5\n        /* \"#utility.yul\":1467:1506   */\n      add\n        /* \"#utility.yul\":1460:1506   */\n      swap2\n      pop\n        /* \"#utility.yul\":1219:1512   */\n      pop\n        /* \"#utility.yul\":1119:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1847   */\n    tag_60:\n        /* \"#utility.yul\":1639:1643   */\n      0x00\n        /* \"#utility.yul\":1677:1679   */\n      0x20\n        /* \"#utility.yul\":1666:1675   */\n      dup3\n        /* \"#utility.yul\":1662:1680   */\n      add\n        /* \"#utility.yul\":1654:1680   */\n      swap1\n      pop\n        /* \"#utility.yul\":1726:1735   */\n      dup2\n        /* \"#utility.yul\":1720:1724   */\n      dup2\n        /* \"#utility.yul\":1716:1736   */\n      sub\n        /* \"#utility.yul\":1712:1713   */\n      0x00\n        /* \"#utility.yul\":1701:1710   */\n      dup4\n        /* \"#utility.yul\":1697:1714   */\n      add\n        /* \"#utility.yul\":1690:1737   */\n      mstore\n        /* \"#utility.yul\":1754:1840   */\n      tag_301\n        /* \"#utility.yul\":1835:1839   */\n      dup2\n        /* \"#utility.yul\":1826:1832   */\n      dup5\n        /* \"#utility.yul\":1754:1840   */\n      tag_259\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1746:1840   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1853:1930   */\n    tag_260:\n        /* \"#utility.yul\":1890:1897   */\n      0x00\n        /* \"#utility.yul\":1919:1924   */\n      dup2\n        /* \"#utility.yul\":1908:1924   */\n      swap1\n      pop\n        /* \"#utility.yul\":1853:1930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1936:2062   */\n    tag_261:\n        /* \"#utility.yul\":2031:2055   */\n      tag_304\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_260\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2026:2029   */\n      dup3\n        /* \"#utility.yul\":2019:2056   */\n      mstore\n        /* \"#utility.yul\":1936:2062   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2068:2306   */\n    tag_70:\n        /* \"#utility.yul\":2169:2173   */\n      0x00\n        /* \"#utility.yul\":2207:2209   */\n      0x20\n        /* \"#utility.yul\":2196:2205   */\n      dup3\n        /* \"#utility.yul\":2192:2210   */\n      add\n        /* \"#utility.yul\":2184:2210   */\n      swap1\n      pop\n        /* \"#utility.yul\":2220:2299   */\n      tag_306\n        /* \"#utility.yul\":2296:2297   */\n      0x00\n        /* \"#utility.yul\":2285:2294   */\n      dup4\n        /* \"#utility.yul\":2281:2298   */\n      add\n        /* \"#utility.yul\":2272:2278   */\n      dup5\n        /* \"#utility.yul\":2220:2299   */\n      tag_261\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2068:2306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2393:2510   */\n    tag_263:\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      dup1\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2639:2752   */\n    tag_265:\n        /* \"#utility.yul\":2726:2727   */\n      0x05\n        /* \"#utility.yul\":2719:2724   */\n      dup2\n        /* \"#utility.yul\":2716:2728   */\n      lt\n        /* \"#utility.yul\":2706:2746   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":2742:2743   */\n      0x00\n        /* \"#utility.yul\":2739:2740   */\n      dup1\n        /* \"#utility.yul\":2732:2744   */\n      revert\n        /* \"#utility.yul\":2706:2746   */\n    tag_311:\n        /* \"#utility.yul\":2639:2752   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2758:2925   */\n    tag_266:\n        /* \"#utility.yul\":2818:2823   */\n      0x00\n        /* \"#utility.yul\":2856:2862   */\n      dup2\n        /* \"#utility.yul\":2843:2863   */\n      calldataload\n        /* \"#utility.yul\":2834:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2919   */\n      tag_313\n        /* \"#utility.yul\":2913:2918   */\n      dup2\n        /* \"#utility.yul\":2872:2919   */\n      tag_265\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2758:2925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2931:3288   */\n    tag_88:\n        /* \"#utility.yul\":3004:3010   */\n      0x00\n        /* \"#utility.yul\":3053:3055   */\n      0x20\n        /* \"#utility.yul\":3041:3050   */\n      dup3\n        /* \"#utility.yul\":3032:3039   */\n      dup5\n        /* \"#utility.yul\":3028:3051   */\n      sub\n        /* \"#utility.yul\":3024:3056   */\n      slt\n        /* \"#utility.yul\":3021:3140   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3059:3138   */\n      tag_316\n      tag_263\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3021:3140   */\n    tag_315:\n        /* \"#utility.yul\":3179:3180   */\n      0x00\n        /* \"#utility.yul\":3204:3271   */\n      tag_317\n        /* \"#utility.yul\":3263:3270   */\n      dup5\n        /* \"#utility.yul\":3254:3260   */\n      dup3\n        /* \"#utility.yul\":3243:3252   */\n      dup6\n        /* \"#utility.yul\":3239:3261   */\n      add\n        /* \"#utility.yul\":3204:3271   */\n      tag_266\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3194:3271   */\n      swap2\n      pop\n        /* \"#utility.yul\":3150:3281   */\n      pop\n        /* \"#utility.yul\":2931:3288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3294:3416   */\n    tag_267:\n        /* \"#utility.yul\":3367:3391   */\n      tag_319\n        /* \"#utility.yul\":3385:3390   */\n      dup2\n        /* \"#utility.yul\":3367:3391   */\n      tag_260\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3360:3365   */\n      dup2\n        /* \"#utility.yul\":3357:3392   */\n      eq\n        /* \"#utility.yul\":3347:3410   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3403:3404   */\n      dup1\n        /* \"#utility.yul\":3396:3408   */\n      revert\n        /* \"#utility.yul\":3347:3410   */\n    tag_320:\n        /* \"#utility.yul\":3294:3416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3422:3561   */\n    tag_268:\n        /* \"#utility.yul\":3468:3473   */\n      0x00\n        /* \"#utility.yul\":3506:3512   */\n      dup2\n        /* \"#utility.yul\":3493:3513   */\n      calldataload\n        /* \"#utility.yul\":3484:3513   */\n      swap1\n      pop\n        /* \"#utility.yul\":3522:3555   */\n      tag_322\n        /* \"#utility.yul\":3549:3554   */\n      dup2\n        /* \"#utility.yul\":3522:3555   */\n      tag_267\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3422:3561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3896   */\n    tag_154:\n        /* \"#utility.yul\":3626:3632   */\n      0x00\n        /* \"#utility.yul\":3675:3677   */\n      0x20\n        /* \"#utility.yul\":3663:3672   */\n      dup3\n        /* \"#utility.yul\":3654:3661   */\n      dup5\n        /* \"#utility.yul\":3650:3673   */\n      sub\n        /* \"#utility.yul\":3646:3678   */\n      slt\n        /* \"#utility.yul\":3643:3762   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3681:3760   */\n      tag_325\n      tag_263\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3643:3762   */\n    tag_324:\n        /* \"#utility.yul\":3801:3802   */\n      0x00\n        /* \"#utility.yul\":3826:3879   */\n      tag_326\n        /* \"#utility.yul\":3871:3878   */\n      dup5\n        /* \"#utility.yul\":3862:3868   */\n      dup3\n        /* \"#utility.yul\":3851:3860   */\n      dup6\n        /* \"#utility.yul\":3847:3869   */\n      add\n        /* \"#utility.yul\":3826:3879   */\n      tag_268\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3816:3879   */\n      swap2\n      pop\n        /* \"#utility.yul\":3772:3889   */\n      pop\n        /* \"#utility.yul\":3567:3896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3902:4082   */\n    tag_175:\n        /* \"#utility.yul\":3950:4027   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3947:3948   */\n      0x00\n        /* \"#utility.yul\":3940:4028   */\n      mstore\n        /* \"#utility.yul\":4047:4051   */\n      0x21\n        /* \"#utility.yul\":4044:4045   */\n      0x04\n        /* \"#utility.yul\":4037:4052   */\n      mstore\n        /* \"#utility.yul\":4071:4075   */\n      0x24\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4061:4076   */\n      revert\n        /* \"#utility.yul\":4088:4207   */\n    tag_269:\n        /* \"#utility.yul\":4175:4176   */\n      0x05\n        /* \"#utility.yul\":4168:4173   */\n      dup2\n        /* \"#utility.yul\":4165:4177   */\n      lt\n        /* \"#utility.yul\":4155:4201   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4181:4199   */\n      tag_330\n      tag_175\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4155:4201   */\n    tag_329:\n        /* \"#utility.yul\":4088:4207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4213:4352   */\n    tag_270:\n        /* \"#utility.yul\":4264:4271   */\n      0x00\n        /* \"#utility.yul\":4293:4298   */\n      dup2\n        /* \"#utility.yul\":4282:4298   */\n      swap1\n      pop\n        /* \"#utility.yul\":4299:4346   */\n      tag_332\n        /* \"#utility.yul\":4340:4345   */\n      dup3\n        /* \"#utility.yul\":4299:4346   */\n      tag_269\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4213:4352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4358:4497   */\n    tag_271:\n        /* \"#utility.yul\":4420:4429   */\n      0x00\n        /* \"#utility.yul\":4453:4491   */\n      tag_334\n        /* \"#utility.yul\":4485:4490   */\n      dup3\n        /* \"#utility.yul\":4453:4491   */\n      tag_270\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4440:4491   */\n      swap1\n      pop\n        /* \"#utility.yul\":4358:4497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4503:4666   */\n    tag_272:\n        /* \"#utility.yul\":4610:4659   */\n      tag_336\n        /* \"#utility.yul\":4653:4658   */\n      dup2\n        /* \"#utility.yul\":4610:4659   */\n      tag_271\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4605:4608   */\n      dup3\n        /* \"#utility.yul\":4598:4660   */\n      mstore\n        /* \"#utility.yul\":4503:4666   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4672:4934   */\n    tag_157:\n        /* \"#utility.yul\":4785:4789   */\n      0x00\n        /* \"#utility.yul\":4823:4825   */\n      0x20\n        /* \"#utility.yul\":4812:4821   */\n      dup3\n        /* \"#utility.yul\":4808:4826   */\n      add\n        /* \"#utility.yul\":4800:4826   */\n      swap1\n      pop\n        /* \"#utility.yul\":4836:4927   */\n      tag_338\n        /* \"#utility.yul\":4924:4925   */\n      0x00\n        /* \"#utility.yul\":4913:4922   */\n      dup4\n        /* \"#utility.yul\":4909:4926   */\n      add\n        /* \"#utility.yul\":4900:4906   */\n      dup5\n        /* \"#utility.yul\":4836:4927   */\n      tag_272\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4672:4934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4940:5026   */\n    tag_273:\n        /* \"#utility.yul\":4975:4982   */\n      0x00\n        /* \"#utility.yul\":5015:5019   */\n      0xff\n        /* \"#utility.yul\":5008:5013   */\n      dup3\n        /* \"#utility.yul\":5004:5020   */\n      and\n        /* \"#utility.yul\":4993:5020   */\n      swap1\n      pop\n        /* \"#utility.yul\":4940:5026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5032:5152   */\n    tag_274:\n        /* \"#utility.yul\":5123:5145   */\n      tag_341\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5123:5145   */\n      tag_273\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5118:5121   */\n      dup3\n        /* \"#utility.yul\":5111:5146   */\n      mstore\n        /* \"#utility.yul\":5032:5152   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5158:5388   */\n    tag_161:\n        /* \"#utility.yul\":5255:5259   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5282:5291   */\n      dup3\n        /* \"#utility.yul\":5278:5296   */\n      add\n        /* \"#utility.yul\":5270:5296   */\n      swap1\n      pop\n        /* \"#utility.yul\":5306:5381   */\n      tag_343\n        /* \"#utility.yul\":5378:5379   */\n      0x00\n        /* \"#utility.yul\":5367:5376   */\n      dup4\n        /* \"#utility.yul\":5363:5380   */\n      add\n        /* \"#utility.yul\":5354:5360   */\n      dup5\n        /* \"#utility.yul\":5306:5381   */\n      tag_274\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5158:5388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5563   */\n    tag_275:\n        /* \"#utility.yul\":5478:5489   */\n      0x00\n        /* \"#utility.yul\":5512:5518   */\n      dup3\n        /* \"#utility.yul\":5507:5510   */\n      dup3\n        /* \"#utility.yul\":5500:5519   */\n      mstore\n        /* \"#utility.yul\":5552:5556   */\n      0x20\n        /* \"#utility.yul\":5547:5550   */\n      dup3\n        /* \"#utility.yul\":5543:5557   */\n      add\n        /* \"#utility.yul\":5528:5557   */\n      swap1\n      pop\n        /* \"#utility.yul\":5394:5563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5569:5732   */\n    tag_276:\n        /* \"#utility.yul\":5709:5724   */\n      0x496e76616c696420636c61737300000000000000000000000000000000000000\n        /* \"#utility.yul\":5705:5706   */\n      0x00\n        /* \"#utility.yul\":5697:5703   */\n      dup3\n        /* \"#utility.yul\":5693:5707   */\n      add\n        /* \"#utility.yul\":5686:5725   */\n      mstore\n        /* \"#utility.yul\":5569:5732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5738:6104   */\n    tag_277:\n        /* \"#utility.yul\":5880:5883   */\n      0x00\n        /* \"#utility.yul\":5901:5968   */\n      tag_347\n        /* \"#utility.yul\":5965:5967   */\n      0x0d\n        /* \"#utility.yul\":5960:5963   */\n      dup4\n        /* \"#utility.yul\":5901:5968   */\n      tag_275\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5894:5968   */\n      swap2\n      pop\n        /* \"#utility.yul\":5977:6070   */\n      tag_348\n        /* \"#utility.yul\":6066:6069   */\n      dup3\n        /* \"#utility.yul\":5977:6070   */\n      tag_276\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6095:6097   */\n      0x20\n        /* \"#utility.yul\":6090:6093   */\n      dup3\n        /* \"#utility.yul\":6086:6098   */\n      add\n        /* \"#utility.yul\":6079:6098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5738:6104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6110:6529   */\n    tag_199:\n        /* \"#utility.yul\":6276:6280   */\n      0x00\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"#utility.yul\":6303:6312   */\n      dup3\n        /* \"#utility.yul\":6299:6317   */\n      add\n        /* \"#utility.yul\":6291:6317   */\n      swap1\n      pop\n        /* \"#utility.yul\":6363:6372   */\n      dup2\n        /* \"#utility.yul\":6357:6361   */\n      dup2\n        /* \"#utility.yul\":6353:6373   */\n      sub\n        /* \"#utility.yul\":6349:6350   */\n      0x00\n        /* \"#utility.yul\":6338:6347   */\n      dup4\n        /* \"#utility.yul\":6334:6351   */\n      add\n        /* \"#utility.yul\":6327:6374   */\n      mstore\n        /* \"#utility.yul\":6391:6522   */\n      tag_350\n        /* \"#utility.yul\":6517:6521   */\n      dup2\n        /* \"#utility.yul\":6391:6522   */\n      tag_277\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6383:6522   */\n      swap1\n      pop\n        /* \"#utility.yul\":6110:6529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6535:6704   */\n    tag_278:\n        /* \"#utility.yul\":6675:6696   */\n      0x496e76616c696420746f6b656e20636c61737300000000000000000000000000\n        /* \"#utility.yul\":6671:6672   */\n      0x00\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6659:6673   */\n      add\n        /* \"#utility.yul\":6652:6697   */\n      mstore\n        /* \"#utility.yul\":6535:6704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6710:7076   */\n    tag_279:\n        /* \"#utility.yul\":6852:6855   */\n      0x00\n        /* \"#utility.yul\":6873:6940   */\n      tag_353\n        /* \"#utility.yul\":6937:6939   */\n      0x13\n        /* \"#utility.yul\":6932:6935   */\n      dup4\n        /* \"#utility.yul\":6873:6940   */\n      tag_275\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6866:6940   */\n      swap2\n      pop\n        /* \"#utility.yul\":6949:7042   */\n      tag_354\n        /* \"#utility.yul\":7038:7041   */\n      dup3\n        /* \"#utility.yul\":6949:7042   */\n      tag_278\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7067:7069   */\n      0x20\n        /* \"#utility.yul\":7062:7065   */\n      dup3\n        /* \"#utility.yul\":7058:7070   */\n      add\n        /* \"#utility.yul\":7051:7070   */\n      swap1\n      pop\n        /* \"#utility.yul\":6710:7076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7082:7501   */\n    tag_232:\n        /* \"#utility.yul\":7248:7252   */\n      0x00\n        /* \"#utility.yul\":7286:7288   */\n      0x20\n        /* \"#utility.yul\":7275:7284   */\n      dup3\n        /* \"#utility.yul\":7271:7289   */\n      add\n        /* \"#utility.yul\":7263:7289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7335:7344   */\n      dup2\n        /* \"#utility.yul\":7329:7333   */\n      dup2\n        /* \"#utility.yul\":7325:7345   */\n      sub\n        /* \"#utility.yul\":7321:7322   */\n      0x00\n        /* \"#utility.yul\":7310:7319   */\n      dup4\n        /* \"#utility.yul\":7306:7323   */\n      add\n        /* \"#utility.yul\":7299:7346   */\n      mstore\n        /* \"#utility.yul\":7363:7494   */\n      tag_356\n        /* \"#utility.yul\":7489:7493   */\n      dup2\n        /* \"#utility.yul\":7363:7494   */\n      tag_279\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7355:7494   */\n      swap1\n      pop\n        /* \"#utility.yul\":7082:7501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7507:7673   */\n    tag_280:\n        /* \"#utility.yul\":7647:7665   */\n      0x496e76616c696420746f6b656e20494400000000000000000000000000000000\n        /* \"#utility.yul\":7643:7644   */\n      0x00\n        /* \"#utility.yul\":7635:7641   */\n      dup3\n        /* \"#utility.yul\":7631:7645   */\n      add\n        /* \"#utility.yul\":7624:7666   */\n      mstore\n        /* \"#utility.yul\":7507:7673   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7679:8045   */\n    tag_281:\n        /* \"#utility.yul\":7821:7824   */\n      0x00\n        /* \"#utility.yul\":7842:7909   */\n      tag_359\n        /* \"#utility.yul\":7906:7908   */\n      0x10\n        /* \"#utility.yul\":7901:7904   */\n      dup4\n        /* \"#utility.yul\":7842:7909   */\n      tag_275\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7835:7909   */\n      swap2\n      pop\n        /* \"#utility.yul\":7918:8011   */\n      tag_360\n        /* \"#utility.yul\":8007:8010   */\n      dup3\n        /* \"#utility.yul\":7918:8011   */\n      tag_280\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8036:8038   */\n      0x20\n        /* \"#utility.yul\":8031:8034   */\n      dup3\n        /* \"#utility.yul\":8027:8039   */\n      add\n        /* \"#utility.yul\":8020:8039   */\n      swap1\n      pop\n        /* \"#utility.yul\":7679:8045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8051:8470   */\n    tag_249:\n        /* \"#utility.yul\":8217:8221   */\n      0x00\n        /* \"#utility.yul\":8255:8257   */\n      0x20\n        /* \"#utility.yul\":8244:8253   */\n      dup3\n        /* \"#utility.yul\":8240:8258   */\n      add\n        /* \"#utility.yul\":8232:8258   */\n      swap1\n      pop\n        /* \"#utility.yul\":8304:8313   */\n      dup2\n        /* \"#utility.yul\":8298:8302   */\n      dup2\n        /* \"#utility.yul\":8294:8314   */\n      sub\n        /* \"#utility.yul\":8290:8291   */\n      0x00\n        /* \"#utility.yul\":8279:8288   */\n      dup4\n        /* \"#utility.yul\":8275:8292   */\n      add\n        /* \"#utility.yul\":8268:8315   */\n      mstore\n        /* \"#utility.yul\":8332:8463   */\n      tag_362\n        /* \"#utility.yul\":8458:8462   */\n      dup2\n        /* \"#utility.yul\":8332:8463   */\n      tag_281\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8324:8463   */\n      swap1\n      pop\n        /* \"#utility.yul\":8051:8470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207962e6d9f810008cf532599fa7a8ff39a064faaa27845750e28fb49db2c8845d64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x11BB PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EE58048 GT PUSH2 0x13A JUMPI DUP1 PUSH4 0xCA45F599 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0xED944CB6 GT PUSH2 0x86 JUMPI DUP1 PUSH4 0xED944CB6 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xEDA14323 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xF41DC7D2 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xF59528D2 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xFD642870 EQ PUSH2 0x6CD JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xCA45F599 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xCB937D2B EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xCFC2ABB7 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xDBDDB26A EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xE93E980B EQ PUSH2 0x625 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xBE8CA905 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xBE8CA905 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xBEB9E75E EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xBF0832AE EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xC244E88B EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xC525C0C8 EQ PUSH2 0x58F JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x9EE58048 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xA1BD4A07 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xA1D2002D EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA83179DB EQ PUSH2 0x4F9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x5E28C936 GT PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x828D481B GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x828D481B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x8D1DA411 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x8F5236E5 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x970F6E2F EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x971CBA96 EQ PUSH2 0x481 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x5E28C936 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x6871D79F EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x6B606F0F EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6E2F5A5F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x811D5C6C EQ PUSH2 0x3D9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x32A41506 GT PUSH2 0x20F JUMPI DUP1 PUSH4 0x32A41506 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x38D79B52 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x4E2ECCA1 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x58A0D923 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x5E09346A EQ PUSH2 0x331 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x10A309F3 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x11F47EB5 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x1AB7730C EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x1EB1A2D3 EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FF PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46B PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51F PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53D PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55B PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x579 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x597 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F1 PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60F PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62D PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67B PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x699 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B7 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7E DUP2 JUMP JUMPDEST PUSH2 0x273 DUP2 JUMP JUMPDEST PUSH2 0x618 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F6C6567656E642F6D6574616461746100000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB5 DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH8 0x16C2734F97A40000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F756E636F6D6D6F6E2F6D657461646174610000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x203A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI PUSH2 0x7D3 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x7E9 JUMPI PUSH8 0x16C2734F97A40000 SWAP1 POP PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7FD JUMPI PUSH2 0x7FC PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x810 JUMPI PUSH2 0x80F PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x825 JUMPI PUSH8 0x494654067E10000 SWAP1 POP PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x860 JUMPI PUSH7 0x2E2F6E5E148000 SWAP1 POP PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x89A JUMPI PUSH7 0xEA7AA67B2D0000 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP1 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F636F6D6D6F6E2F6D6574616461746100000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x7D DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x936 JUMPI PUSH2 0x935 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x948 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4865726F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B1 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6567656E640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA1B JUMPI PUSH2 0xA1A PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5261726500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA71 JUMPI PUSH2 0xA70 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA84 JUMPI PUSH2 0xA83 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E636F6D6D6F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAEC JUMPI PUSH2 0xAEB PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F6D6D6F6E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB60 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0xC38 DUP2 JUMP JUMPDEST PUSH7 0xEA7AA67B2D0000 DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH8 0x494654067E10000 DUP2 JUMP JUMPDEST PUSH7 0x2E2F6E5E148000 DUP2 JUMP JUMPDEST PUSH1 0x50 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F726172652F6D65746164617461000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x4E2 DUP2 JUMP JUMPDEST PUSH2 0x190 DUP2 JUMP JUMPDEST PUSH2 0x168A DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F6865726F2F6D65746164617461000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F3C686173683E2F646F612F6E66740000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xC90 JUMPI POP PUSH1 0x19 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x19 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xCB7 JUMPI POP PUSH1 0x7E PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x7E PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI POP PUSH2 0x273 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x273 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xD08 JUMPI POP PUSH2 0xC38 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xD16 JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0xD68 JUMP JUMPDEST PUSH2 0xC38 PUSH2 0xFFFF AND DUP3 LT PUSH2 0xD2C JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3C DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0xFA DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD92 PUSH2 0xD8D DUP4 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB0 DUP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xE3D DUP2 DUP6 PUSH2 0xDDC JUMP JUMPDEST SWAP4 POP PUSH2 0xE4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE56 DUP2 PUSH2 0xE17 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7B DUP2 DUP5 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE96 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEDB DUP2 PUSH2 0xEBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF7 JUMPI PUSH2 0xEF6 PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF05 DUP5 DUP3 DUP6 ADD PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF17 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP2 EQ PUSH2 0xF22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF34 DUP2 PUSH2 0xF0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH2 0xF4F PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF5E DUP5 DUP3 DUP6 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xFB8 DUP3 PUSH2 0xF96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC8 DUP3 PUSH2 0xFAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD8 DUP2 PUSH2 0xFBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100F DUP2 PUSH2 0xFF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636C61737300000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 PUSH1 0xD DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 DUP3 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A6 DUP2 PUSH2 0x106A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20636C61737300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 PUSH1 0x13 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x10EE DUP3 PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1112 DUP2 PUSH2 0x10D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114F PUSH1 0x10 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x115A DUP3 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x117E DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x62E6D9F810008CF532599FA7A8FF39A064FAAA27845750E28FB4 SWAP14 0xB2 0xC8 DUP5 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "503:5569:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BASE_COMMON_URI_1517": {
									"entryPoint": 2269,
									"id": 1517,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_HERO_URI_1505": {
									"entryPoint": 3071,
									"id": 1505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_LEGEND_URI_1508": {
									"entryPoint": 1806,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_RARE_URI_1511": {
									"entryPoint": 2996,
									"id": 1511,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_UNCOMMON_URI_1514": {
									"entryPoint": 1900,
									"id": 1514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_URI_1502": {
									"entryPoint": 3128,
									"id": 1502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_PRICE_1496": {
									"entryPoint": 2941,
									"id": 1496,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_START_INDEX_1487": {
									"entryPoint": 2935,
									"id": 1487,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_SUPPLY_1st_1433": {
									"entryPoint": 2326,
									"id": 1433,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_SUPPLY_2nd_1448": {
									"entryPoint": 3053,
									"id": 1448,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_SUPPLY_3rd_1463": {
									"entryPoint": 3065,
									"id": 1463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HERO_NFT_START_INDEX_1475": {
									"entryPoint": 1885,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HERO_NFT_SUPPLY_1st_1421": {
									"entryPoint": 3185,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HERO_NFT_SUPPLY_2nd_1436": {
									"entryPoint": 2963,
									"id": 1436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HERO_NFT_SUPPLY_3rd_1451": {
									"entryPoint": 3445,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_PRICE_1490": {
									"entryPoint": 1873,
									"id": 1490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_START_INDEX_1478": {
									"entryPoint": 2952,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_SUPPLY_1st_1424": {
									"entryPoint": 2331,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_SUPPLY_2nd_1439": {
									"entryPoint": 1868,
									"id": 1439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_SUPPLY_3rd_1454": {
									"entryPoint": 2991,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFT_SUPPLY_1st_1466": {
									"entryPoint": 1863,
									"id": 1466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFT_SUPPLY_2nd_1469": {
									"entryPoint": 1800,
									"id": 1469,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFT_SUPPLY_3rd_1472": {
									"entryPoint": 1957,
									"id": 1472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PUBLIC_FUND_PERCENTAGE_1520": {
									"entryPoint": 3440,
									"id": 1520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_PRICE_1493": {
									"entryPoint": 2968,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_START_INDEX_1481": {
									"entryPoint": 1789,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_SUPPLY_1st_1427": {
									"entryPoint": 2930,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_SUPPLY_2nd_1442": {
									"entryPoint": 1890,
									"id": 1442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_SUPPLY_3rd_1457": {
									"entryPoint": 3059,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_PRICE_1499": {
									"entryPoint": 2980,
									"id": 1499,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_START_INDEX_1484": {
									"entryPoint": 1794,
									"id": 1484,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_SUPPLY_1st_1430": {
									"entryPoint": 1895,
									"id": 1430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_SUPPLY_2nd_1445": {
									"entryPoint": 3450,
									"id": 1445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_SUPPLY_3rd_1460": {
									"entryPoint": 2957,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getClassForTokenId_1611": {
									"entryPoint": 3190,
									"id": 1611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getClassName_1675": {
									"entryPoint": 2336,
									"id": 1675,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getClassPrice_1730": {
									"entryPoint": 1963,
									"id": 1730,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@testClassForTokenId_1744": {
									"entryPoint": 3455,
									"id": 1744,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_NFT_CLASS_$1418": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_NFT_CLASS_$1418": {
									"entryPoint": 3809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_NFT_CLASS_$1418_to_t_uint8_fromStack_library": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack_library": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 3725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack_library": {
									"entryPoint": 4102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_NFT_CLASS_$1418__to_t_uint8__fromStack_library_reversed": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_enum$_NFT_CLASS_$1418": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_NFT_CLASS_$1418_to_t_uint8": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18": {
									"entryPoint": 4269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_NFT_CLASS_$1418": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_NFT_CLASS_$1418": {
									"entryPoint": 3772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8473:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:45:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "83:6:10",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:18:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "43:7:10",
														"type": ""
													}
												],
												"src": "7:89:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "173:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "190:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "195:16:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "195:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:36:10"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "161:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "168:3:10",
														"type": ""
													}
												],
												"src": "102:123:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "335:130:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "345:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "357:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "368:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "353:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "345:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "431:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "444:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "455:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "440:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "440:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "381:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:77:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "381:77:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "307:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "319:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "330:4:10",
														"type": ""
													}
												],
												"src": "231:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "530:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "541:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "557:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "551:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "513:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "523:6:10",
														"type": ""
													}
												],
												"src": "471:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "680:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "697:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "702:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "690:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "718:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "737:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "718:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "657:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "668:11:10",
														"type": ""
													}
												],
												"src": "576:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "821:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "831:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "840:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "835:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "925:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "930:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "921:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "921:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "944:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "949:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "940:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "940:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "934:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "934:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "914:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "914:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "914:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "861:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "864:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "858:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "872:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "874:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "883:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "886:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "879:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "879:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "874:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "854:3:10",
																"statements": []
															},
															"src": "850:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "983:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "988:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "979:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "979:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "997:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "972:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "972:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "803:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "808:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:10",
														"type": ""
													}
												],
												"src": "759:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1059:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1069:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1087:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1094:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1083:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1083:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1103:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1079:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1069:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1042:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1052:6:10",
														"type": ""
													}
												],
												"src": "1011:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1219:293:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1229:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1276:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1243:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1233:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1291:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1365:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1298:66:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:79:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1425:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1432:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1439:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1444:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1386:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1460:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1498:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1476:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1476:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1207:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1215:3:10",
														"type": ""
													}
												],
												"src": "1119:393:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:203:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1654:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1666:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1662:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1654:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1701:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1712:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1720:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1726:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1690:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1746:94:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1835:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1754:71:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:86:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1616:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1628:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1639:4:10",
														"type": ""
													}
												],
												"src": "1518:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1898:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1908:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1919:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1908:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1880:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1890:7:10",
														"type": ""
													}
												],
												"src": "1853:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2009:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2026:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2049:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2031:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2031:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1997:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2004:3:10",
														"type": ""
													}
												],
												"src": "1936:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2174:132:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2184:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2196:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2207:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2192:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2184:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2272:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2285:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2296:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2281:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2281:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "2220:51:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:79:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:79:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2146:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2158:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2169:4:10",
														"type": ""
													}
												],
												"src": "2068:238:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2352:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2362:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2378:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2372:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2312:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2482:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2502:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2492:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2492:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2393:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2625:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2516:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2696:56:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2739:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2742:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2732:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2726:1:10",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2716:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:20:10"
															},
															"nodeType": "YulIf",
															"src": "2706:40:10"
														}
													]
												},
												"name": "validator_revert_t_enum$_NFT_CLASS_$1418",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2689:5:10",
														"type": ""
													}
												],
												"src": "2639:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:101:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2834:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2913:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_NFT_CLASS_$1418",
																	"nodeType": "YulIdentifier",
																	"src": "2872:40:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:47:10"
														}
													]
												},
												"name": "abi_decode_t_enum$_NFT_CLASS_$1418",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2802:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2810:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2818:5:10",
														"type": ""
													}
												],
												"src": "2758:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3011:277:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3057:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3059:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3059:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3059:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3032:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3041:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3028:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3028:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3024:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:32:10"
															},
															"nodeType": "YulIf",
															"src": "3021:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3150:131:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3165:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3179:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3169:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3194:77:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3243:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3254:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3239:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3239:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3263:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_NFT_CLASS_$1418",
																			"nodeType": "YulIdentifier",
																			"src": "3204:34:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3204:67:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3194:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_NFT_CLASS_$1418",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2981:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2992:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3004:6:10",
														"type": ""
													}
												],
												"src": "2931:357:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3337:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3394:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3403:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3406:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3396:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3396:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3396:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3360:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3385:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3367:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3367:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3357:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3357:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:43:10"
															},
															"nodeType": "YulIf",
															"src": "3347:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3330:5:10",
														"type": ""
													}
												],
												"src": "3294:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3474:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3484:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3506:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3493:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3484:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3549:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3522:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3452:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3460:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3468:5:10",
														"type": ""
													}
												],
												"src": "3422:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3633:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3679:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3681:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3681:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3681:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3654:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3663:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3675:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:32:10"
															},
															"nodeType": "YulIf",
															"src": "3643:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3772:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3787:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3791:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3816:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3851:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3862:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3847:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3847:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3871:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3826:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3826:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3816:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3603:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3614:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3626:6:10",
														"type": ""
													}
												],
												"src": "3567:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3930:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3947:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3940:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3940:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4047:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4037:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4061:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4061:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3902:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4145:62:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4179:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "4181:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4181:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4181:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4168:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4175:1:10",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4165:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4165:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4158:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:20:10"
															},
															"nodeType": "YulIf",
															"src": "4155:46:10"
														}
													]
												},
												"name": "validator_assert_t_enum$_NFT_CLASS_$1418",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4138:5:10",
														"type": ""
													}
												],
												"src": "4088:119:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4272:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4282:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4293:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4282:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4340:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_NFT_CLASS_$1418",
																	"nodeType": "YulIdentifier",
																	"src": "4299:40:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4299:47:10"
														}
													]
												},
												"name": "cleanup_t_enum$_NFT_CLASS_$1418",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4254:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4264:7:10",
														"type": ""
													}
												],
												"src": "4213:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:67:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4440:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4485:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_NFT_CLASS_$1418",
																	"nodeType": "YulIdentifier",
																	"src": "4453:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:38:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4440:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_NFT_CLASS_$1418_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4410:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4420:9:10",
														"type": ""
													}
												],
												"src": "4358:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4653:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_NFT_CLASS_$1418_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4610:42:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:49:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4598:62:10"
														}
													]
												},
												"name": "abi_encode_t_enum$_NFT_CLASS_$1418_to_t_uint8_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4576:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4583:3:10",
														"type": ""
													}
												],
												"src": "4503:163:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4790:144:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4800:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4812:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4808:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4800:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4900:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4924:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_NFT_CLASS_$1418_to_t_uint8_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "4836:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4836:91:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4836:91:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_NFT_CLASS_$1418__to_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4762:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4774:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4785:4:10",
														"type": ""
													}
												],
												"src": "4672:262:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4983:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4993:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5008:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5015:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4993:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4965:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4975:7:10",
														"type": ""
													}
												],
												"src": "4940:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5101:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5118:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5139:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5123:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5123:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5111:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5111:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5089:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5096:3:10",
														"type": ""
													}
												],
												"src": "5032:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5260:128:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5270:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5282:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5278:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5270:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5354:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5363:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "5306:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:75:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5306:75:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5232:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5255:4:10",
														"type": ""
													}
												],
												"src": "5158:230:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5490:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5507:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5512:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5528:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5547:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5543:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5528:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5462:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5467:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5478:11:10",
														"type": ""
													}
												],
												"src": "5394:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5675:57:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5697:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5705:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5693:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5693:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420636c617373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5709:15:10",
																		"type": "",
																		"value": "Invalid class"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5667:6:10",
														"type": ""
													}
												],
												"src": "5569:163:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5884:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5894:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5960:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5965:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5901:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5894:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6066:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																	"nodeType": "YulIdentifier",
																	"src": "5977:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6079:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6090:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6086:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6079:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5872:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5880:3:10",
														"type": ""
													}
												],
												"src": "5738:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6281:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6291:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6303:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6314:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6299:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6291:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6338:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6349:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6357:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6363:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6353:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6353:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6327:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6383:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6517:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6391:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6383:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6261:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6276:4:10",
														"type": ""
													}
												],
												"src": "6110:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6641:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6663:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6659:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6659:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e20636c617373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6675:21:10",
																		"type": "",
																		"value": "Invalid token class"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6652:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6652:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6633:6:10",
														"type": ""
													}
												],
												"src": "6535:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6856:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6866:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6932:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6937:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6873:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6866:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7038:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18",
																	"nodeType": "YulIdentifier",
																	"src": "6949:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6949:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7051:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7062:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7067:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7058:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7058:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7051:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6844:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6852:3:10",
														"type": ""
													}
												],
												"src": "6710:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7253:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7263:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7275:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7286:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7271:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7263:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7310:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7321:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7306:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7306:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7329:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7335:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7325:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7325:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7299:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7299:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7355:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7489:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7363:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7363:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7355:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7233:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7248:4:10",
														"type": ""
													}
												],
												"src": "7082:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7613:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7635:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7643:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7631:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7647:18:10",
																		"type": "",
																		"value": "Invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7624:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7624:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7605:6:10",
														"type": ""
													}
												],
												"src": "7507:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7825:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7835:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7901:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7906:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7842:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7842:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7835:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8007:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48",
																	"nodeType": "YulIdentifier",
																	"src": "7918:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7918:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7918:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8020:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8031:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8027:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8027:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8020:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7813:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7821:3:10",
														"type": ""
													}
												],
												"src": "7679:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8222:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8232:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8244:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8255:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8240:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8232:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8279:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8290:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8275:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8275:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8298:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8304:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8294:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8268:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8268:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8268:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8324:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8458:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8332:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8332:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8324:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8202:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8217:4:10",
														"type": ""
													}
												],
												"src": "8051:419:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_NFT_CLASS_$1418(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_NFT_CLASS_$1418(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_NFT_CLASS_$1418(value)\n    }\n\n    function abi_decode_tuple_t_enum$_NFT_CLASS_$1418(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_NFT_CLASS_$1418(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_NFT_CLASS_$1418(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_NFT_CLASS_$1418(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_NFT_CLASS_$1418(value)\n    }\n\n    function convert_t_enum$_NFT_CLASS_$1418_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_NFT_CLASS_$1418(value)\n    }\n\n    function abi_encode_t_enum$_NFT_CLASS_$1418_to_t_uint8_fromStack_library(value, pos) {\n        mstore(pos, convert_t_enum$_NFT_CLASS_$1418_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_NFT_CLASS_$1418__to_t_uint8__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_NFT_CLASS_$1418_to_t_uint8_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid class\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token class\")\n\n    }\n\n    function abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061023c5760003560e01c80639ee580481161013a578063ca45f599116100c2578063ed944cb611610086578063ed944cb614610643578063eda1432314610673578063f41dc7d214610691578063f59528d2146106af578063fd642870146106cd5761023c565b8063ca45f599146105ad578063cb937d2b146105cb578063cfc2abb7146105e9578063dbddb26a14610607578063e93e980b146106255761023c565b8063be8ca90511610109578063be8ca90514610517578063beb9e75e14610535578063bf0832ae14610553578063c244e88b14610571578063c525c0c81461058f5761023c565b80639ee580481461049f578063a1bd4a07146104bd578063a1d2002d146104db578063a83179db146104f95761023c565b80635e28c936116101c8578063828d481b1161018c578063828d481b146103f75780638d1da411146104155780638f5236e514610433578063970f6e2f14610463578063971cba96146104815761023c565b80635e28c9361461034f5780636871d79f1461036d5780636b606f0f1461038b5780636e2f5a5f146103a9578063811d5c6c146103d95761023c565b806332a415061161020f57806332a41506146102b957806338d79b52146102d75780634e2ecca1146102f557806358a0d923146103135780635e09346a146103315761023c565b806310a309f31461024157806311f47eb51461025f5780631ab7730c1461027d5780631eb1a2d31461029b575b600080fd5b6102496106fd565b6040516102569190610db6565b60405180910390f35b610267610702565b6040516102749190610db6565b60405180910390f35b610285610708565b6040516102929190610db6565b60405180910390f35b6102a361070e565b6040516102b09190610e61565b60405180910390f35b6102c1610747565b6040516102ce9190610db6565b60405180910390f35b6102df61074c565b6040516102ec9190610db6565b60405180910390f35b6102fd610751565b60405161030a9190610e9c565b60405180910390f35b61031b61075d565b6040516103289190610db6565b60405180910390f35b610339610762565b6040516103469190610db6565b60405180910390f35b610357610767565b6040516103649190610db6565b60405180910390f35b61037561076c565b6040516103829190610e61565b60405180910390f35b6103936107a5565b6040516103a09190610db6565b60405180910390f35b6103c360048036038101906103be9190610ee1565b6107ab565b6040516103d09190610e9c565b60405180910390f35b6103e16108dd565b6040516103ee9190610e61565b60405180910390f35b6103ff610916565b60405161040c9190610db6565b60405180910390f35b61041d61091b565b60405161042a9190610db6565b60405180910390f35b61044d60048036038101906104489190610ee1565b610920565b60405161045a9190610e61565b60405180910390f35b61046b610b72565b6040516104789190610db6565b60405180910390f35b610489610b77565b6040516104969190610db6565b60405180910390f35b6104a7610b7d565b6040516104b49190610e9c565b60405180910390f35b6104c5610b88565b6040516104d29190610db6565b60405180910390f35b6104e3610b8d565b6040516104f09190610db6565b60405180910390f35b610501610b93565b60405161050e9190610db6565b60405180910390f35b61051f610b98565b60405161052c9190610e9c565b60405180910390f35b61053d610ba4565b60405161054a9190610e9c565b60405180910390f35b61055b610baf565b6040516105689190610db6565b60405180910390f35b610579610bb4565b6040516105869190610e61565b60405180910390f35b610597610bed565b6040516105a49190610db6565b60405180910390f35b6105b5610bf3565b6040516105c29190610db6565b60405180910390f35b6105d3610bf9565b6040516105e09190610db6565b60405180910390f35b6105f1610bff565b6040516105fe9190610e61565b60405180910390f35b61060f610c38565b60405161061c9190610e61565b60405180910390f35b61062d610c71565b60405161063a9190610db6565b60405180910390f35b61065d60048036038101906106589190610f3a565b610c76565b60405161066a9190610fde565b60405180910390f35b61067b610d70565b6040516106889190611015565b60405180910390f35b610699610d75565b6040516106a69190610db6565b60405180910390f35b6106b7610d7a565b6040516106c49190610db6565b60405180910390f35b6106e760048036038101906106e29190610f3a565b610d7f565b6040516106f49190610e61565b60405180910390f35b607e81565b61027381565b61061881565b6040518060400160405280601081526020017f2f6c6567656e642f6d657461646174610000000000000000000000000000000081525081565b60b581565b600a81565b6716c2734f97a4000081565b600081565b603281565b601981565b6040518060400160405280601281526020017f2f756e636f6d6d6f6e2f6d65746164617461000000000000000000000000000081525081565b61203a81565b6000600160048111156107c1576107c0610f67565b5b8260048111156107d4576107d3610f67565b5b036107e9576716c2734f97a4000090506108d8565b600260048111156107fd576107fc610f67565b5b8260048111156108105761080f610f67565b5b0361082557670494654067e1000090506108d7565b6003600481111561083957610838610f67565b5b82600481111561084c5761084b610f67565b5b0361086057662e2f6e5e14800090506108d6565b60048081111561087357610872610f67565b5b82600481111561088657610885610f67565b5b0361089a5766ea7aa67b2d000090506108d5565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cc9061108d565b60405180910390fd5b5b5b5b919050565b6040518060400160405280601081526020017f2f636f6d6d6f6e2f6d657461646174610000000000000000000000000000000081525081565b607d81565b600181565b60606000600481111561093657610935610f67565b5b82600481111561094957610948610f67565b5b0361098b576040518060400160405280600481526020017f4865726f000000000000000000000000000000000000000000000000000000008152509050610b6d565b6001600481111561099f5761099e610f67565b5b8260048111156109b2576109b1610f67565b5b036109f4576040518060400160405280600681526020017f4c6567656e6400000000000000000000000000000000000000000000000000008152509050610b6c565b60026004811115610a0857610a07610f67565b5b826004811115610a1b57610a1a610f67565b5b03610a5d576040518060400160405280600481526020017f52617265000000000000000000000000000000000000000000000000000000008152509050610b6b565b60036004811115610a7157610a70610f67565b5b826004811115610a8457610a83610f67565b5b03610ac6576040518060400160405280600881526020017f556e636f6d6d6f6e0000000000000000000000000000000000000000000000008152509050610b6a565b600480811115610ad957610ad8610f67565b5b826004811115610aec57610aeb610f67565b5b03610b2e576040518060400160405280600681526020017f436f6d6d6f6e00000000000000000000000000000000000000000000000000008152509050610b69565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b60906110f9565b60405180910390fd5b5b5b5b5b919050565b600581565b610c3881565b66ea7aa67b2d000081565b601981565b6107d081565b600081565b670494654067e1000081565b662e2f6e5e14800081565b605081565b6040518060400160405280600e81526020017f2f726172652f6d6574616461746100000000000000000000000000000000000081525081565b6104e281565b61019081565b61168a81565b6040518060400160405280600e81526020017f2f6865726f2f6d6574616461746100000000000000000000000000000000000081525081565b6040518060400160405280601581526020017f697066733a2f2f3c686173683e2f646f612f6e6674000000000000000000000081525081565b601981565b60008061ffff168210158015610c905750601961ffff1682105b15610c9e5760009050610d6b565b601961ffff168210158015610cb75750607e61ffff1682105b15610cc55760019050610d6a565b607e61ffff168210158015610cdf575061027361ffff1682105b15610ced5760029050610d69565b61027361ffff168210158015610d085750610c3861ffff1682105b15610d165760039050610d68565b610c3861ffff168210610d2c5760049050610d67565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e90611165565b60405180910390fd5b5b5b5b5b919050565b603c81565b600081565b60fa81565b6060610d92610d8d83610c76565b610920565b9050919050565b600061ffff82169050919050565b610db081610d99565b82525050565b6000602082019050610dcb6000830184610da7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e0b578082015181840152602081019050610df0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e3382610dd1565b610e3d8185610ddc565b9350610e4d818560208601610ded565b610e5681610e17565b840191505092915050565b60006020820190508181036000830152610e7b8184610e28565b905092915050565b6000819050919050565b610e9681610e83565b82525050565b6000602082019050610eb16000830184610e8d565b92915050565b600080fd5b60058110610ec957600080fd5b50565b600081359050610edb81610ebc565b92915050565b600060208284031215610ef757610ef6610eb7565b5b6000610f0584828501610ecc565b91505092915050565b610f1781610e83565b8114610f2257600080fd5b50565b600081359050610f3481610f0e565b92915050565b600060208284031215610f5057610f4f610eb7565b5b6000610f5e84828501610f25565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610fa757610fa6610f67565b5b50565b6000819050610fb882610f96565b919050565b6000610fc882610faa565b9050919050565b610fd881610fbd565b82525050565b6000602082019050610ff36000830184610fcf565b92915050565b600060ff82169050919050565b61100f81610ff9565b82525050565b600060208201905061102a6000830184611006565b92915050565b600082825260208201905092915050565b7f496e76616c696420636c61737300000000000000000000000000000000000000600082015250565b6000611077600d83611030565b915061108282611041565b602082019050919050565b600060208201905081810360008301526110a68161106a565b9050919050565b7f496e76616c696420746f6b656e20636c61737300000000000000000000000000600082015250565b60006110e3601383611030565b91506110ee826110ad565b602082019050919050565b60006020820190508181036000830152611112816110d6565b9050919050565b7f496e76616c696420746f6b656e20494400000000000000000000000000000000600082015250565b600061114f601083611030565b915061115a82611119565b602082019050919050565b6000602082019050818103600083015261117e81611142565b905091905056fea26469706673582212207962e6d9f810008cf532599fa7a8ff39a064faaa27845750e28fb49db2c8845d64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EE58048 GT PUSH2 0x13A JUMPI DUP1 PUSH4 0xCA45F599 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0xED944CB6 GT PUSH2 0x86 JUMPI DUP1 PUSH4 0xED944CB6 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xEDA14323 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xF41DC7D2 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xF59528D2 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xFD642870 EQ PUSH2 0x6CD JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xCA45F599 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xCB937D2B EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xCFC2ABB7 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xDBDDB26A EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xE93E980B EQ PUSH2 0x625 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xBE8CA905 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xBE8CA905 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xBEB9E75E EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xBF0832AE EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xC244E88B EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xC525C0C8 EQ PUSH2 0x58F JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x9EE58048 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xA1BD4A07 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xA1D2002D EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA83179DB EQ PUSH2 0x4F9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x5E28C936 GT PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x828D481B GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x828D481B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x8D1DA411 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x8F5236E5 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x970F6E2F EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x971CBA96 EQ PUSH2 0x481 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x5E28C936 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x6871D79F EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x6B606F0F EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6E2F5A5F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x811D5C6C EQ PUSH2 0x3D9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x32A41506 GT PUSH2 0x20F JUMPI DUP1 PUSH4 0x32A41506 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x38D79B52 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x4E2ECCA1 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x58A0D923 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x5E09346A EQ PUSH2 0x331 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x10A309F3 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x11F47EB5 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x1AB7730C EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x1EB1A2D3 EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FF PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46B PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51F PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53D PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55B PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x579 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x597 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F1 PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60F PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62D PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67B PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x699 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B7 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7E DUP2 JUMP JUMPDEST PUSH2 0x273 DUP2 JUMP JUMPDEST PUSH2 0x618 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F6C6567656E642F6D6574616461746100000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB5 DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH8 0x16C2734F97A40000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F756E636F6D6D6F6E2F6D657461646174610000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x203A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI PUSH2 0x7D3 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x7E9 JUMPI PUSH8 0x16C2734F97A40000 SWAP1 POP PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7FD JUMPI PUSH2 0x7FC PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x810 JUMPI PUSH2 0x80F PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x825 JUMPI PUSH8 0x494654067E10000 SWAP1 POP PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x860 JUMPI PUSH7 0x2E2F6E5E148000 SWAP1 POP PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x89A JUMPI PUSH7 0xEA7AA67B2D0000 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP1 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F636F6D6D6F6E2F6D6574616461746100000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x7D DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x936 JUMPI PUSH2 0x935 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x948 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4865726F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B1 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6567656E640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA1B JUMPI PUSH2 0xA1A PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5261726500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA71 JUMPI PUSH2 0xA70 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA84 JUMPI PUSH2 0xA83 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E636F6D6D6F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAEC JUMPI PUSH2 0xAEB PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F6D6D6F6E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB60 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0xC38 DUP2 JUMP JUMPDEST PUSH7 0xEA7AA67B2D0000 DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH8 0x494654067E10000 DUP2 JUMP JUMPDEST PUSH7 0x2E2F6E5E148000 DUP2 JUMP JUMPDEST PUSH1 0x50 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F726172652F6D65746164617461000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x4E2 DUP2 JUMP JUMPDEST PUSH2 0x190 DUP2 JUMP JUMPDEST PUSH2 0x168A DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F6865726F2F6D65746164617461000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F3C686173683E2F646F612F6E66740000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xC90 JUMPI POP PUSH1 0x19 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x19 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xCB7 JUMPI POP PUSH1 0x7E PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x7E PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI POP PUSH2 0x273 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x273 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xD08 JUMPI POP PUSH2 0xC38 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xD16 JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0xD68 JUMP JUMPDEST PUSH2 0xC38 PUSH2 0xFFFF AND DUP3 LT PUSH2 0xD2C JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3C DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0xFA DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD92 PUSH2 0xD8D DUP4 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB0 DUP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xE3D DUP2 DUP6 PUSH2 0xDDC JUMP JUMPDEST SWAP4 POP PUSH2 0xE4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE56 DUP2 PUSH2 0xE17 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7B DUP2 DUP5 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE96 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEDB DUP2 PUSH2 0xEBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF7 JUMPI PUSH2 0xEF6 PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF05 DUP5 DUP3 DUP6 ADD PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF17 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP2 EQ PUSH2 0xF22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF34 DUP2 PUSH2 0xF0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH2 0xF4F PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF5E DUP5 DUP3 DUP6 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xFB8 DUP3 PUSH2 0xF96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC8 DUP3 PUSH2 0xFAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD8 DUP2 PUSH2 0xFBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100F DUP2 PUSH2 0xFF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636C61737300000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 PUSH1 0xD DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 DUP3 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A6 DUP2 PUSH2 0x106A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20636C61737300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 PUSH1 0x13 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x10EE DUP3 PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1112 DUP2 PUSH2 0x10D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114F PUSH1 0x10 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x115A DUP3 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x117E DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x62E6D9F810008CF532599FA7A8FF39A064FAAA27845750E28FB4 SWAP14 0xB2 0xC8 DUP5 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "503:5569:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2216:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2271:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1753:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3185:59;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1704:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1140:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2590:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2107:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1195;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;940:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3311:63;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1803:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5324:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3380:59;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;997:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;834:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4697:619;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;888:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2330:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2723:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2160:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1559:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1088:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2658:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2791:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1450:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3250:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1306:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1505:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1618:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3124:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3060:57;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;781:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3747:944;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3641:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1398:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1248:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5912:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2216:49;2262:3;2216:49;:::o;2271:53::-;2321:3;2271:53;:::o;1753:44::-;1793:4;1753:44;:::o;3185:59::-;;;;;;;;;;;;;;;;;;;:::o;1704:43::-;1744:3;1704:43;:::o;1140:49::-;1187:2;1140:49;:::o;2590:53::-;2633:10;2590:53;:::o;2107:47::-;2153:1;2107:47;:::o;1195:::-;1240:2;1195:47;:::o;940:51::-;989:2;940:51;:::o;3311:63::-;;;;;;;;;;;;;;;;;;;:::o;1803:44::-;1843:4;1803:44;:::o;5324:582::-;5388:21;5436:16;5424:28;;;;;;;;:::i;:::-;;:8;:28;;;;;;;;:::i;:::-;;;5421:447;;2633:10;5467:45;;5421:447;;;5542:14;5530:26;;;;;;;;:::i;:::-;;:8;:26;;;;;;;;:::i;:::-;;;5527:341;;2699:10;5571:43;;5527:341;;;5644:18;5632:30;;;;;;;;:::i;:::-;;:8;:30;;;;;;;;:::i;:::-;;;5629:239;;2836:11;5677:47;;5629:239;;;5754:16;5742:28;;;;;;;;:::i;:::-;;:8;:28;;;;;;;;:::i;:::-;;;5739:129;;2766:11;5785:45;;5739:129;;;5845:23;;;;;;;;;;:::i;:::-;;;;;;;;5739:129;5629:239;5527:341;5421:447;5324:582;;;:::o;3380:59::-;;;;;;;;;;;;;;;;;;;:::o;997:50::-;1044:3;997:50;:::o;834:48::-;881:1;834:48;:::o;4697:619::-;4760:28;4825:14;4813:26;;;;;;;;:::i;:::-;;:8;:26;;;;;;;;:::i;:::-;;;4809:500;;4855:23;;;;;;;;;;;;;;;;;;;4809:500;;;4911:16;4899:28;;;;;;;;:::i;:::-;;:8;:28;;;;;;;;:::i;:::-;;;4895:414;;4943:25;;;;;;;;;;;;;;;;;;;4895:414;;;5001:14;4989:26;;;;;;;;:::i;:::-;;:8;:26;;;;;;;;:::i;:::-;;;4985:324;;5031:23;;;;;;;;;;;;;;;;;;;4985:324;;;5087:18;5075:30;;;;;;;;:::i;:::-;;:8;:30;;;;;;;;:::i;:::-;;;5071:238;;5121:27;;;;;;;;;;;;;;;;;;;5071:238;;;5181:16;5169:28;;;;;;;;:::i;:::-;;:8;:28;;;;;;;;:::i;:::-;;;5165:144;;5213:25;;;;;;;;;;;;;;;;;;;5165:144;;;5269:29;;;;;;;;;;:::i;:::-;;;;;;;;5165:144;5071:238;4985:324;4895:414;4809:500;4697:619;;;:::o;888:46::-;933:1;888:46;:::o;2330:52::-;2378:4;2330:52;:::o;2723:54::-;2766:11;2723:54;:::o;2160:50::-;2208:2;2160:50;:::o;1559:53::-;1608:4;1559:53;:::o;1088:46::-;1133:1;1088:46;:::o;2658:51::-;2699:10;2658:51;:::o;2791:56::-;2836:11;2791:56;:::o;1450:49::-;1497:2;1450:49;:::o;3250:55::-;;;;;;;;;;;;;;;;;;;:::o;1306:51::-;1353:4;1306:51;:::o;1505:48::-;1550:3;1505:48;:::o;1618:51::-;1665:4;1618:51;:::o;3124:55::-;;;;;;;;;;;;;;;;;;;:::o;3060:57::-;;;;;;;;;;;;;;;;;;;:::o;781:47::-;826:2;781:47;:::o;3747:944::-;3813:20;2153:1;3858:44;;:7;:44;;:93;;;;;2208:2;3906:45;;:7;:45;3858:93;3854:803;;;3980:14;3967:27;;3854:803;;;2208:2;4015:46;;:7;:46;;:93;;;;;2262:3;4065:43;;:7;:43;4015:93;4011:646;;;4137:16;4124:29;;4011:646;;;2262:3;4174:44;;:7;:44;;:95;;;;;2321:3;4222:47;;:7;:47;4174:95;4170:487;;;4298:14;4285:27;;4170:487;;;2321:3;4333:48;;:7;:48;;:97;;;;;2378:4;4385:45;;:7;:45;4333:97;4329:328;;;4459:18;4446:31;;4329:328;;;2378:4;4498:46;;:7;:46;4494:163;;4573:16;4560:29;;4494:163;;;4620:26;;;;;;;;;;:::i;:::-;;;;;;;;4494:163;4329:328;4170:487;4011:646;3854:803;3747:944;;;:::o;3641:49::-;3688:2;3641:49;:::o;1398:46::-;1443:1;1398:46;:::o;1248:52::-;1297:3;1248:52;:::o;5912:157::-;5979:23;6021:41;6034:27;6053:7;6034:18;:27::i;:::-;6021:12;:41::i;:::-;6014:48;;5912:157;;;:::o;7:89:10:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:123::-;195:23;212:5;195:23;:::i;:::-;190:3;183:36;102:123;;:::o;231:234::-;330:4;368:2;357:9;353:18;345:26;;381:77;455:1;444:9;440:17;431:6;381:77;:::i;:::-;231:234;;;;:::o;471:99::-;523:6;557:5;551:12;541:22;;471:99;;;:::o;576:177::-;668:11;702:6;697:3;690:19;742:4;737:3;733:14;718:29;;576:177;;;;:::o;759:246::-;840:1;850:113;864:6;861:1;858:13;850:113;;;949:1;944:3;940:11;934:18;930:1;925:3;921:11;914:39;886:2;883:1;879:10;874:15;;850:113;;;997:1;988:6;983:3;979:16;972:27;821:184;759:246;;;:::o;1011:102::-;1052:6;1103:2;1099:7;1094:2;1087:5;1083:14;1079:28;1069:38;;1011:102;;;:::o;1119:393::-;1215:3;1243:39;1276:5;1243:39;:::i;:::-;1298:79;1370:6;1365:3;1298:79;:::i;:::-;1291:86;;1386:65;1444:6;1439:3;1432:4;1425:5;1421:16;1386:65;:::i;:::-;1476:29;1498:6;1476:29;:::i;:::-;1471:3;1467:39;1460:46;;1219:293;1119:393;;;;:::o;1518:329::-;1639:4;1677:2;1666:9;1662:18;1654:26;;1726:9;1720:4;1716:20;1712:1;1701:9;1697:17;1690:47;1754:86;1835:4;1826:6;1754:86;:::i;:::-;1746:94;;1518:329;;;;:::o;1853:77::-;1890:7;1919:5;1908:16;;1853:77;;;:::o;1936:126::-;2031:24;2049:5;2031:24;:::i;:::-;2026:3;2019:37;1936:126;;:::o;2068:238::-;2169:4;2207:2;2196:9;2192:18;2184:26;;2220:79;2296:1;2285:9;2281:17;2272:6;2220:79;:::i;:::-;2068:238;;;;:::o;2393:117::-;2502:1;2499;2492:12;2639:113;2726:1;2719:5;2716:12;2706:40;;2742:1;2739;2732:12;2706:40;2639:113;:::o;2758:167::-;2818:5;2856:6;2843:20;2834:29;;2872:47;2913:5;2872:47;:::i;:::-;2758:167;;;;:::o;2931:357::-;3004:6;3053:2;3041:9;3032:7;3028:23;3024:32;3021:119;;;3059:79;;:::i;:::-;3021:119;3179:1;3204:67;3263:7;3254:6;3243:9;3239:22;3204:67;:::i;:::-;3194:77;;3150:131;2931:357;;;;:::o;3294:122::-;3367:24;3385:5;3367:24;:::i;:::-;3360:5;3357:35;3347:63;;3406:1;3403;3396:12;3347:63;3294:122;:::o;3422:139::-;3468:5;3506:6;3493:20;3484:29;;3522:33;3549:5;3522:33;:::i;:::-;3422:139;;;;:::o;3567:329::-;3626:6;3675:2;3663:9;3654:7;3650:23;3646:32;3643:119;;;3681:79;;:::i;:::-;3643:119;3801:1;3826:53;3871:7;3862:6;3851:9;3847:22;3826:53;:::i;:::-;3816:63;;3772:117;3567:329;;;;:::o;3902:180::-;3950:77;3947:1;3940:88;4047:4;4044:1;4037:15;4071:4;4068:1;4061:15;4088:119;4175:1;4168:5;4165:12;4155:46;;4181:18;;:::i;:::-;4155:46;4088:119;:::o;4213:139::-;4264:7;4293:5;4282:16;;4299:47;4340:5;4299:47;:::i;:::-;4213:139;;;:::o;4358:::-;4420:9;4453:38;4485:5;4453:38;:::i;:::-;4440:51;;4358:139;;;:::o;4503:163::-;4610:49;4653:5;4610:49;:::i;:::-;4605:3;4598:62;4503:163;;:::o;4672:262::-;4785:4;4823:2;4812:9;4808:18;4800:26;;4836:91;4924:1;4913:9;4909:17;4900:6;4836:91;:::i;:::-;4672:262;;;;:::o;4940:86::-;4975:7;5015:4;5008:5;5004:16;4993:27;;4940:86;;;:::o;5032:120::-;5123:22;5139:5;5123:22;:::i;:::-;5118:3;5111:35;5032:120;;:::o;5158:230::-;5255:4;5293:2;5282:9;5278:18;5270:26;;5306:75;5378:1;5367:9;5363:17;5354:6;5306:75;:::i;:::-;5158:230;;;;:::o;5394:169::-;5478:11;5512:6;5507:3;5500:19;5552:4;5547:3;5543:14;5528:29;;5394:169;;;;:::o;5569:163::-;5709:15;5705:1;5697:6;5693:14;5686:39;5569:163;:::o;5738:366::-;5880:3;5901:67;5965:2;5960:3;5901:67;:::i;:::-;5894:74;;5977:93;6066:3;5977:93;:::i;:::-;6095:2;6090:3;6086:12;6079:19;;5738:366;;;:::o;6110:419::-;6276:4;6314:2;6303:9;6299:18;6291:26;;6363:9;6357:4;6353:20;6349:1;6338:9;6334:17;6327:47;6391:131;6517:4;6391:131;:::i;:::-;6383:139;;6110:419;;;:::o;6535:169::-;6675:21;6671:1;6663:6;6659:14;6652:45;6535:169;:::o;6710:366::-;6852:3;6873:67;6937:2;6932:3;6873:67;:::i;:::-;6866:74;;6949:93;7038:3;6949:93;:::i;:::-;7067:2;7062:3;7058:12;7051:19;;6710:366;;;:::o;7082:419::-;7248:4;7286:2;7275:9;7271:18;7263:26;;7335:9;7329:4;7325:20;7321:1;7310:9;7306:17;7299:47;7363:131;7489:4;7363:131;:::i;:::-;7355:139;;7082:419;;;:::o;7507:166::-;7647:18;7643:1;7635:6;7631:14;7624:42;7507:166;:::o;7679:366::-;7821:3;7842:67;7906:2;7901:3;7842:67;:::i;:::-;7835:74;;7918:93;8007:3;7918:93;:::i;:::-;8036:2;8031:3;8027:12;8020:19;;7679:366;;;:::o;8051:419::-;8217:4;8255:2;8244:9;8240:18;8232:26;;8304:9;8298:4;8294:20;8290:1;8279:9;8275:17;8268:47;8332:131;8458:4;8332:131;:::i;:::-;8324:139;;8051:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "907800",
								"executionCost": "970",
								"totalCost": "908770"
							},
							"external": {
								"BASE_COMMON_URI()": "infinite",
								"BASE_HERO_URI()": "infinite",
								"BASE_LEGEND_URI()": "infinite",
								"BASE_RARE_URI()": "infinite",
								"BASE_UNCOMMON_URI()": "infinite",
								"BASE_URI()": "infinite",
								"COMMON_NFT_PRICE()": "359",
								"COMMON_NFT_START_INDEX()": "452",
								"COMMON_NFT_SUPPLY_1st()": "364",
								"COMMON_NFT_SUPPLY_2nd()": "452",
								"COMMON_NFT_SUPPLY_3rd()": "386",
								"HERO_NFT_START_INDEX()": "431",
								"HERO_NFT_SUPPLY_1st()": "452",
								"HERO_NFT_SUPPLY_2nd()": "431",
								"HERO_NFT_SUPPLY_3rd()": "407",
								"LEGEND_NFT_PRICE()": "403",
								"LEGEND_NFT_START_INDEX()": "387",
								"LEGEND_NFT_SUPPLY_1st()": "386",
								"LEGEND_NFT_SUPPLY_2nd()": "387",
								"LEGEND_NFT_SUPPLY_3rd()": "408",
								"NFT_SUPPLY_1st()": "365",
								"NFT_SUPPLY_2nd()": "410",
								"NFT_SUPPLY_3rd()": "409",
								"PUBLIC_FUND_PERCENTAGE()": "385",
								"RARE_NFT_PRICE()": "358",
								"RARE_NFT_START_INDEX()": "366",
								"RARE_NFT_SUPPLY_1st()": "430",
								"RARE_NFT_SUPPLY_2nd()": "453",
								"RARE_NFT_SUPPLY_3rd()": "364",
								"UNCOMMON_NFT_PRICE()": "380",
								"UNCOMMON_NFT_START_INDEX()": "388",
								"UNCOMMON_NFT_SUPPLY_1st()": "365",
								"UNCOMMON_NFT_SUPPLY_2nd()": "429",
								"UNCOMMON_NFT_SUPPLY_3rd()": "409",
								"getClassForTokenId(uint256)": "1057",
								"getClassName(NFT_CLASS)": "infinite",
								"getClassPrice(NFT_CLASS)": "1050",
								"testClassForTokenId(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207962e6d9f810008cf532599fa7a8ff39a064faaa27845750e28fb49db2c8845d64736f6c63430008130033",
									".code": [
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "9EE58048"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "CA45F599"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "ED944CB6"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "ED944CB6"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "EDA14323"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "F41DC7D2"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "F59528D2"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "FD642870"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "CA45F599"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "CB937D2B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "CFC2ABB7"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "DBDDB26A"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "E93E980B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "BE8CA905"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "BE8CA905"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "BEB9E75E"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "BF0832AE"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "C244E88B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "C525C0C8"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "9EE58048"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "A1BD4A07"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "A1D2002D"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "A83179DB"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "5E28C936"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "828D481B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "828D481B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "8D1DA411"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "8F5236E5"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "970F6E2F"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "971CBA96"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "5E28C936"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "6871D79F"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "6B606F0F"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "6E2F5A5F"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "811D5C6C"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "32A41506"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "32A41506"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "38D79B52"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "4E2ECCA1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "58A0D923"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "5E09346A"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "10A309F3"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "11F47EB5"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "1AB7730C"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "1EB1A2D3"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2216,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2216,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2271,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2271,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1753,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1753,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3185,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3185,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1704,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1140,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1140,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2590,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2590,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2107,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2107,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1195,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1195,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 940,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 940,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3311,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3311,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1803,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1803,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5324,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5324,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5324,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3380,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3380,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 997,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 997,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 834,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 834,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4697,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4697,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4697,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 888,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 888,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2330,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2330,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2723,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2723,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2160,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2160,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1559,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1559,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1088,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1088,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2658,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2658,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2791,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2791,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1450,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1450,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3250,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1306,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1306,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1505,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1505,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1618,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1618,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3124,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3124,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3060,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3060,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 781,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 781,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3747,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3747,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3747,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3641,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3641,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1398,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1398,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1248,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1248,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 5912,
											"end": 6069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5912,
											"end": 6069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5912,
											"end": 6069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 7,
											"value": "7E"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "PUSH",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "2F6C6567656E642F6D6574616461746100000000000000000000000000000000"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "B5"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2643,
											"name": "PUSH",
											"source": 7,
											"value": "16C2734F97A40000"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1195,
											"end": 1242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 940,
											"end": 991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "2F756E636F6D6D6F6E2F6D657461646174610000000000000000000000000000"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1847,
											"name": "PUSH",
											"source": 7,
											"value": "203A"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5452,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5424,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5424,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2643,
											"name": "PUSH",
											"source": 7,
											"value": "16C2734F97A40000"
										},
										{
											"begin": 5467,
											"end": 5512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5467,
											"end": 5512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5556,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5530,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5530,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "494654067E10000"
										},
										{
											"begin": 5571,
											"end": 5614,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5632,
											"end": 5662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5632,
											"end": 5662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "PUSH",
											"source": 7,
											"value": "2E2F6E5E148000"
										},
										{
											"begin": 5677,
											"end": 5724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5677,
											"end": 5724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5770,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5742,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5742,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "PUSH",
											"source": 7,
											"value": "EA7AA67B2D0000"
										},
										{
											"begin": 5785,
											"end": 5830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5785,
											"end": 5830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 5845,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 7,
											"value": "2F636F6D6D6F6E2F6D6574616461746100000000000000000000000000000000"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1044,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "7D"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 834,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4788,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4825,
											"end": 4839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4813,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4821,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4813,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 7,
											"value": "4865726F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 4927,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4899,
											"end": 4927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4899,
											"end": 4927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 7,
											"value": "4C6567656E640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5015,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4989,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4989,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 7,
											"value": "5261726500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5075,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5075,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "556E636F6D6D6F6E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5197,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5169,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5169,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 7,
											"value": "436F6D6D6F6E0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5269,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 933,
											"end": 934,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 888,
											"end": 934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "C38"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "PUSH",
											"source": 7,
											"value": "EA7AA67B2D0000"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1612,
											"name": "PUSH",
											"source": 7,
											"value": "7D0"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "494654067E10000"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "PUSH",
											"source": 7,
											"value": "2E2F6E5E148000"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1499,
											"name": "PUSH",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "2F726172652F6D65746164617461000000000000000000000000000000000000"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "4E2"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1669,
											"name": "PUSH",
											"source": 7,
											"value": "168A"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 7,
											"value": "2F6865726F2F6D65746164617461000000000000000000000000000000000000"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "697066733A2F2F3C686173683E2F646F612F6E66740000000000000000000000"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 781,
											"end": 828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3813,
											"end": 3833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 3858,
											"end": 3902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3902,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3902,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3980,
											"end": 3994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 3994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4015,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 4015,
											"end": 4061,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4022,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4061,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4061,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 7,
											"value": "7E"
										},
										{
											"begin": 4065,
											"end": 4108,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 4065,
											"end": 4108,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4108,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4153,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 7,
											"value": "7E"
										},
										{
											"begin": 4174,
											"end": 4218,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 4174,
											"end": 4218,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4218,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4218,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "PUSH",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4222,
											"end": 4269,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 4222,
											"end": 4269,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4269,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4285,
											"end": 4312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4285,
											"end": 4312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "PUSH",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4333,
											"end": 4381,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 4333,
											"end": 4381,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4381,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4381,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "C38"
										},
										{
											"begin": 4385,
											"end": 4430,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 4385,
											"end": 4430,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4430,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4446,
											"end": 4477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "C38"
										},
										{
											"begin": 4498,
											"end": 4544,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 4498,
											"end": 4544,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4544,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4573,
											"end": 4589,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4560,
											"end": 4589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 4620,
											"end": 4646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 4691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "3C"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1300,
											"name": "PUSH",
											"source": 7,
											"value": "FA"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6021,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6034,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6053,
											"end": 6060,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6034,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6061,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6034,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6021,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6062,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6021,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 6069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 96,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7,
											"end": 96,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 10,
											"value": "FFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 72,
											"end": 90,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 61,
											"end": 90,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 61,
											"end": 90,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 96,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 96,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 102,
											"end": 225,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 102,
											"end": 225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 195,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 212,
											"end": 217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 195,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 195,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 195,
											"end": 218,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 195,
											"end": 218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 190,
											"end": 193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 183,
											"end": 219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 102,
											"end": 225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 102,
											"end": 225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 102,
											"end": 225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 465,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 231,
											"end": 465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 330,
											"end": 334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 370,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 353,
											"end": 371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 345,
											"end": 371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 381,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 455,
											"end": 456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 440,
											"end": 457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 431,
											"end": 437,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 381,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 381,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 381,
											"end": 458,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 381,
											"end": 458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 231,
											"end": 465,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 231,
											"end": 465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 471,
											"end": 570,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 471,
											"end": 570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 523,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 563,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 541,
											"end": 563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 541,
											"end": 563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 471,
											"end": 570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 471,
											"end": 570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 471,
											"end": 570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 471,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 576,
											"end": 753,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 576,
											"end": 753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 668,
											"end": 679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 697,
											"end": 700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 709,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 742,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 740,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 733,
											"end": 747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 718,
											"end": 747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 718,
											"end": 747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 576,
											"end": 753,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 576,
											"end": 753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 576,
											"end": 753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 576,
											"end": 753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 576,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 864,
											"end": 870,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 861,
											"end": 862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 858,
											"end": 871,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 850,
											"end": 963,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 850,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 949,
											"end": 950,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 944,
											"end": 947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 940,
											"end": 951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 934,
											"end": 952,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 925,
											"end": 928,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 921,
											"end": 932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 914,
											"end": 953,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 886,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 879,
											"end": 889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 874,
											"end": 889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 874,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 850,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 850,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 979,
											"end": 995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 821,
											"end": 1005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1096,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 1276,
											"end": 1281,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1243,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1282,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 1243,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1298,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1368,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1298,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1298,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1298,
											"end": 1377,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1298,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1377,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1442,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1430,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1386,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1451,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 1386,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1476,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1476,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1506,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1639,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1736,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1710,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1737,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1835,
											"end": 1839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1754,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1840,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1754,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1746,
											"end": 1840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1746,
											"end": 1840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2062,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1936,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2031,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2209,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2220,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2299,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2220,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2393,
											"end": 2510,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2393,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2752,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2639,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2719,
											"end": 2724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2706,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2706,
											"end": 2746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2742,
											"end": 2743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2744,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2706,
											"end": 2746,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2706,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2818,
											"end": 2823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2872,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2919,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2872,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3024,
											"end": 3056,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3059,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3059,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3138,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3059,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3263,
											"end": 3270,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3239,
											"end": 3261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3204,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3271,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3204,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3367,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3392,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3513,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3522,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 3661,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3650,
											"end": 3673,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3681,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3681,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3681,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3681,
											"end": 3760,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3681,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 3871,
											"end": 3878,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3826,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3879,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 3826,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3902,
											"end": 4082,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3902,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4027,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 4028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4051,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4037,
											"end": 4052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4076,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4207,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4088,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4176,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4168,
											"end": 4173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4177,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4155,
											"end": 4201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 4181,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4201,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4155,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4298,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 4340,
											"end": 4345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4299,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 4485,
											"end": 4490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4453,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4453,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4453,
											"end": 4491,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 4453,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4440,
											"end": 4491,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4440,
											"end": 4491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4666,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4503,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 4653,
											"end": 4658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4610,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4659,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 4610,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4660,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4785,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4812,
											"end": 4821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4836,
											"end": 4927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4927,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4836,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5019,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5008,
											"end": 5013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5004,
											"end": 5020,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 5026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5032,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 5123,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5111,
											"end": 5146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5255,
											"end": 5259,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 5378,
											"end": 5379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5354,
											"end": 5360,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5306,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5381,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 5306,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5478,
											"end": 5489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5507,
											"end": 5510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5519,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5552,
											"end": 5556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5528,
											"end": 5557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5528,
											"end": 5557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5732,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5569,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5709,
											"end": 5724,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420636C61737300000000000000000000000000000000000000"
										},
										{
											"begin": 5705,
											"end": 5706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5693,
											"end": 5707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 5725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 5960,
											"end": 5963,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 5901,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5968,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5977,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6095,
											"end": 6097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 6104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6373,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 6391,
											"end": 6522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6535,
											"end": 6704,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 6535,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6696,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E20636C61737300000000000000000000000000"
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6673,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6697,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6535,
											"end": 6704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6535,
											"end": 6704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6937,
											"end": 6939,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 6932,
											"end": 6935,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 6873,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 6949,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 7042,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6949,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7067,
											"end": 7069,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7058,
											"end": 7070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 7076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7248,
											"end": 7252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7329,
											"end": 7333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7345,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7299,
											"end": 7346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7363,
											"end": 7494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7494,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 7363,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7673,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 7507,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E20494400000000000000000000000000000000"
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7624,
											"end": 7666,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 7906,
											"end": 7908,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 7901,
											"end": 7904,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7842,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 7842,
											"end": 7909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7842,
											"end": 7909,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 7842,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7918,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 8007,
											"end": 8010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7918,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 7918,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7918,
											"end": 8011,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 7918,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8036,
											"end": 8038,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8031,
											"end": 8034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8020,
											"end": 8039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8020,
											"end": 8039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 8045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8255,
											"end": 8257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8244,
											"end": 8253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8240,
											"end": 8258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8304,
											"end": 8313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8298,
											"end": 8302,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8294,
											"end": 8314,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8288,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8268,
											"end": 8315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 8458,
											"end": 8462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 8332,
											"end": 8463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8463,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 8332,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"Treasury.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BASE_COMMON_URI()": "811d5c6c",
							"BASE_HERO_URI()": "cfc2abb7",
							"BASE_LEGEND_URI()": "1eb1a2d3",
							"BASE_RARE_URI()": "c244e88b",
							"BASE_UNCOMMON_URI()": "6871d79f",
							"BASE_URI()": "dbddb26a",
							"COMMON_NFT_PRICE()": "9ee58048",
							"COMMON_NFT_START_INDEX()": "971cba96",
							"COMMON_NFT_SUPPLY_1st()": "828d481b",
							"COMMON_NFT_SUPPLY_2nd()": "c525c0c8",
							"COMMON_NFT_SUPPLY_3rd()": "cb937d2b",
							"HERO_NFT_START_INDEX()": "58a0d923",
							"HERO_NFT_SUPPLY_1st()": "e93e980b",
							"HERO_NFT_SUPPLY_2nd()": "a83179db",
							"HERO_NFT_SUPPLY_3rd()": "f41dc7d2",
							"LEGEND_NFT_PRICE()": "4e2ecca1",
							"LEGEND_NFT_START_INDEX()": "a1bd4a07",
							"LEGEND_NFT_SUPPLY_1st()": "8d1da411",
							"LEGEND_NFT_SUPPLY_2nd()": "38d79b52",
							"LEGEND_NFT_SUPPLY_3rd()": "bf0832ae",
							"NFT_SUPPLY_1st()": "32a41506",
							"NFT_SUPPLY_2nd()": "1ab7730c",
							"NFT_SUPPLY_3rd()": "6b606f0f",
							"PUBLIC_FUND_PERCENTAGE()": "eda14323",
							"RARE_NFT_PRICE()": "be8ca905",
							"RARE_NFT_START_INDEX()": "10a309f3",
							"RARE_NFT_SUPPLY_1st()": "970f6e2f",
							"RARE_NFT_SUPPLY_2nd()": "5e09346a",
							"RARE_NFT_SUPPLY_3rd()": "ca45f599",
							"UNCOMMON_NFT_PRICE()": "beb9e75e",
							"UNCOMMON_NFT_START_INDEX()": "11f47eb5",
							"UNCOMMON_NFT_SUPPLY_1st()": "5e28c936",
							"UNCOMMON_NFT_SUPPLY_2nd()": "f59528d2",
							"UNCOMMON_NFT_SUPPLY_3rd()": "a1d2002d",
							"getClassForTokenId(uint256)": "ed944cb6",
							"getClassName(NFT_CLASS)": "8f5236e5",
							"getClassPrice(NFT_CLASS)": "6e2f5a5f",
							"testClassForTokenId(uint256)": "fd642870"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BASE_COMMON_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_HERO_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_LEGEND_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_RARE_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_UNCOMMON_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HERO_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HERO_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HERO_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HERO_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_FUND_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getClassForTokenId\",\"outputs\":[{\"internalType\":\"enum NFT_CLASS\",\"name\":\"tokenClass\",\"type\":\"NFT_CLASS\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum NFT_CLASS\",\"name\":\"nftClass\",\"type\":\"NFT_CLASS\"}],\"name\":\"getClassName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenClassName\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum NFT_CLASS\",\"name\":\"nftClass\",\"type\":\"NFT_CLASS\"}],\"name\":\"getClassPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"classNFTPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"testClassForTokenId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"className\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DoAConstants.sol\":\"DoAConstants\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DoAConstants.sol\":{\"keccak256\":\"0x55ef434cacc5cd41d8486e375d92253c3913cdb336e50e55edcd3de5830ff473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0342dc7329e66b28652792f33a5d20303f17eec9f15748ff06d80a76627d513a\",\"dweb:/ipfs/QmNTJfJi3qicRCRx1h43spbvfmkqpfJdprTiC3X8rwtNDn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Treasury.sol": {
				"Treasury": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "addAuthorizedContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositNFTRevenue",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCombinedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateFund",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicFund",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawPrivateFund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Treasury.sol\":392:2638  contract Treasury is iTreasury, Ownable, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  dup1\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Treasury.sol\":392:2638  contract Treasury is iTreasury, Ownable, Pausable, ReentrancyGuard {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Treasury.sol\":392:2638  contract Treasury is iTreasury, Ownable, Pausable, ReentrancyGuard {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Treasury.sol\":392:2638  contract Treasury is iTreasury, Ownable, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x760c764d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x98eaa4a7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x015f009a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3419628b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3d2ba888\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x68a18cc2\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Treasury.sol\":665:691  uint256 public privateFund */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":2227:2522  function withdrawPrivateFund(uint256 amount) external override onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Treasury.sol\":2528:2633  function getCombinedBalance() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":1623:1686  function unpause() public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":697:722  uint256 public publicFund */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Treasury.sol\":1900:2221  function depositNFTRevenue() external  payable {... */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Treasury.sol\":1558:1617  function pause() public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Treasury.sol\":1216:1353  function addAuthorizedContract(address contractAddress) external  onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"Treasury.sol\":665:691  uint256 public privateFund */\n    tag_17:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Treasury.sol\":2227:2522  function withdrawPrivateFund(uint256 amount) external override onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_64:\n        /* \"Treasury.sol\":2405:2416  privateFund */\n      sload(0x02)\n        /* \"Treasury.sol\":2395:2401  amount */\n      dup2\n        /* \"Treasury.sol\":2395:2416  amount <= privateFund */\n      gt\n      iszero\n        /* \"Treasury.sol\":2387:2437  require(amount <= privateFund, \"Not enough funds\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"Treasury.sol\":2463:2469  amount */\n      dup1\n        /* \"Treasury.sol\":2448:2459  privateFund */\n      0x02\n      0x00\n        /* \"Treasury.sol\":2448:2469  privateFund -= amount */\n      dup3\n      dup3\n      sload\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Treasury.sol\":2487:2497  msg.sender */\n      caller\n        /* \"Treasury.sol\":2479:2507  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Treasury.sol\":2479:2515  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"Treasury.sol\":2508:2514  amount */\n      dup3\n        /* \"Treasury.sol\":2479:2515  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n        /* \"Treasury.sol\":2227:2522  function withdrawPrivateFund(uint256 amount) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Treasury.sol\":2528:2633  function getCombinedBalance() public view returns (uint256) {... */\n    tag_27:\n        /* \"Treasury.sol\":2579:2586  uint256 */\n      0x00\n        /* \"Treasury.sol\":2605:2626  address(this).balance */\n      selfbalance\n        /* \"Treasury.sol\":2598:2626  return address(this).balance */\n      swap1\n      pop\n        /* \"Treasury.sol\":2528:2633  function getCombinedBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Treasury.sol\":1623:1686  function unpause() public onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"Treasury.sol\":1669:1679  _unpause() */\n      tag_78\n        /* \"Treasury.sol\":1669:1677  _unpause */\n      tag_79\n        /* \"Treasury.sol\":1669:1679  _unpause() */\n      jump\t// in\n    tag_78:\n        /* \"Treasury.sol\":1623:1686  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Treasury.sol\":697:722  uint256 public publicFund */\n    tag_39:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Treasury.sol\":1900:2221  function depositNFTRevenue() external  payable {... */\n    tag_45:\n        /* \"Treasury.sol\":2034:2053  uint256 publicShare */\n      0x00\n        /* \"Treasury.sol\":2117:2120  100 */\n      0x64\n        /* \"DoAConstants.sol\":3688:3690  60 */\n      0x3c\n        /* \"Treasury.sol\":2069:2113  uint256(DoAConstants.PUBLIC_FUND_PERCENTAGE) */\n      0xff\n      and\n        /* \"Treasury.sol\":2057:2066  msg.value */\n      callvalue\n        /* \"Treasury.sol\":2057:2113  msg.value * uint256(DoAConstants.PUBLIC_FUND_PERCENTAGE) */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"Treasury.sol\":2056:2120  (msg.value * uint256(DoAConstants.PUBLIC_FUND_PERCENTAGE)) / 100 */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"Treasury.sol\":2034:2120  uint256 publicShare = (msg.value * uint256(DoAConstants.PUBLIC_FUND_PERCENTAGE)) / 100 */\n      swap1\n      pop\n        /* \"Treasury.sol\":2153:2164  publicShare */\n      dup1\n        /* \"Treasury.sol\":2139:2149  publicFund */\n      0x03\n      0x00\n        /* \"Treasury.sol\":2139:2164  publicFund += publicShare */\n      dup3\n      dup3\n      sload\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Treasury.sol\":2202:2213  publicShare */\n      dup1\n        /* \"Treasury.sol\":2190:2199  msg.value */\n      callvalue\n        /* \"Treasury.sol\":2190:2213  msg.value - publicShare */\n      tag_93\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_93:\n        /* \"Treasury.sol\":2174:2185  privateFund */\n      0x02\n      0x00\n        /* \"Treasury.sol\":2174:2214  privateFund += (msg.value - publicShare) */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Treasury.sol\":1947:2221  {... */\n      pop\n        /* \"Treasury.sol\":1900:2221  function depositNFTRevenue() external  payable {... */\n      jump\t// out\n        /* \"Treasury.sol\":1558:1617  function pause() public onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"Treasury.sol\":1602:1610  _pause() */\n      tag_98\n        /* \"Treasury.sol\":1602:1608  _pause */\n      tag_99\n        /* \"Treasury.sol\":1602:1610  _pause() */\n      jump\t// in\n    tag_98:\n        /* \"Treasury.sol\":1558:1617  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Treasury.sol\":1216:1353  function addAuthorizedContract(address contractAddress) external  onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"Treasury.sol\":1342:1346  true */\n      0x01\n        /* \"Treasury.sol\":1302:1322  _authorizedContracts */\n      0x04\n        /* \"Treasury.sol\":1302:1339  _authorizedContracts[contractAddress] */\n      0x00\n        /* \"Treasury.sol\":1323:1338  contractAddress */\n      dup4\n        /* \"Treasury.sol\":1302:1339  _authorizedContracts[contractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Treasury.sol\":1302:1346  _authorizedContracts[contractAddress] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Treasury.sol\":1216:1353  function addAuthorizedContract(address contractAddress) external  onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_119\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_120\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      dup1\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_126\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_127\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_133\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_34\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_138\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_34\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_142:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_143:\n        /* \"#utility.yul\":177:201   */\n      tag_172\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_142\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_19:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_174\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_143\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_145:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_147:\n        /* \"#utility.yul\":842:866   */\n      tag_179\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_142\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_180:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_148:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_182\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_147\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_23:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_185\n      tag_145\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1118:1237   */\n    tag_184:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_186\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_148\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1467   */\n    tag_149:\n        /* \"#utility.yul\":1411:1418   */\n      0x00\n        /* \"#utility.yul\":1454:1459   */\n      dup2\n        /* \"#utility.yul\":1447:1460   */\n      iszero\n        /* \"#utility.yul\":1440:1461   */\n      iszero\n        /* \"#utility.yul\":1429:1461   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1473:1582   */\n    tag_150:\n        /* \"#utility.yul\":1554:1575   */\n      tag_189\n        /* \"#utility.yul\":1569:1574   */\n      dup2\n        /* \"#utility.yul\":1554:1575   */\n      tag_149\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1549:1552   */\n      dup3\n        /* \"#utility.yul\":1542:1576   */\n      mstore\n        /* \"#utility.yul\":1473:1582   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1588:1798   */\n    tag_36:\n        /* \"#utility.yul\":1675:1679   */\n      0x00\n        /* \"#utility.yul\":1713:1715   */\n      0x20\n        /* \"#utility.yul\":1702:1711   */\n      dup3\n        /* \"#utility.yul\":1698:1716   */\n      add\n        /* \"#utility.yul\":1690:1716   */\n      swap1\n      pop\n        /* \"#utility.yul\":1726:1791   */\n      tag_191\n        /* \"#utility.yul\":1788:1789   */\n      0x00\n        /* \"#utility.yul\":1777:1786   */\n      dup4\n        /* \"#utility.yul\":1773:1790   */\n      add\n        /* \"#utility.yul\":1764:1770   */\n      dup5\n        /* \"#utility.yul\":1726:1791   */\n      tag_150\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1588:1798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1804:1930   */\n    tag_151:\n        /* \"#utility.yul\":1841:1848   */\n      0x00\n        /* \"#utility.yul\":1881:1923   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1874:1879   */\n      dup3\n        /* \"#utility.yul\":1870:1924   */\n      and\n        /* \"#utility.yul\":1859:1924   */\n      swap1\n      pop\n        /* \"#utility.yul\":1804:1930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1936:2032   */\n    tag_152:\n        /* \"#utility.yul\":1973:1980   */\n      0x00\n        /* \"#utility.yul\":2002:2026   */\n      tag_194\n        /* \"#utility.yul\":2020:2025   */\n      dup3\n        /* \"#utility.yul\":2002:2026   */\n      tag_151\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1991:2026   */\n      swap1\n      pop\n        /* \"#utility.yul\":1936:2032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_153:\n        /* \"#utility.yul\":2125:2149   */\n      tag_196\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_152\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2384   */\n    tag_53:\n        /* \"#utility.yul\":2255:2259   */\n      0x00\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2278:2296   */\n      add\n        /* \"#utility.yul\":2270:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2377   */\n      tag_198\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2376   */\n      add\n        /* \"#utility.yul\":2350:2356   */\n      dup5\n        /* \"#utility.yul\":2306:2377   */\n      tag_153\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2162:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_154:\n        /* \"#utility.yul\":2463:2487   */\n      tag_200\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_152\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      dup1\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_201:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2657   */\n    tag_155:\n        /* \"#utility.yul\":2564:2569   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2589:2609   */\n      calldataload\n        /* \"#utility.yul\":2580:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2651   */\n      tag_203\n        /* \"#utility.yul\":2645:2650   */\n      dup2\n        /* \"#utility.yul\":2618:2651   */\n      tag_154\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2518:2657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2992   */\n    tag_57:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2750:2757   */\n      dup5\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_206\n      tag_145\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2739:2858   */\n    tag_205:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_207\n        /* \"#utility.yul\":2967:2974   */\n      dup5\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_155\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2912:2975   */\n      swap2\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":2663:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3167   */\n    tag_156:\n        /* \"#utility.yul\":3082:3093   */\n      0x00\n        /* \"#utility.yul\":3116:3122   */\n      dup3\n        /* \"#utility.yul\":3111:3114   */\n      dup3\n        /* \"#utility.yul\":3104:3123   */\n      mstore\n        /* \"#utility.yul\":3156:3160   */\n      0x20\n        /* \"#utility.yul\":3151:3154   */\n      dup3\n        /* \"#utility.yul\":3147:3161   */\n      add\n        /* \"#utility.yul\":3132:3161   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3173:3339   */\n    tag_157:\n        /* \"#utility.yul\":3313:3331   */\n      0x4e6f7420656e6f7567682066756e647300000000000000000000000000000000\n        /* \"#utility.yul\":3309:3310   */\n      0x00\n        /* \"#utility.yul\":3301:3307   */\n      dup3\n        /* \"#utility.yul\":3297:3311   */\n      add\n        /* \"#utility.yul\":3290:3332   */\n      mstore\n        /* \"#utility.yul\":3173:3339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3345:3711   */\n    tag_158:\n        /* \"#utility.yul\":3487:3490   */\n      0x00\n        /* \"#utility.yul\":3508:3575   */\n      tag_211\n        /* \"#utility.yul\":3572:3574   */\n      0x10\n        /* \"#utility.yul\":3567:3570   */\n      dup4\n        /* \"#utility.yul\":3508:3575   */\n      tag_156\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3501:3575   */\n      swap2\n      pop\n        /* \"#utility.yul\":3584:3677   */\n      tag_212\n        /* \"#utility.yul\":3673:3676   */\n      dup3\n        /* \"#utility.yul\":3584:3677   */\n      tag_157\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3702:3704   */\n      0x20\n        /* \"#utility.yul\":3697:3700   */\n      dup3\n        /* \"#utility.yul\":3693:3705   */\n      add\n        /* \"#utility.yul\":3686:3705   */\n      swap1\n      pop\n        /* \"#utility.yul\":3345:3711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3717:4136   */\n    tag_69:\n        /* \"#utility.yul\":3883:3887   */\n      0x00\n        /* \"#utility.yul\":3921:3923   */\n      0x20\n        /* \"#utility.yul\":3910:3919   */\n      dup3\n        /* \"#utility.yul\":3906:3924   */\n      add\n        /* \"#utility.yul\":3898:3924   */\n      swap1\n      pop\n        /* \"#utility.yul\":3970:3979   */\n      dup2\n        /* \"#utility.yul\":3964:3968   */\n      dup2\n        /* \"#utility.yul\":3960:3980   */\n      sub\n        /* \"#utility.yul\":3956:3957   */\n      0x00\n        /* \"#utility.yul\":3945:3954   */\n      dup4\n        /* \"#utility.yul\":3941:3958   */\n      add\n        /* \"#utility.yul\":3934:3981   */\n      mstore\n        /* \"#utility.yul\":3998:4129   */\n      tag_214\n        /* \"#utility.yul\":4124:4128   */\n      dup2\n        /* \"#utility.yul\":3998:4129   */\n      tag_158\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3990:4129   */\n      swap1\n      pop\n        /* \"#utility.yul\":3717:4136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4142:4322   */\n    tag_159:\n        /* \"#utility.yul\":4190:4267   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4187:4188   */\n      0x00\n        /* \"#utility.yul\":4180:4268   */\n      mstore\n        /* \"#utility.yul\":4287:4291   */\n      0x11\n        /* \"#utility.yul\":4284:4285   */\n      0x04\n        /* \"#utility.yul\":4277:4292   */\n      mstore\n        /* \"#utility.yul\":4311:4315   */\n      0x24\n        /* \"#utility.yul\":4308:4309   */\n      0x00\n        /* \"#utility.yul\":4301:4316   */\n      revert\n        /* \"#utility.yul\":4328:4522   */\n    tag_71:\n        /* \"#utility.yul\":4368:4372   */\n      0x00\n        /* \"#utility.yul\":4388:4408   */\n      tag_217\n        /* \"#utility.yul\":4406:4407   */\n      dup3\n        /* \"#utility.yul\":4388:4408   */\n      tag_142\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4383:4408   */\n      swap2\n      pop\n        /* \"#utility.yul\":4422:4442   */\n      tag_218\n        /* \"#utility.yul\":4440:4441   */\n      dup4\n        /* \"#utility.yul\":4422:4442   */\n      tag_142\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4417:4442   */\n      swap3\n      pop\n        /* \"#utility.yul\":4466:4467   */\n      dup3\n        /* \"#utility.yul\":4463:4464   */\n      dup3\n        /* \"#utility.yul\":4459:4468   */\n      sub\n        /* \"#utility.yul\":4451:4468   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4491   */\n      dup2\n        /* \"#utility.yul\":4484:4488   */\n      dup2\n        /* \"#utility.yul\":4481:4492   */\n      gt\n        /* \"#utility.yul\":4478:4515   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":4495:4513   */\n      tag_220\n      tag_159\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4478:4515   */\n    tag_219:\n        /* \"#utility.yul\":4328:4522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4528:4938   */\n    tag_88:\n        /* \"#utility.yul\":4568:4575   */\n      0x00\n        /* \"#utility.yul\":4591:4611   */\n      tag_222\n        /* \"#utility.yul\":4609:4610   */\n      dup3\n        /* \"#utility.yul\":4591:4611   */\n      tag_142\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4586:4611   */\n      swap2\n      pop\n        /* \"#utility.yul\":4625:4645   */\n      tag_223\n        /* \"#utility.yul\":4643:4644   */\n      dup4\n        /* \"#utility.yul\":4625:4645   */\n      tag_142\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4620:4645   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4681   */\n      dup3\n        /* \"#utility.yul\":4677:4678   */\n      dup3\n        /* \"#utility.yul\":4673:4682   */\n      mul\n        /* \"#utility.yul\":4702:4732   */\n      tag_224\n        /* \"#utility.yul\":4720:4731   */\n      dup2\n        /* \"#utility.yul\":4702:4732   */\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4691:4732   */\n      swap2\n      pop\n        /* \"#utility.yul\":4881:4882   */\n      dup3\n        /* \"#utility.yul\":4872:4879   */\n      dup3\n        /* \"#utility.yul\":4868:4883   */\n      div\n        /* \"#utility.yul\":4865:4866   */\n      dup5\n        /* \"#utility.yul\":4862:4884   */\n      eq\n        /* \"#utility.yul\":4842:4843   */\n      dup4\n        /* \"#utility.yul\":4835:4844   */\n      iszero\n        /* \"#utility.yul\":4815:4898   */\n      or\n        /* \"#utility.yul\":4792:4931   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":4911:4929   */\n      tag_226\n      tag_159\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4792:4931   */\n    tag_225:\n        /* \"#utility.yul\":4576:4938   */\n      pop\n        /* \"#utility.yul\":4528:4938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4944:5124   */\n    tag_160:\n        /* \"#utility.yul\":4992:5069   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4989:4990   */\n      0x00\n        /* \"#utility.yul\":4982:5070   */\n      mstore\n        /* \"#utility.yul\":5089:5093   */\n      0x12\n        /* \"#utility.yul\":5086:5087   */\n      0x04\n        /* \"#utility.yul\":5079:5094   */\n      mstore\n        /* \"#utility.yul\":5113:5117   */\n      0x24\n        /* \"#utility.yul\":5110:5111   */\n      0x00\n        /* \"#utility.yul\":5103:5118   */\n      revert\n        /* \"#utility.yul\":5130:5315   */\n    tag_90:\n        /* \"#utility.yul\":5170:5171   */\n      0x00\n        /* \"#utility.yul\":5187:5207   */\n      tag_229\n        /* \"#utility.yul\":5205:5206   */\n      dup3\n        /* \"#utility.yul\":5187:5207   */\n      tag_142\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5182:5207   */\n      swap2\n      pop\n        /* \"#utility.yul\":5221:5241   */\n      tag_230\n        /* \"#utility.yul\":5239:5240   */\n      dup4\n        /* \"#utility.yul\":5221:5241   */\n      tag_142\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5216:5241   */\n      swap3\n      pop\n        /* \"#utility.yul\":5260:5261   */\n      dup3\n        /* \"#utility.yul\":5250:5285   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":5265:5283   */\n      tag_232\n      tag_160\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5250:5285   */\n    tag_231:\n        /* \"#utility.yul\":5307:5308   */\n      dup3\n        /* \"#utility.yul\":5304:5305   */\n      dup3\n        /* \"#utility.yul\":5300:5309   */\n      div\n        /* \"#utility.yul\":5295:5309   */\n      swap1\n      pop\n        /* \"#utility.yul\":5130:5315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5321:5512   */\n    tag_92:\n        /* \"#utility.yul\":5361:5364   */\n      0x00\n        /* \"#utility.yul\":5380:5400   */\n      tag_234\n        /* \"#utility.yul\":5398:5399   */\n      dup3\n        /* \"#utility.yul\":5380:5400   */\n      tag_142\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5375:5400   */\n      swap2\n      pop\n        /* \"#utility.yul\":5414:5434   */\n      tag_235\n        /* \"#utility.yul\":5432:5433   */\n      dup4\n        /* \"#utility.yul\":5414:5434   */\n      tag_142\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5409:5434   */\n      swap3\n      pop\n        /* \"#utility.yul\":5457:5458   */\n      dup3\n        /* \"#utility.yul\":5454:5455   */\n      dup3\n        /* \"#utility.yul\":5450:5459   */\n      add\n        /* \"#utility.yul\":5443:5459   */\n      swap1\n      pop\n        /* \"#utility.yul\":5478:5481   */\n      dup1\n        /* \"#utility.yul\":5475:5476   */\n      dup3\n        /* \"#utility.yul\":5472:5482   */\n      gt\n        /* \"#utility.yul\":5469:5505   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":5485:5503   */\n      tag_237\n      tag_159\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5469:5505   */\n    tag_236:\n        /* \"#utility.yul\":5321:5512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5518:5743   */\n    tag_161:\n        /* \"#utility.yul\":5658:5692   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5654:5655   */\n      0x00\n        /* \"#utility.yul\":5646:5652   */\n      dup3\n        /* \"#utility.yul\":5642:5656   */\n      add\n        /* \"#utility.yul\":5635:5693   */\n      mstore\n        /* \"#utility.yul\":5727:5735   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5722:5724   */\n      0x20\n        /* \"#utility.yul\":5714:5720   */\n      dup3\n        /* \"#utility.yul\":5710:5725   */\n      add\n        /* \"#utility.yul\":5703:5736   */\n      mstore\n        /* \"#utility.yul\":5518:5743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5749:6115   */\n    tag_162:\n        /* \"#utility.yul\":5891:5894   */\n      0x00\n        /* \"#utility.yul\":5912:5979   */\n      tag_240\n        /* \"#utility.yul\":5976:5978   */\n      0x26\n        /* \"#utility.yul\":5971:5974   */\n      dup4\n        /* \"#utility.yul\":5912:5979   */\n      tag_156\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5905:5979   */\n      swap2\n      pop\n        /* \"#utility.yul\":5988:6081   */\n      tag_241\n        /* \"#utility.yul\":6077:6080   */\n      dup3\n        /* \"#utility.yul\":5988:6081   */\n      tag_161\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6106:6108   */\n      0x40\n        /* \"#utility.yul\":6101:6104   */\n      dup3\n        /* \"#utility.yul\":6097:6109   */\n      add\n        /* \"#utility.yul\":6090:6109   */\n      swap1\n      pop\n        /* \"#utility.yul\":5749:6115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6121:6540   */\n    tag_109:\n        /* \"#utility.yul\":6287:6291   */\n      0x00\n        /* \"#utility.yul\":6325:6327   */\n      0x20\n        /* \"#utility.yul\":6314:6323   */\n      dup3\n        /* \"#utility.yul\":6310:6328   */\n      add\n        /* \"#utility.yul\":6302:6328   */\n      swap1\n      pop\n        /* \"#utility.yul\":6374:6383   */\n      dup2\n        /* \"#utility.yul\":6368:6372   */\n      dup2\n        /* \"#utility.yul\":6364:6384   */\n      sub\n        /* \"#utility.yul\":6360:6361   */\n      0x00\n        /* \"#utility.yul\":6349:6358   */\n      dup4\n        /* \"#utility.yul\":6345:6362   */\n      add\n        /* \"#utility.yul\":6338:6385   */\n      mstore\n        /* \"#utility.yul\":6402:6533   */\n      tag_243\n        /* \"#utility.yul\":6528:6532   */\n      dup2\n        /* \"#utility.yul\":6402:6533   */\n      tag_162\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6394:6533   */\n      swap1\n      pop\n        /* \"#utility.yul\":6121:6540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6546:6728   */\n    tag_163:\n        /* \"#utility.yul\":6686:6720   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6682:6683   */\n      0x00\n        /* \"#utility.yul\":6674:6680   */\n      dup3\n        /* \"#utility.yul\":6670:6684   */\n      add\n        /* \"#utility.yul\":6663:6721   */\n      mstore\n        /* \"#utility.yul\":6546:6728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6734:7100   */\n    tag_164:\n        /* \"#utility.yul\":6876:6879   */\n      0x00\n        /* \"#utility.yul\":6897:6964   */\n      tag_246\n        /* \"#utility.yul\":6961:6963   */\n      0x20\n        /* \"#utility.yul\":6956:6959   */\n      dup4\n        /* \"#utility.yul\":6897:6964   */\n      tag_156\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6890:6964   */\n      swap2\n      pop\n        /* \"#utility.yul\":6973:7066   */\n      tag_247\n        /* \"#utility.yul\":7062:7065   */\n      dup3\n        /* \"#utility.yul\":6973:7066   */\n      tag_163\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7091:7093   */\n      0x20\n        /* \"#utility.yul\":7086:7089   */\n      dup3\n        /* \"#utility.yul\":7082:7094   */\n      add\n        /* \"#utility.yul\":7075:7094   */\n      swap1\n      pop\n        /* \"#utility.yul\":6734:7100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7106:7525   */\n    tag_117:\n        /* \"#utility.yul\":7272:7276   */\n      0x00\n        /* \"#utility.yul\":7310:7312   */\n      0x20\n        /* \"#utility.yul\":7299:7308   */\n      dup3\n        /* \"#utility.yul\":7295:7313   */\n      add\n        /* \"#utility.yul\":7287:7313   */\n      swap1\n      pop\n        /* \"#utility.yul\":7359:7368   */\n      dup2\n        /* \"#utility.yul\":7353:7357   */\n      dup2\n        /* \"#utility.yul\":7349:7369   */\n      sub\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7323:7370   */\n      mstore\n        /* \"#utility.yul\":7387:7518   */\n      tag_249\n        /* \"#utility.yul\":7513:7517   */\n      dup2\n        /* \"#utility.yul\":7387:7518   */\n      tag_164\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7379:7518   */\n      swap1\n      pop\n        /* \"#utility.yul\":7106:7525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7531:7701   */\n    tag_165:\n        /* \"#utility.yul\":7671:7693   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":7667:7668   */\n      0x00\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7655:7669   */\n      add\n        /* \"#utility.yul\":7648:7694   */\n      mstore\n        /* \"#utility.yul\":7531:7701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7707:8073   */\n    tag_166:\n        /* \"#utility.yul\":7849:7852   */\n      0x00\n        /* \"#utility.yul\":7870:7937   */\n      tag_252\n        /* \"#utility.yul\":7934:7936   */\n      0x14\n        /* \"#utility.yul\":7929:7932   */\n      dup4\n        /* \"#utility.yul\":7870:7937   */\n      tag_156\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7863:7937   */\n      swap2\n      pop\n        /* \"#utility.yul\":7946:8039   */\n      tag_253\n        /* \"#utility.yul\":8035:8038   */\n      dup3\n        /* \"#utility.yul\":7946:8039   */\n      tag_165\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8064:8066   */\n      0x20\n        /* \"#utility.yul\":8059:8062   */\n      dup3\n        /* \"#utility.yul\":8055:8067   */\n      add\n        /* \"#utility.yul\":8048:8067   */\n      swap1\n      pop\n        /* \"#utility.yul\":7707:8073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8079:8498   */\n    tag_136:\n        /* \"#utility.yul\":8245:8249   */\n      0x00\n        /* \"#utility.yul\":8283:8285   */\n      0x20\n        /* \"#utility.yul\":8272:8281   */\n      dup3\n        /* \"#utility.yul\":8268:8286   */\n      add\n        /* \"#utility.yul\":8260:8286   */\n      swap1\n      pop\n        /* \"#utility.yul\":8332:8341   */\n      dup2\n        /* \"#utility.yul\":8326:8330   */\n      dup2\n        /* \"#utility.yul\":8322:8342   */\n      sub\n        /* \"#utility.yul\":8318:8319   */\n      0x00\n        /* \"#utility.yul\":8307:8316   */\n      dup4\n        /* \"#utility.yul\":8303:8320   */\n      add\n        /* \"#utility.yul\":8296:8343   */\n      mstore\n        /* \"#utility.yul\":8360:8491   */\n      tag_255\n        /* \"#utility.yul\":8486:8490   */\n      dup2\n        /* \"#utility.yul\":8360:8491   */\n      tag_166\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8352:8491   */\n      swap1\n      pop\n        /* \"#utility.yul\":8079:8498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8504:8670   */\n    tag_167:\n        /* \"#utility.yul\":8644:8662   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":8640:8641   */\n      0x00\n        /* \"#utility.yul\":8632:8638   */\n      dup3\n        /* \"#utility.yul\":8628:8642   */\n      add\n        /* \"#utility.yul\":8621:8663   */\n      mstore\n        /* \"#utility.yul\":8504:8670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8676:9042   */\n    tag_168:\n        /* \"#utility.yul\":8818:8821   */\n      0x00\n        /* \"#utility.yul\":8839:8906   */\n      tag_258\n        /* \"#utility.yul\":8903:8905   */\n      0x10\n        /* \"#utility.yul\":8898:8901   */\n      dup4\n        /* \"#utility.yul\":8839:8906   */\n      tag_156\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8832:8906   */\n      swap2\n      pop\n        /* \"#utility.yul\":8915:9008   */\n      tag_259\n        /* \"#utility.yul\":9004:9007   */\n      dup3\n        /* \"#utility.yul\":8915:9008   */\n      tag_167\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9033:9035   */\n      0x20\n        /* \"#utility.yul\":9028:9031   */\n      dup3\n        /* \"#utility.yul\":9024:9036   */\n      add\n        /* \"#utility.yul\":9017:9036   */\n      swap1\n      pop\n        /* \"#utility.yul\":8676:9042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9048:9467   */\n    tag_141:\n        /* \"#utility.yul\":9214:9218   */\n      0x00\n        /* \"#utility.yul\":9252:9254   */\n      0x20\n        /* \"#utility.yul\":9241:9250   */\n      dup3\n        /* \"#utility.yul\":9237:9255   */\n      add\n        /* \"#utility.yul\":9229:9255   */\n      swap1\n      pop\n        /* \"#utility.yul\":9301:9310   */\n      dup2\n        /* \"#utility.yul\":9295:9299   */\n      dup2\n        /* \"#utility.yul\":9291:9311   */\n      sub\n        /* \"#utility.yul\":9287:9288   */\n      0x00\n        /* \"#utility.yul\":9276:9285   */\n      dup4\n        /* \"#utility.yul\":9272:9289   */\n      add\n        /* \"#utility.yul\":9265:9312   */\n      mstore\n        /* \"#utility.yul\":9329:9460   */\n      tag_261\n        /* \"#utility.yul\":9455:9459   */\n      dup2\n        /* \"#utility.yul\":9329:9460   */\n      tag_168\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9321:9460   */\n      swap1\n      pop\n        /* \"#utility.yul\":9048:9467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c356c12b9fc9c7e0ecd9763ffe5228e7817df16a1b851b4129ce76ebd0a56f0064736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_239": {
									"entryPoint": null,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": 83,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 91,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261005360201b60201c565b61005b60201b60201c565b60008060146101000a81548160ff0219169083151502179055506001808190555061011f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610caf8061012e6000396000f3fe6080604052600436106100a75760003560e01c8063715018a611610064578063715018a614610198578063760c764d146101af5780638456cb59146101b95780638da5cb5b146101d057806398eaa4a7146101fb578063f2fde38b14610224576100a7565b8063015f009a146100ac5780633419628b146100d75780633d2ba888146101005780633f4ba83a1461012b5780635c975abb1461014257806368a18cc21461016d575b600080fd5b3480156100b857600080fd5b506100c161024d565b6040516100ce9190610789565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f991906107d5565b610253565b005b34801561010c57600080fd5b50610115610303565b6040516101229190610789565b60405180910390f35b34801561013757600080fd5b5061014061030b565b005b34801561014e57600080fd5b5061015761031d565b604051610164919061081d565b60405180910390f35b34801561017957600080fd5b50610182610333565b60405161018f9190610789565b60405180910390f35b3480156101a457600080fd5b506101ad610339565b005b6101b761034d565b005b3480156101c557600080fd5b506101ce6103ad565b005b3480156101dc57600080fd5b506101e56103bf565b6040516101f29190610879565b60405180910390f35b34801561020757600080fd5b50610222600480360381019061021d91906108c0565b6103e8565b005b34801561023057600080fd5b5061024b600480360381019061024691906108c0565b61044b565b005b60025481565b61025b6104ce565b6002548111156102a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102979061094a565b60405180910390fd5b80600260008282546102b29190610999565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102ff573d6000803e3d6000fd5b5050565b600047905090565b6103136104ce565b61031b61054c565b565b60008060149054906101000a900460ff16905090565b60035481565b6103416104ce565b61034b60006105ae565b565b60006064603c60ff163461036191906109cd565b61036b9190610a3e565b9050806003600082825461037f9190610a6f565b9250508190555080346103929190610999565b600260008282546103a39190610a6f565b9250508190555050565b6103b56104ce565b6103bd610672565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103f06104ce565b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6104536104ce565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610b15565b60405180910390fd5b6104cb816105ae565b50565b6104d66106d5565b73ffffffffffffffffffffffffffffffffffffffff166104f46103bf565b73ffffffffffffffffffffffffffffffffffffffff161461054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610b81565b60405180910390fd5b565b6105546106dd565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6105976106d5565b6040516105a49190610879565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61067a610726565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106be6106d5565b6040516106cb9190610879565b60405180910390a1565b600033905090565b6106e561031d565b610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90610bed565b60405180910390fd5b565b61072e61031d565b1561076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076590610c59565b60405180910390fd5b565b6000819050919050565b61078381610770565b82525050565b600060208201905061079e600083018461077a565b92915050565b600080fd5b6107b281610770565b81146107bd57600080fd5b50565b6000813590506107cf816107a9565b92915050565b6000602082840312156107eb576107ea6107a4565b5b60006107f9848285016107c0565b91505092915050565b60008115159050919050565b61081781610802565b82525050565b6000602082019050610832600083018461080e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086382610838565b9050919050565b61087381610858565b82525050565b600060208201905061088e600083018461086a565b92915050565b61089d81610858565b81146108a857600080fd5b50565b6000813590506108ba81610894565b92915050565b6000602082840312156108d6576108d56107a4565b5b60006108e4848285016108ab565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006109346010836108ed565b915061093f826108fe565b602082019050919050565b6000602082019050818103600083015261096381610927565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109a482610770565b91506109af83610770565b92508282039050818111156109c7576109c661096a565b5b92915050565b60006109d882610770565b91506109e383610770565b92508282026109f181610770565b91508282048414831517610a0857610a0761096a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a4982610770565b9150610a5483610770565b925082610a6457610a63610a0f565b5b828204905092915050565b6000610a7a82610770565b9150610a8583610770565b9250828201905080821115610a9d57610a9c61096a565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610aff6026836108ed565b9150610b0a82610aa3565b604082019050919050565b60006020820190508181036000830152610b2e81610af2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b6b6020836108ed565b9150610b7682610b35565b602082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000610bd76014836108ed565b9150610be282610ba1565b602082019050919050565b60006020820190508181036000830152610c0681610bca565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000610c436010836108ed565b9150610c4e82610c0d565b602082019050919050565b60006020820190508181036000830152610c7281610c36565b905091905056fea2646970667358221220c356c12b9fc9c7e0ecd9763ffe5228e7817df16a1b851b4129ce76ebd0a56f0064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x11F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCAF DUP1 PUSH2 0x12E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x760C764D EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x98EAA4A7 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x224 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x15F009A EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3419628B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x3D2BA888 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x68A18CC2 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0x339 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH2 0x34D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x3AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x31B PUSH2 0x54C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x341 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x34B PUSH1 0x0 PUSH2 0x5AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x3C PUSH1 0xFF AND CALLVALUE PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x36B SWAP2 SWAP1 PUSH2 0xA3E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 CALLVALUE PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x3BD PUSH2 0x672 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x453 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B9 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4CB DUP2 PUSH2 0x5AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x6D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4F4 PUSH2 0x3BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x554 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x597 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x6BE PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E5 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x72E PUSH2 0x31D JUMP JUMPDEST ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x783 DUP2 PUSH2 0x770 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x79E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B2 DUP2 PUSH2 0x770 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7CF DUP2 PUSH2 0x7A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EB JUMPI PUSH2 0x7EA PUSH2 0x7A4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP5 DUP3 DUP6 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x817 DUP2 PUSH2 0x802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x832 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x80E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 DUP3 PUSH2 0x838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x873 DUP2 PUSH2 0x858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x86A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89D DUP2 PUSH2 0x858 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8BA DUP2 PUSH2 0x894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x7A4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8E4 DUP5 DUP3 DUP6 ADD PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682066756E647300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x934 PUSH1 0x10 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0x93F DUP3 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x963 DUP2 PUSH2 0x927 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9A4 DUP3 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP PUSH2 0x9AF DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9C6 PUSH2 0x96A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E3 DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x9F1 DUP2 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0x96A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA49 DUP3 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP PUSH2 0xA54 DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA64 JUMPI PUSH2 0xA63 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7A DUP3 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP PUSH2 0xA85 DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA9D JUMPI PUSH2 0xA9C PUSH2 0x96A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF PUSH1 0x26 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0xB0A DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2E DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B PUSH1 0x20 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0xB76 DUP3 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB9A DUP2 PUSH2 0xB5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD7 PUSH1 0x14 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0xBE2 DUP3 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC06 DUP2 PUSH2 0xBCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC43 PUSH1 0x10 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0xC4E DUP3 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC72 DUP2 PUSH2 0xC36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 JUMP 0xC1 0x2B SWAP16 0xC9 0xC7 0xE0 0xEC 0xD9 PUSH23 0x3FFE5228E7817DF16A1B851B4129CE76EBD0A56F006473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "392:2246:8:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:2;1821:7;:22;;;;392:2246:8;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;392:2246:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1230,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": 1749,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_203": {
									"entryPoint": 1650,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 1830,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_187": {
									"entryPoint": 1757,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 1454,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_219": {
									"entryPoint": 1356,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addAuthorizedContract_1784": {
									"entryPoint": 1000,
									"id": 1784,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositNFTRevenue_1832": {
									"entryPoint": 845,
									"id": 1832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCombinedBalance_1873": {
									"entryPoint": 771,
									"id": 1873,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 959,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1793": {
									"entryPoint": 941,
									"id": 1793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": 797,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@privateFund_1764": {
									"entryPoint": 589,
									"id": 1764,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicFund_1766": {
									"entryPoint": 819,
									"id": 1766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 825,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1099,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1802": {
									"entryPoint": 779,
									"id": 1802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawPrivateFund_1861": {
									"entryPoint": 595,
									"id": 1861,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 2977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725": {
									"entryPoint": 2302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 3085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9470:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "442:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:10"
															},
															"nodeType": "YulIf",
															"src": "822:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:10",
														"type": ""
													}
												],
												"src": "769:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:10",
														"type": ""
													}
												],
												"src": "897:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:10"
															},
															"nodeType": "YulIf",
															"src": "1118:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:10",
														"type": ""
													}
												],
												"src": "1042:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1419:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1429:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1454:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1447:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1447:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1401:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1411:7:10",
														"type": ""
													}
												],
												"src": "1377:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1532:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1549:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1569:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1554:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1520:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1527:3:10",
														"type": ""
													}
												],
												"src": "1473:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1680:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1690:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1702:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1713:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1698:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1698:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1690:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1764:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1788:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1773:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1726:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1726:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1652:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1675:4:10",
														"type": ""
													}
												],
												"src": "1588:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1859:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1874:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1881:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1870:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1859:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1831:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1841:7:10",
														"type": ""
													}
												],
												"src": "1804:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1981:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1991:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2020:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2002:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1991:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1963:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1973:7:10",
														"type": ""
													}
												],
												"src": "1936:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2103:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2091:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2098:3:10",
														"type": ""
													}
												],
												"src": "2038:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2260:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2270:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2374:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2306:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2232:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2244:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2255:4:10",
														"type": ""
													}
												],
												"src": "2162:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2490:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:43:10"
															},
															"nodeType": "YulIf",
															"src": "2443:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2426:5:10",
														"type": ""
													}
												],
												"src": "2390:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2570:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2580:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2589:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2580:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2645:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2618:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2618:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2548:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2556:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2564:5:10",
														"type": ""
													}
												],
												"src": "2518:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2729:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2775:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:32:10"
															},
															"nodeType": "YulIf",
															"src": "2739:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2868:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2912:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2699:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2710:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2722:6:10",
														"type": ""
													}
												],
												"src": "2663:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3094:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3111:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3104:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3132:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3151:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3132:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3066:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3071:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3082:11:10",
														"type": ""
													}
												],
												"src": "2998:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3301:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3309:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3297:14:10"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682066756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3313:18:10",
																		"type": "",
																		"value": "Not enough funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3271:6:10",
														"type": ""
													}
												],
												"src": "3173:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3491:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3501:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3567:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3572:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3508:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3501:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3673:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
																	"nodeType": "YulIdentifier",
																	"src": "3584:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3584:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3686:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3697:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3693:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3693:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3479:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3487:3:10",
														"type": ""
													}
												],
												"src": "3345:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3888:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3898:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3910:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3921:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3906:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3898:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3945:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3956:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3964:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3970:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3960:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3960:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3934:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3990:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4124:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3998:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3990:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3868:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3883:4:10",
														"type": ""
													}
												],
												"src": "3717:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4170:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4187:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4190:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4180:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4284:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4287:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4308:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4311:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4301:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4142:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4373:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4383:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4406:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4388:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4383:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4417:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4440:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4422:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4417:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4451:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4463:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4466:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4459:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4459:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4451:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4493:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4495:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4495:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4495:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4484:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4490:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4481:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4481:11:10"
															},
															"nodeType": "YulIf",
															"src": "4478:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4359:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4362:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4368:4:10",
														"type": ""
													}
												],
												"src": "4328:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:362:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4586:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4609:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4591:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4586:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4620:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4643:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4625:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4620:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4654:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4677:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4680:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4673:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4673:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "4658:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4691:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "4720:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4702:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4691:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4909:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4911:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4911:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4911:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4842:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4835:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4865:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4872:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4881:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4868:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4868:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4862:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4862:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4815:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4815:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4795:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:113:10"
															},
															"nodeType": "YulIf",
															"src": "4792:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4559:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4562:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4568:7:10",
														"type": ""
													}
												],
												"src": "4528:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4972:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4989:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4982:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4982:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4982:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5086:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5089:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5079:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5110:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5113:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5103:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5103:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5103:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4944:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5182:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5205:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5187:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5187:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5182:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5216:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5239:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5221:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5216:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5263:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5265:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5265:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5265:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5260:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:9:10"
															},
															"nodeType": "YulIf",
															"src": "5250:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5295:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5307:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5295:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5161:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5164:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5170:1:10",
														"type": ""
													}
												],
												"src": "5130:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5375:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5398:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5380:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5375:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5409:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5432:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5414:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5409:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5443:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5454:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5457:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5450:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5450:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5483:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5485:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5485:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5485:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5475:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5478:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5472:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5472:10:10"
															},
															"nodeType": "YulIf",
															"src": "5469:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5352:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5355:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5361:3:10",
														"type": ""
													}
												],
												"src": "5321:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5624:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5646:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5654:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5658:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5635:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5635:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5635:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5714:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5722:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5710:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5710:15:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5727:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5703:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5703:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5703:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5616:6:10",
														"type": ""
													}
												],
												"src": "5518:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5895:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5905:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5971:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5976:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5912:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5905:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6077:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "5988:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5988:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6090:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6101:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6106:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6097:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5883:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5891:3:10",
														"type": ""
													}
												],
												"src": "5749:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6292:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6302:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6314:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6310:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6310:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6302:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6349:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6360:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6345:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6345:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6368:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6374:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6364:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6364:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6338:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6338:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6394:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6528:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6402:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6402:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6394:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6272:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6287:4:10",
														"type": ""
													}
												],
												"src": "6121:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6652:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6674:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6682:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6670:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6670:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6686:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6663:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6663:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6663:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6644:6:10",
														"type": ""
													}
												],
												"src": "6546:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6880:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6890:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6956:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6961:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6897:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6897:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6890:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7062:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6973:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6973:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6973:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7075:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7086:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7082:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7082:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7075:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6868:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6876:3:10",
														"type": ""
													}
												],
												"src": "6734:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7277:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7287:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7299:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7310:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7287:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7353:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7359:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7349:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7349:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7323:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7323:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7379:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7513:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7387:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7387:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7379:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7257:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7272:4:10",
														"type": ""
													}
												],
												"src": "7106:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7637:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7659:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7667:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7655:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7655:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7671:22:10",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7648:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7648:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7648:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7629:6:10",
														"type": ""
													}
												],
												"src": "7531:170:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7853:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7863:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7870:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7870:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8035:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "7946:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7946:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8048:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8059:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8064:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8055:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8055:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7841:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7849:3:10",
														"type": ""
													}
												],
												"src": "7707:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8250:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8260:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8272:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8283:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8268:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8268:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8260:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8307:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8318:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8303:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8303:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8326:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8332:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8322:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8296:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8296:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8296:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8352:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8486:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8360:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8360:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8352:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8230:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8245:4:10",
														"type": ""
													}
												],
												"src": "8079:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8610:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8632:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8640:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8628:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8628:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8644:18:10",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8621:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8621:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8621:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8602:6:10",
														"type": ""
													}
												],
												"src": "8504:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8822:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8832:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8898:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8903:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8839:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8832:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9004:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "8915:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8915:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8915:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9017:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9028:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9033:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9024:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9017:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8810:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8818:3:10",
														"type": ""
													}
												],
												"src": "8676:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9219:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9229:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9241:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9252:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9237:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9237:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9229:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9276:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9287:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9272:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9295:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9301:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9291:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9291:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9265:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9265:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9321:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9455:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9329:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9329:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9321:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9199:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9214:4:10",
														"type": ""
													}
												],
												"src": "9048:419:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a75760003560e01c8063715018a611610064578063715018a614610198578063760c764d146101af5780638456cb59146101b95780638da5cb5b146101d057806398eaa4a7146101fb578063f2fde38b14610224576100a7565b8063015f009a146100ac5780633419628b146100d75780633d2ba888146101005780633f4ba83a1461012b5780635c975abb1461014257806368a18cc21461016d575b600080fd5b3480156100b857600080fd5b506100c161024d565b6040516100ce9190610789565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f991906107d5565b610253565b005b34801561010c57600080fd5b50610115610303565b6040516101229190610789565b60405180910390f35b34801561013757600080fd5b5061014061030b565b005b34801561014e57600080fd5b5061015761031d565b604051610164919061081d565b60405180910390f35b34801561017957600080fd5b50610182610333565b60405161018f9190610789565b60405180910390f35b3480156101a457600080fd5b506101ad610339565b005b6101b761034d565b005b3480156101c557600080fd5b506101ce6103ad565b005b3480156101dc57600080fd5b506101e56103bf565b6040516101f29190610879565b60405180910390f35b34801561020757600080fd5b50610222600480360381019061021d91906108c0565b6103e8565b005b34801561023057600080fd5b5061024b600480360381019061024691906108c0565b61044b565b005b60025481565b61025b6104ce565b6002548111156102a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102979061094a565b60405180910390fd5b80600260008282546102b29190610999565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102ff573d6000803e3d6000fd5b5050565b600047905090565b6103136104ce565b61031b61054c565b565b60008060149054906101000a900460ff16905090565b60035481565b6103416104ce565b61034b60006105ae565b565b60006064603c60ff163461036191906109cd565b61036b9190610a3e565b9050806003600082825461037f9190610a6f565b9250508190555080346103929190610999565b600260008282546103a39190610a6f565b9250508190555050565b6103b56104ce565b6103bd610672565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103f06104ce565b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6104536104ce565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610b15565b60405180910390fd5b6104cb816105ae565b50565b6104d66106d5565b73ffffffffffffffffffffffffffffffffffffffff166104f46103bf565b73ffffffffffffffffffffffffffffffffffffffff161461054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610b81565b60405180910390fd5b565b6105546106dd565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6105976106d5565b6040516105a49190610879565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61067a610726565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106be6106d5565b6040516106cb9190610879565b60405180910390a1565b600033905090565b6106e561031d565b610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90610bed565b60405180910390fd5b565b61072e61031d565b1561076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076590610c59565b60405180910390fd5b565b6000819050919050565b61078381610770565b82525050565b600060208201905061079e600083018461077a565b92915050565b600080fd5b6107b281610770565b81146107bd57600080fd5b50565b6000813590506107cf816107a9565b92915050565b6000602082840312156107eb576107ea6107a4565b5b60006107f9848285016107c0565b91505092915050565b60008115159050919050565b61081781610802565b82525050565b6000602082019050610832600083018461080e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086382610838565b9050919050565b61087381610858565b82525050565b600060208201905061088e600083018461086a565b92915050565b61089d81610858565b81146108a857600080fd5b50565b6000813590506108ba81610894565b92915050565b6000602082840312156108d6576108d56107a4565b5b60006108e4848285016108ab565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006109346010836108ed565b915061093f826108fe565b602082019050919050565b6000602082019050818103600083015261096381610927565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109a482610770565b91506109af83610770565b92508282039050818111156109c7576109c661096a565b5b92915050565b60006109d882610770565b91506109e383610770565b92508282026109f181610770565b91508282048414831517610a0857610a0761096a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a4982610770565b9150610a5483610770565b925082610a6457610a63610a0f565b5b828204905092915050565b6000610a7a82610770565b9150610a8583610770565b9250828201905080821115610a9d57610a9c61096a565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610aff6026836108ed565b9150610b0a82610aa3565b604082019050919050565b60006020820190508181036000830152610b2e81610af2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b6b6020836108ed565b9150610b7682610b35565b602082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000610bd76014836108ed565b9150610be282610ba1565b602082019050919050565b60006020820190508181036000830152610c0681610bca565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000610c436010836108ed565b9150610c4e82610c0d565b602082019050919050565b60006020820190508181036000830152610c7281610c36565b905091905056fea2646970667358221220c356c12b9fc9c7e0ecd9763ffe5228e7817df16a1b851b4129ce76ebd0a56f0064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x760C764D EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x98EAA4A7 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x224 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x15F009A EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3419628B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x3D2BA888 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x68A18CC2 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0x339 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH2 0x34D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x3AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x31B PUSH2 0x54C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x341 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x34B PUSH1 0x0 PUSH2 0x5AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x3C PUSH1 0xFF AND CALLVALUE PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x36B SWAP2 SWAP1 PUSH2 0xA3E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 CALLVALUE PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x3BD PUSH2 0x672 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x453 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B9 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4CB DUP2 PUSH2 0x5AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x6D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4F4 PUSH2 0x3BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x554 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x597 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x6BE PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E5 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x72E PUSH2 0x31D JUMP JUMPDEST ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x783 DUP2 PUSH2 0x770 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x79E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B2 DUP2 PUSH2 0x770 JUMP JUMPDEST DUP2 EQ PUSH2 0x7BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7CF DUP2 PUSH2 0x7A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EB JUMPI PUSH2 0x7EA PUSH2 0x7A4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP5 DUP3 DUP6 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x817 DUP2 PUSH2 0x802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x832 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x80E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 DUP3 PUSH2 0x838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x873 DUP2 PUSH2 0x858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x86A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89D DUP2 PUSH2 0x858 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8BA DUP2 PUSH2 0x894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x7A4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8E4 DUP5 DUP3 DUP6 ADD PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682066756E647300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x934 PUSH1 0x10 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0x93F DUP3 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x963 DUP2 PUSH2 0x927 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9A4 DUP3 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP PUSH2 0x9AF DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9C6 PUSH2 0x96A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E3 DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x9F1 DUP2 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0x96A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA49 DUP3 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP PUSH2 0xA54 DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA64 JUMPI PUSH2 0xA63 PUSH2 0xA0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7A DUP3 PUSH2 0x770 JUMP JUMPDEST SWAP2 POP PUSH2 0xA85 DUP4 PUSH2 0x770 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA9D JUMPI PUSH2 0xA9C PUSH2 0x96A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF PUSH1 0x26 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0xB0A DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2E DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B PUSH1 0x20 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0xB76 DUP3 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB9A DUP2 PUSH2 0xB5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD7 PUSH1 0x14 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0xBE2 DUP3 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC06 DUP2 PUSH2 0xBCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC43 PUSH1 0x10 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP PUSH2 0xC4E DUP3 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC72 DUP2 PUSH2 0xC36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 JUMP 0xC1 0x2B SWAP16 0xC9 0xC7 0xE0 0xEC 0xD9 PUSH23 0x3FFE5228E7817DF16A1B851B4129CE76EBD0A56F006473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "392:2246:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2227:295;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2528:105;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1623:63;;;;;;;;;;;;;:::i;:::-;;1615:84:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;697:25:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1900:321:8;;;:::i;:::-;;1558:59;;;;;;;;;;;;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1216:137:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;665:26:8;;;;:::o;2227:295::-;1094:13:0;:11;:13::i;:::-;2405:11:8::1;;2395:6;:21;;2387:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2463:6;2448:11;;:21;;;;;;;:::i;:::-;;;;;;;;2487:10;2479:28;;:36;2508:6;2479:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2227:295:::0;:::o;2528:105::-;2579:7;2605:21;2598:28;;2528:105;:::o;1623:63::-;1094:13:0;:11;:13::i;:::-;1669:10:8::1;:8;:10::i;:::-;1623:63::o:0;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;697:25:8:-;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1900:321:8:-;2034:19;2117:3;3688:2:7;2069:44:8;;2057:9;:56;;;;:::i;:::-;2056:64;;;;:::i;:::-;2034:86;;2153:11;2139:10;;:25;;;;;;;:::i;:::-;;;;;;;;2202:11;2190:9;:23;;;;:::i;:::-;2174:11;;:40;;;;;;;:::i;:::-;;;;;;;;1947:274;1900:321::o;1558:59::-;1094:13:0;:11;:13::i;:::-;1602:8:8::1;:6;:8::i;:::-;1558:59::o:0;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1216:137:8:-;1094:13:0;:11;:13::i;:::-;1342:4:8::1;1302:20;:37;1323:15;1302:37;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;1216:137:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:117:1:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;1945:106:1:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;1767:::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:90::-;1411:7;1454:5;1447:13;1440:21;1429:32;;1377:90;;;:::o;1473:109::-;1554:21;1569:5;1554:21;:::i;:::-;1549:3;1542:34;1473:109;;:::o;1588:210::-;1675:4;1713:2;1702:9;1698:18;1690:26;;1726:65;1788:1;1777:9;1773:17;1764:6;1726:65;:::i;:::-;1588:210;;;;:::o;1804:126::-;1841:7;1881:42;1874:5;1870:54;1859:65;;1804:126;;;:::o;1936:96::-;1973:7;2002:24;2020:5;2002:24;:::i;:::-;1991:35;;1936:96;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:122::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o;2518:139::-;2564:5;2602:6;2589:20;2580:29;;2618:33;2645:5;2618:33;:::i;:::-;2518:139;;;;:::o;2663:329::-;2722:6;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;2663:329;;;;:::o;2998:169::-;3082:11;3116:6;3111:3;3104:19;3156:4;3151:3;3147:14;3132:29;;2998:169;;;;:::o;3173:166::-;3313:18;3309:1;3301:6;3297:14;3290:42;3173:166;:::o;3345:366::-;3487:3;3508:67;3572:2;3567:3;3508:67;:::i;:::-;3501:74;;3584:93;3673:3;3584:93;:::i;:::-;3702:2;3697:3;3693:12;3686:19;;3345:366;;;:::o;3717:419::-;3883:4;3921:2;3910:9;3906:18;3898:26;;3970:9;3964:4;3960:20;3956:1;3945:9;3941:17;3934:47;3998:131;4124:4;3998:131;:::i;:::-;3990:139;;3717:419;;;:::o;4142:180::-;4190:77;4187:1;4180:88;4287:4;4284:1;4277:15;4311:4;4308:1;4301:15;4328:194;4368:4;4388:20;4406:1;4388:20;:::i;:::-;4383:25;;4422:20;4440:1;4422:20;:::i;:::-;4417:25;;4466:1;4463;4459:9;4451:17;;4490:1;4484:4;4481:11;4478:37;;;4495:18;;:::i;:::-;4478:37;4328:194;;;;:::o;4528:410::-;4568:7;4591:20;4609:1;4591:20;:::i;:::-;4586:25;;4625:20;4643:1;4625:20;:::i;:::-;4620:25;;4680:1;4677;4673:9;4702:30;4720:11;4702:30;:::i;:::-;4691:41;;4881:1;4872:7;4868:15;4865:1;4862:22;4842:1;4835:9;4815:83;4792:139;;4911:18;;:::i;:::-;4792:139;4576:362;4528:410;;;;:::o;4944:180::-;4992:77;4989:1;4982:88;5089:4;5086:1;5079:15;5113:4;5110:1;5103:15;5130:185;5170:1;5187:20;5205:1;5187:20;:::i;:::-;5182:25;;5221:20;5239:1;5221:20;:::i;:::-;5216:25;;5260:1;5250:35;;5265:18;;:::i;:::-;5250:35;5307:1;5304;5300:9;5295:14;;5130:185;;;;:::o;5321:191::-;5361:3;5380:20;5398:1;5380:20;:::i;:::-;5375:25;;5414:20;5432:1;5414:20;:::i;:::-;5409:25;;5457:1;5454;5450:9;5443:16;;5478:3;5475:1;5472:10;5469:36;;;5485:18;;:::i;:::-;5469:36;5321:191;;;;:::o;5518:225::-;5658:34;5654:1;5646:6;5642:14;5635:58;5727:8;5722:2;5714:6;5710:15;5703:33;5518:225;:::o;5749:366::-;5891:3;5912:67;5976:2;5971:3;5912:67;:::i;:::-;5905:74;;5988:93;6077:3;5988:93;:::i;:::-;6106:2;6101:3;6097:12;6090:19;;5749:366;;;:::o;6121:419::-;6287:4;6325:2;6314:9;6310:18;6302:26;;6374:9;6368:4;6364:20;6360:1;6349:9;6345:17;6338:47;6402:131;6528:4;6402:131;:::i;:::-;6394:139;;6121:419;;;:::o;6546:182::-;6686:34;6682:1;6674:6;6670:14;6663:58;6546:182;:::o;6734:366::-;6876:3;6897:67;6961:2;6956:3;6897:67;:::i;:::-;6890:74;;6973:93;7062:3;6973:93;:::i;:::-;7091:2;7086:3;7082:12;7075:19;;6734:366;;;:::o;7106:419::-;7272:4;7310:2;7299:9;7295:18;7287:26;;7359:9;7353:4;7349:20;7345:1;7334:9;7330:17;7323:47;7387:131;7513:4;7387:131;:::i;:::-;7379:139;;7106:419;;;:::o;7531:170::-;7671:22;7667:1;7659:6;7655:14;7648:46;7531:170;:::o;7707:366::-;7849:3;7870:67;7934:2;7929:3;7870:67;:::i;:::-;7863:74;;7946:93;8035:3;7946:93;:::i;:::-;8064:2;8059:3;8055:12;8048:19;;7707:366;;;:::o;8079:419::-;8245:4;8283:2;8272:9;8268:18;8260:26;;8332:9;8326:4;8322:20;8318:1;8307:9;8303:17;8296:47;8360:131;8486:4;8360:131;:::i;:::-;8352:139;;8079:419;;;:::o;8504:166::-;8644:18;8640:1;8632:6;8628:14;8621:42;8504:166;:::o;8676:366::-;8818:3;8839:67;8903:2;8898:3;8839:67;:::i;:::-;8832:74;;8915:93;9004:3;8915:93;:::i;:::-;9033:2;9028:3;9024:12;9017:19;;8676:366;;;:::o;9048:419::-;9214:4;9252:2;9241:9;9237:18;9229:26;;9301:9;9295:4;9291:20;9287:1;9276:9;9272:17;9265:47;9329:131;9455:4;9329:131;:::i;:::-;9321:139;;9048:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "649400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAuthorizedContract(address)": "27164",
								"depositNFTRevenue()": "infinite",
								"getCombinedBalance()": "384",
								"owner()": "2588",
								"pause()": "infinite",
								"paused()": "2618",
								"privateFund()": "2430",
								"publicFund()": "2540",
								"renounceOwnership()": "30398",
								"transferOwnership(address)": "30854",
								"unpause()": "infinite",
								"withdrawPrivateFund(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 2638,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c356c12b9fc9c7e0ecd9763ffe5228e7817df16a1b851b4129ce76ebd0a56f0064736f6c63430008130033",
									".code": [
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "760C764D"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "98EAA4A7"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "15F009A"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "3419628B"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "3D2BA888"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "68A18CC2"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 392,
											"end": 2638,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 665,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 665,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2227,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2227,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2528,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2528,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1623,
											"end": 1686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 697,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 697,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1900,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1558,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1216,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1216,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 691,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 665,
											"end": 691,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2405,
											"end": 2416,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2416,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2416,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2387,
											"end": 2437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2387,
											"end": 2437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2448,
											"end": 2459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2448,
											"end": 2469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2487,
											"end": 2497,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2507,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 2508,
											"end": 2514,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2579,
											"end": 2586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2626,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2626,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1623,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1669,
											"end": 1677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1669,
											"end": 1679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1669,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1900,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3688,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "3C"
										},
										{
											"begin": 2069,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2069,
											"end": 2113,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2057,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2057,
											"end": 2113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2057,
											"end": 2113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2057,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2057,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2057,
											"end": 2113,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2057,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2056,
											"end": 2120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2056,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2120,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2056,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2139,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2213,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2190,
											"end": 2213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2190,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2190,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2185,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2174,
											"end": 2185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2174,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 2221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 2221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1558,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1602,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1602,
											"end": 1610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1602,
											"end": 1610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1302,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1338,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1346,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1460,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1461,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1461,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1582,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1473,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1569,
											"end": 1574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1554,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1798,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1588,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1715,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1788,
											"end": 1789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1726,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1726,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1798,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1930,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1804,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1923,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1870,
											"end": 1924,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1859,
											"end": 1924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1859,
											"end": 1924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1930,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1936,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 1980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2020,
											"end": 2025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2002,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2032,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2306,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2463,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2618,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2518,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3114,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3339,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3173,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420656E6F7567682066756E647300000000000000000000000000000000"
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3332,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3711,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3345,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 3567,
											"end": 3570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3508,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3575,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3508,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3501,
											"end": 3575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3501,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3584,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3677,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3584,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3693,
											"end": 3705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3711,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 4136,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3717,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 3887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3960,
											"end": 3980,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 3957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3981,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4124,
											"end": 4128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3998,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4129,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3998,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 4136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 4136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 4136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4322,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4142,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4187,
											"end": 4188,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4268,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4284,
											"end": 4285,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4277,
											"end": 4292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4316,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4522,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4328,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4406,
											"end": 4407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4388,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4408,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4388,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4408,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4440,
											"end": 4441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4422,
											"end": 4442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4442,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4466,
											"end": 4467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4468,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4451,
											"end": 4468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4451,
											"end": 4468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4515,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4478,
											"end": 4515,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4495,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4515,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4478,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4522,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4938,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4528,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4568,
											"end": 4575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4591,
											"end": 4611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4611,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4591,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4625,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 4645,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4625,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4677,
											"end": 4678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4682,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4720,
											"end": 4731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4702,
											"end": 4732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4732,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4702,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4883,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4884,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4815,
											"end": 4898,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4792,
											"end": 4931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4911,
											"end": 4929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4792,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4576,
											"end": 4938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4938,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4528,
											"end": 4938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5124,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4944,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5069,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4989,
											"end": 4990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 5070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5093,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5086,
											"end": 5087,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5079,
											"end": 5094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5117,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5118,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5315,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 5130,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5205,
											"end": 5206,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5187,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5207,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5187,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5182,
											"end": 5207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5182,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5221,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5239,
											"end": 5240,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5221,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5221,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5221,
											"end": 5241,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5221,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5260,
											"end": 5261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5250,
											"end": 5285,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5265,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5250,
											"end": 5285,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5250,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5315,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5380,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5380,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5375,
											"end": 5400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5432,
											"end": 5433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5414,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5409,
											"end": 5434,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5409,
											"end": 5434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5455,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5482,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5485,
											"end": 5503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5469,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5743,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5518,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5692,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5635,
											"end": 5693,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5735,
											"name": "PUSH",
											"source": 10,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5736,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 6115,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5749,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 5894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5976,
											"end": 5978,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5971,
											"end": 5974,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 5912,
											"end": 5979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5912,
											"end": 5979,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5912,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5979,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 6077,
											"end": 6080,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5988,
											"end": 6081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6108,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6101,
											"end": 6104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 6115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 6115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 6115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 6115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6540,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 6121,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6314,
											"end": 6323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6302,
											"end": 6328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6302,
											"end": 6328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6383,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6368,
											"end": 6372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6384,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6358,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6338,
											"end": 6385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 6528,
											"end": 6532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6402,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6533,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 6402,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6533,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6728,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6546,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6682,
											"end": 6683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6663,
											"end": 6721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 7100,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 6734,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6897,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 6961,
											"end": 6963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 6897,
											"end": 6964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6964,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 6897,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6964,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6973,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 7062,
											"end": 7065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6973,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6973,
											"end": 7066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6973,
											"end": 7066,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 6973,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7086,
											"end": 7089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7075,
											"end": 7094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7075,
											"end": 7094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 7100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 7100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 7100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 7100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7525,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 7106,
											"end": 7525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7272,
											"end": 7276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7312,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7299,
											"end": 7308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7287,
											"end": 7313,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7287,
											"end": 7313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7349,
											"end": 7369,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7387,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7513,
											"end": 7517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7387,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 7387,
											"end": 7518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7387,
											"end": 7518,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7387,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7701,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 7531,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7671,
											"end": 7693,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 7667,
											"end": 7668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7655,
											"end": 7669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7648,
											"end": 7694,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 8073,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 7707,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7849,
											"end": 7852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 7870,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7870,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 7937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 7937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8035,
											"end": 8038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 7946,
											"end": 8039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 8039,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7946,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 8067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 8073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 8073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 8073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 8073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8498,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 8079,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8245,
											"end": 8249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8285,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8272,
											"end": 8281,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8322,
											"end": 8342,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8307,
											"end": 8316,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8303,
											"end": 8320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8296,
											"end": 8343,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8360,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 8486,
											"end": 8490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8360,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 8360,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8360,
											"end": 8491,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 8360,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8491,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8670,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 8504,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8644,
											"end": 8662,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 8640,
											"end": 8641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8632,
											"end": 8638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8628,
											"end": 8642,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8621,
											"end": 8663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 9042,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 8676,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 8903,
											"end": 8905,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 8898,
											"end": 8901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 8839,
											"end": 8906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8915,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 9004,
											"end": 9007,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8915,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 8915,
											"end": 9008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8915,
											"end": 9008,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8915,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9035,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9028,
											"end": 9031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9024,
											"end": 9036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 9042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 9042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 9042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 9042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9467,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 9048,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9254,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9301,
											"end": 9310,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9295,
											"end": 9299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9291,
											"end": 9311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9287,
											"end": 9288,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9285,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9265,
											"end": 9312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9329,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 9455,
											"end": 9459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9329,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 9329,
											"end": 9460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9329,
											"end": 9460,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 9329,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9321,
											"end": 9460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9321,
											"end": 9460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9467,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"Treasury.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAuthorizedContract(address)": "98eaa4a7",
							"depositNFTRevenue()": "760c764d",
							"getCombinedBalance()": "3d2ba888",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"privateFund()": "015f009a",
							"publicFund()": "68a18cc2",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdrawPrivateFund(uint256)": "3419628b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"addAuthorizedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositNFTRevenue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCombinedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPrivateFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Treasury.sol\":\"Treasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"DoAConstants.sol\":{\"keccak256\":\"0x55ef434cacc5cd41d8486e375d92253c3913cdb336e50e55edcd3de5830ff473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0342dc7329e66b28652792f33a5d20303f17eec9f15748ff06d80a76627d513a\",\"dweb:/ipfs/QmNTJfJi3qicRCRx1h43spbvfmkqpfJdprTiC3X8rwtNDn\"]},\"Treasury.sol\":{\"keccak256\":\"0x025e95543531e1c21347ff7526619640837d237e08d800195e86e3786805ba4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9b82d16e77d3d84f9fc21143bb23bbfd03e5a2a5eb9be0238dee679293c3bc2\",\"dweb:/ipfs/Qma1SqJNBT5P796Jucd9P7DtTXVDmLKnX6BC9ZZBXYsM9C\"]},\"iTreasury.sol\":{\"keccak256\":\"0x7fd4f3060b070c6694fd2956f0a09d0746b52e585711d14e38ec0b721afa2f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280149071ead0a0bb9ef085787952c7a704116096d8e448da78d6c057085d1bd\",\"dweb:/ipfs/QmVKVemyoxpNkJWxG8SocMKEUw3JS4mj6Qk8uYrbWKGihD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Treasury.sol:Treasury",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "Treasury.sol:Treasury",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 231,
								"contract": "Treasury.sol:Treasury",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1764,
								"contract": "Treasury.sol:Treasury",
								"label": "privateFund",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1766,
								"contract": "Treasury.sol:Treasury",
								"label": "publicFund",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1770,
								"contract": "Treasury.sol:Treasury",
								"label": "_authorizedContracts",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"iTreasury.sol": {
				"iTreasury": {
					"abi": [
						{
							"inputs": [],
							"name": "depositNFTRevenue",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCombinedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawPrivateFund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositNFTRevenue()": "760c764d",
							"getCombinedBalance()": "3d2ba888",
							"withdrawPrivateFund(uint256)": "3419628b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"depositNFTRevenue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCombinedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPrivateFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"iTreasury.sol\":\"iTreasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"iTreasury.sol\":{\"keccak256\":\"0x7fd4f3060b070c6694fd2956f0a09d0746b52e585711d14e38ec0b721afa2f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280149071ead0a0bb9ef085787952c7a704116096d8e448da78d6c057085d1bd\",\"dweb:/ipfs/QmVKVemyoxpNkJWxG8SocMKEUw3JS4mj6Qk8uYrbWKGihD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 297,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								296
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 297,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								296
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": []
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 226,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 229,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 234,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 235,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 239,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 274,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 242,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 245,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 246,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 250,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 255,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 274,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 268,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 269,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 274,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 275,
							"src": "888:1952:2",
							"usedErrors": []
						}
					],
					"src": "112:2729:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 296,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 296,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							370
						]
					},
					"id": 371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:4",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 370,
							"linearizedBaseContracts": [
								370
							],
							"name": "Counters",
							"nameLocation": "432:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 302,
									"members": [
										{
											"constant": false,
											"id": 301,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 302,
											"src": "786:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 300,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:4",
									"nodeType": "StructDefinition",
									"scope": 370,
									"src": "447:374:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "901:38:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 310,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "918:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:4",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 301,
													"src": "918:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 309,
												"id": 312,
												"nodeType": "Return",
												"src": "911:21:4"
											}
										]
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "844:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 304,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 303,
														"name": "Counter",
														"nameLocations": [
															"844:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 302,
														"src": "844:7:4"
													},
													"referencedDeclaration": 302,
													"src": "844:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:4"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "892:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:4"
									},
									"scope": 370,
									"src": "827:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "998:70:4",
										"statements": [
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:4",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 320,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1032:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:4",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 301,
																"src": "1032:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:4"
													}
												]
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "964:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 315,
														"name": "Counter",
														"nameLocations": [
															"964:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 302,
														"src": "964:7:4"
													},
													"referencedDeclaration": 302,
													"src": "964:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:4"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:4"
									},
									"scope": 370,
									"src": "945:123:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "1127:176:4",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 355,
														"src": "1137:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"expression": {
														"id": 336,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1153:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:4",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 301,
													"src": "1153:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "1185:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:4"
											},
											{
												"id": 354,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:4",
												"statements": [
													{
														"expression": {
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 346,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "1260:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:4",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 301,
																"src": "1260:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 349,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1277:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 353,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:4"
													}
												]
											}
										]
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1093:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "Counter",
														"nameLocations": [
															"1093:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 302,
														"src": "1093:7:4"
													},
													"referencedDeclaration": 302,
													"src": "1093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:4"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:4"
									},
									"scope": 370,
									"src": "1074:229:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1358:35:4",
										"statements": [
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 362,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "1368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:4",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 301,
														"src": "1368:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:4"
											}
										]
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1324:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "Counter",
														"nameLocations": [
															"1324:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 302,
														"src": "1324:7:4"
													},
													"referencedDeclaration": 302,
													"src": "1324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$302_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:4"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:4"
									},
									"scope": 370,
									"src": "1309:84:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 371,
							"src": "424:971:4",
							"usedErrors": []
						}
					],
					"src": "87:1309:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1410
						],
						"Strings": [
							545
						]
					},
					"id": 546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 372,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 546,
							"sourceUnit": 1411,
							"src": "126:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 374,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545
							],
							"name": "Strings",
							"nameLocation": "196:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 377,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "210:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 375,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 380,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "270:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 378,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 379,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "486:625:5",
										"statements": [
											{
												"id": 426,
												"nodeType": "UncheckedBlock",
												"src": "496:609:5",
												"statements": [
													{
														"assignments": [
															389
														],
														"declarations": [
															{
																"constant": false,
																"id": 389,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 426,
																"src": "520:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 388,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 396,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 392,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "548:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 390,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "537:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1410_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1247,
																	"src": "537:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:5"
													},
													{
														"assignments": [
															398
														],
														"declarations": [
															{
																"constant": false,
																"id": 398,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 426,
																"src": "572:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 397,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 403,
														"initialValue": {
															"arguments": [
																{
																	"id": 401,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "606:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 399,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:5"
													},
													{
														"assignments": [
															405
														],
														"declarations": [
															{
																"constant": false,
																"id": 405,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 426,
																"src": "627:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 404,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 406,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 398,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:5",
																"valueSize": 1
															},
															{
																"declaration": 389,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:5",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:5",
																"valueSize": 1
															}
														],
														"id": 407,
														"nodeType": "InlineAssembly",
														"src": "699:76:5"
													},
													{
														"body": {
															"id": 422,
															"nodeType": "Block",
															"src": "801:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:5",
																		"subExpression": {
																			"id": 409,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "819:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 411,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:5"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:5"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 377,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 405,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 383,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 412,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:5"
																},
																{
																	"expression": {
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 413,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 383,
																			"src": "1003:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 416,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 417,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 383,
																			"src": "1036:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 421,
																	"nodeType": "IfStatement",
																	"src": "1032:21:5",
																	"trueBody": {
																		"id": 420,
																		"nodeType": "Break",
																		"src": "1048:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 423,
														"nodeType": "WhileStatement",
														"src": "788:280:5"
													},
													{
														"expression": {
															"id": 424,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1088:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 387,
														"id": 425,
														"nodeType": "Return",
														"src": "1081:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:5"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "471:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:5"
									},
									"scope": 545,
									"src": "415:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1290:100:5",
										"statements": [
											{
												"id": 446,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "1343:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 440,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "1362:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 438,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1410,
																				"src": "1350:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1410_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1370,
																			"src": "1350:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 436,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	448,
																	524,
																	544
																],
																"referencedDeclaration": 524,
																"src": "1331:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 435,
														"id": 445,
														"nodeType": "Return",
														"src": "1324:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1237:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:5"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1275:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:5"
									},
									"scope": 545,
									"src": "1216:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "1603:347:5",
										"statements": [
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "1613:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 458,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 463,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "1649:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 460,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:5"
											},
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 469,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "1670:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 471,
														"indexExpression": {
															"hexValue": "30",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:5"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 475,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "1695:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 477,
														"indexExpression": {
															"hexValue": "31",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:5"
											},
											{
												"body": {
													"id": 509,
													"nodeType": "Block",
													"src": "1765:83:5",
													"statements": [
														{
															"expression": {
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 495,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "1779:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 497,
																	"indexExpression": {
																		"id": 496,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "1786:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 498,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "1791:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 502,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 499,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 451,
																			"src": "1800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:5"
														},
														{
															"expression": {
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 505,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "1826:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 508,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 489,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1753:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"initializationExpression": {
													"assignments": [
														482
													],
													"declarations": [
														{
															"constant": false,
															"id": 482,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 510,
															"src": "1725:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 481,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 488,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 484,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "1741:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:5",
														"subExpression": {
															"id": 492,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "1762:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 494,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 512,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "1865:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "1936:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 518,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 457,
												"id": 522,
												"nodeType": "Return",
												"src": "1922:21:5"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1534:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:5"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1588:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:5"
									},
									"scope": 545,
									"src": "1513:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2175:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 537,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "2220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 535,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 533,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 540,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2228:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 532,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															448,
															524,
															544
														],
														"referencedDeclaration": 524,
														"src": "2192:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 531,
												"id": 542,
												"nodeType": "Return",
												"src": "2185:59:5"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2123:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:5"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2160:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 529,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:5"
									},
									"scope": 545,
									"src": "2102:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 546,
							"src": "188:2065:5",
							"usedErrors": []
						}
					],
					"src": "101:2153:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 547,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 548,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1410,
							"linearizedBaseContracts": [
								1410
							],
							"name": "Math",
							"nameLocation": "210:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 552,
									"members": [
										{
											"id": 549,
											"name": "Down",
											"nameLocation": "245:4:6",
											"nodeType": "EnumValue",
											"src": "245:4:6"
										},
										{
											"id": 550,
											"name": "Up",
											"nameLocation": "287:2:6",
											"nodeType": "EnumValue",
											"src": "287:2:6"
										},
										{
											"id": 551,
											"name": "Zero",
											"nameLocation": "318:4:6",
											"nodeType": "EnumValue",
											"src": "318:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:6",
									"nodeType": "EnumDefinition",
									"src": "221:122:6"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "480:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 562,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "497:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 563,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "501:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 566,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:6",
													"trueExpression": {
														"id": 565,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "505:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 568,
												"nodeType": "Return",
												"src": "490:20:6"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "426:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "437:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:6"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "471:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:6"
									},
									"scope": 1410,
									"src": "413:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "655:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 580,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "672:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 581,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "676:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 584,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "684:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:6",
													"trueExpression": {
														"id": 583,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "680:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 579,
												"id": 586,
												"nodeType": "Return",
												"src": "665:20:6"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "646:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:6"
									},
									"scope": 1410,
									"src": "588:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "876:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 598,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 599,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "935:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 601,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 602,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "941:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 603,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "945:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 605,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 597,
												"id": 609,
												"nodeType": "Return",
												"src": "923:28:6"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "822:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "833:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:6"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "867:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:6"
									},
									"scope": 1410,
									"src": "805:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "1228:123:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 621,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "1316:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 625,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "1330:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 628,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 629,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "1339:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 620,
												"id": 634,
												"nodeType": "Return",
												"src": "1309:35:6"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1174:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1185:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:6"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1219:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:6"
									},
									"scope": 1410,
									"src": "1157:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "1795:3797:6",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:6",
												"statements": [
													{
														"assignments": [
															649
														],
														"declarations": [
															{
																"constant": false,
																"id": 649,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "2126:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 648,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 650,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:6"
													},
													{
														"assignments": [
															652
														],
														"declarations": [
															{
																"constant": false,
																"id": 652,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "2198:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 651,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 653,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:6",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:6",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:6",
																"valueSize": 1
															},
															{
																"declaration": 652,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:6",
																"valueSize": 1
															},
															{
																"declaration": 639,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:6",
																"valueSize": 1
															},
															{
																"declaration": 639,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:6",
																"valueSize": 1
															},
															{
																"declaration": 641,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:6",
																"valueSize": 1
															},
															{
																"declaration": 641,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:6",
																"valueSize": 1
															}
														],
														"id": 654,
														"nodeType": "InlineAssembly",
														"src": "2269:166:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 655,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "2516:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 663,
														"nodeType": "IfStatement",
														"src": "2512:75:6",
														"trueBody": {
															"id": 662,
															"nodeType": "Block",
															"src": "2528:59:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 658,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 649,
																			"src": "2553:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 659,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "2561:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 647,
																	"id": 661,
																	"nodeType": "Return",
																	"src": "2546:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 665,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "2697:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 666,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "2711:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 664,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 669,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:6"
													},
													{
														"assignments": [
															671
														],
														"declarations": [
															{
																"constant": false,
																"id": 671,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "2973:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 670,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 672,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:6"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:6"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 643,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:6",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:6",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:6",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:6",
																"valueSize": 1
															},
															{
																"declaration": 652,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:6",
																"valueSize": 1
															},
															{
																"declaration": 652,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:6",
																"valueSize": 1
															},
															{
																"declaration": 671,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:6",
																"valueSize": 1
															},
															{
																"declaration": 671,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:6",
																"valueSize": 1
															},
															{
																"declaration": 671,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:6",
																"valueSize": 1
															},
															{
																"declaration": 639,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:6",
																"valueSize": 1
															},
															{
																"declaration": 641,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:6",
																"valueSize": 1
															}
														],
														"id": 673,
														"nodeType": "InlineAssembly",
														"src": "3004:300:6"
													},
													{
														"assignments": [
															675
														],
														"declarations": [
															{
																"constant": false,
																"id": 675,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "3611:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 674,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 683,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 676,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "3626:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:6",
																			"subExpression": {
																				"id": 677,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "3642:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:6"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 643,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:6",
																"valueSize": 1
															},
															{
																"declaration": 643,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:6",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:6",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:6",
																"valueSize": 1
															},
															{
																"declaration": 675,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:6",
																"valueSize": 1
															},
															{
																"declaration": 675,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:6",
																"valueSize": 1
															},
															{
																"declaration": 675,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:6",
																"valueSize": 1
															},
															{
																"declaration": 675,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:6",
																"valueSize": 1
															},
															{
																"declaration": 675,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:6",
																"valueSize": 1
															}
														],
														"id": 684,
														"nodeType": "InlineAssembly",
														"src": "3672:371:6"
													},
													{
														"expression": {
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 685,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "4109:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 686,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "4118:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 687,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "4126:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 690,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:6"
													},
													{
														"assignments": [
															692
														],
														"declarations": [
															{
																"constant": false,
																"id": 692,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "4448:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 699,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 694,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "4471:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 696,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:6"
													},
													{
														"expression": {
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 700,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "4704:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 702,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "4719:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 703,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "4733:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 707,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:6"
													},
													{
														"expression": {
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 708,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "4773:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 710,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "4788:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 711,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "4802:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 715,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:6"
													},
													{
														"expression": {
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 716,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "4843:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 718,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "4858:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 719,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "4872:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 723,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:6"
													},
													{
														"expression": {
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 724,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "4913:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 726,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "4928:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 727,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "4942:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 731,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:6"
													},
													{
														"expression": {
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 732,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "4983:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 734,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "4998:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 735,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "5012:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 739,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:6"
													},
													{
														"expression": {
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 740,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "5054:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 742,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "5069:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 743,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "5083:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 747,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:6"
													},
													{
														"expression": {
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 748,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "5524:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 749,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "5533:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 750,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "5541:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:6"
													},
													{
														"expression": {
															"id": 754,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "5569:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 647,
														"id": 755,
														"nodeType": "Return",
														"src": "5562:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1692:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1711:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1730:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:6"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1779:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:6"
									},
									"scope": 1410,
									"src": "1667:3925:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "5872:189:6",
										"statements": [
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "5882:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"arguments": [
														{
															"id": 776,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "5906:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 777,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "5909:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 778,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5912:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															758,
															802
														],
														"referencedDeclaration": 758,
														"src": "5899:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$552",
															"typeString": "enum Math.Rounding"
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 781,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "5938:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$552",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 782,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "5950:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$552_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:6",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 550,
															"src": "5950:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$552",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 786,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "5972:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 787,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "5975:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 788,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "5978:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 785,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 798,
												"nodeType": "IfStatement",
												"src": "5934:98:6",
												"trueBody": {
													"id": 797,
													"nodeType": "Block",
													"src": "5996:36:6",
													"statements": [
														{
															"expression": {
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 793,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "6010:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 796,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 799,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 774,
													"src": "6048:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 800,
												"nodeType": "Return",
												"src": "6041:13:6"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5749:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5787:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5816:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$552",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 766,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 552,
														"src": "5816:8:6"
													},
													"referencedDeclaration": 552,
													"src": "5816:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$552",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "5863:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:6"
									},
									"scope": 1410,
									"src": "5724:337:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "6337:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "6351:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 816,
												"nodeType": "IfStatement",
												"src": "6347:45:6",
												"trueBody": {
													"id": 815,
													"nodeType": "Block",
													"src": "6359:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 809,
															"id": 814,
															"nodeType": "Return",
															"src": "6373:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													818
												],
												"declarations": [
													{
														"constant": false,
														"id": 818,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "7071:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 817,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 821,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "7099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 820,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1082,
																			1118
																		],
																		"referencedDeclaration": 1082,
																		"src": "7094:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 825,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:6"
											},
											{
												"id": 912,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:6",
												"statements": [
													{
														"expression": {
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 828,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "7532:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 829,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "7542:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 830,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "7551:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 831,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "7555:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 834,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 838,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:6"
													},
													{
														"expression": {
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 839,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "7581:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 840,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "7591:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 841,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "7600:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 842,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "7604:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 845,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 849,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:6"
													},
													{
														"expression": {
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 850,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "7630:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 851,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "7640:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 852,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "7649:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 853,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "7653:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 856,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 860,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:6"
													},
													{
														"expression": {
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 861,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "7679:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 862,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "7689:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 863,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "7698:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 864,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "7702:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 871,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:6"
													},
													{
														"expression": {
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 872,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "7728:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 873,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "7738:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 874,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "7747:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 875,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "7751:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 878,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 882,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:6"
													},
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 883,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "7777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 884,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "7787:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 885,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "7796:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 886,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "7800:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 889,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:6"
													},
													{
														"expression": {
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 894,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "7826:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 895,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "7836:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 896,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "7845:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 897,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "7849:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 900,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 904,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 906,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "7886:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 907,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "7894:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 908,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "7898:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 905,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "7882:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 809,
														"id": 911,
														"nodeType": "Return",
														"src": "7875:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "6294:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:6"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "6328:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:6"
									},
									"scope": 1410,
									"src": "6280:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "8098:161:6",
										"statements": [
											{
												"id": 948,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:6",
												"statements": [
													{
														"assignments": [
															926
														],
														"declarations": [
															{
																"constant": false,
																"id": 926,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 948,
																"src": "8132:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 930,
														"initialValue": {
															"arguments": [
																{
																	"id": 928,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "8154:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 927,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	914,
																	950
																],
																"referencedDeclaration": 914,
																"src": "8149:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 931,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "8177:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$552",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 932,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 920,
																					"src": "8187:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$552",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 933,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "8199:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$552_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 934,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 550,
																					"src": "8199:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$552",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 938,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 936,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 926,
																						"src": "8214:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 937,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 926,
																						"src": "8223:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 939,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 917,
																					"src": "8232:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 945,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 924,
														"id": 947,
														"nodeType": "Return",
														"src": "8170:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "8036:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "8047:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$552",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 552,
														"src": "8047:8:6"
													},
													"referencedDeclaration": 552,
													"src": "8047:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$552",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:6"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "8089:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:6"
									},
									"scope": 1410,
									"src": "8022:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "8444:922:6",
										"statements": [
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "8454:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 961,
												"initialValue": {
													"hexValue": "30",
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:6"
											},
											{
												"id": 1078,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8510:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 976,
														"nodeType": "IfStatement",
														"src": "8506:99:6",
														"trueBody": {
															"id": 975,
															"nodeType": "Block",
															"src": "8528:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 967,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "8546:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 970,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:6"
																},
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "8577:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 977,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8622:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 991,
														"nodeType": "IfStatement",
														"src": "8618:96:6",
														"trueBody": {
															"id": 990,
															"nodeType": "Block",
															"src": "8639:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "8657:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 985,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:6"
																},
																{
																	"expression": {
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 986,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "8687:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 989,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8731:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1006,
														"nodeType": "IfStatement",
														"src": "8727:96:6",
														"trueBody": {
															"id": 1005,
															"nodeType": "Block",
															"src": "8748:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 997,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "8766:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1000,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:6"
																},
																{
																	"expression": {
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "8796:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1004,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1007,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8840:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1021,
														"nodeType": "IfStatement",
														"src": "8836:96:6",
														"trueBody": {
															"id": 1020,
															"nodeType": "Block",
															"src": "8857:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1012,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "8875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1015,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:6"
																},
																{
																	"expression": {
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1016,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "8905:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1019,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1022,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8949:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1036,
														"nodeType": "IfStatement",
														"src": "8945:93:6",
														"trueBody": {
															"id": 1035,
															"nodeType": "Block",
															"src": "8965:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1027,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "8983:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1030,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:6"
																},
																{
																	"expression": {
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1031,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "9012:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1034,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1037,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "9055:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1051,
														"nodeType": "IfStatement",
														"src": "9051:93:6",
														"trueBody": {
															"id": 1050,
															"nodeType": "Block",
															"src": "9071:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1042,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "9089:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1045,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:6"
																},
																{
																	"expression": {
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1046,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "9118:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1049,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1052,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "9161:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1066,
														"nodeType": "IfStatement",
														"src": "9157:93:6",
														"trueBody": {
															"id": 1065,
															"nodeType": "Block",
															"src": "9177:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1057,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "9195:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1060,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:6"
																},
																{
																	"expression": {
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1061,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "9224:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1064,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1067,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "9267:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1077,
														"nodeType": "IfStatement",
														"src": "9263:64:6",
														"trueBody": {
															"id": 1076,
															"nodeType": "Block",
															"src": "9283:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1072,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "9301:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1075,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1079,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 959,
													"src": "9353:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 957,
												"id": 1080,
												"nodeType": "Return",
												"src": "9346:13:6"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "8397:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "8435:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:6"
									},
									"scope": 1410,
									"src": "8383:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "9599:165:6",
										"statements": [
											{
												"id": 1116,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:6",
												"statements": [
													{
														"assignments": [
															1094
														],
														"declarations": [
															{
																"constant": false,
																"id": 1094,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1116,
																"src": "9633:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1093,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1098,
														"initialValue": {
															"arguments": [
																{
																	"id": 1096,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "9655:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1095,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1082,
																	1118
																],
																"referencedDeclaration": 1082,
																"src": "9650:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1099,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "9682:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$552",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1100,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1088,
																					"src": "9692:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$552",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1101,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "9704:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$552_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 550,
																					"src": "9704:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$552",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1104,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1105,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1094,
																						"src": "9724:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1107,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "9733:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1092,
														"id": 1115,
														"nodeType": "Return",
														"src": "9675:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "9533:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "9548:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$552",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1086,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 552,
														"src": "9548:8:6"
													},
													"referencedDeclaration": 552,
													"src": "9548:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$552",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:6"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "9590:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:6"
									},
									"scope": 1410,
									"src": "9519:245:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "9951:828:6",
										"statements": [
											{
												"assignments": [
													1127
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1246,
														"src": "9961:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"hexValue": "30",
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:6"
											},
											{
												"id": 1243,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10017:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1146,
														"nodeType": "IfStatement",
														"src": "10013:99:6",
														"trueBody": {
															"id": 1145,
															"nodeType": "Block",
															"src": "10034:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1135,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "10052:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:6"
																},
																{
																	"expression": {
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1141,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "10085:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1144,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10129:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1163,
														"nodeType": "IfStatement",
														"src": "10125:99:6",
														"trueBody": {
															"id": 1162,
															"nodeType": "Block",
															"src": "10146:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1152,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "10164:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1157,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:6"
																},
																{
																	"expression": {
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1158,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "10197:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1161,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1164,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10241:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1180,
														"nodeType": "IfStatement",
														"src": "10237:99:6",
														"trueBody": {
															"id": 1179,
															"nodeType": "Block",
															"src": "10258:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1169,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "10276:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1174,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:6"
																},
																{
																	"expression": {
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1175,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "10309:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1178,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10353:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1197,
														"nodeType": "IfStatement",
														"src": "10349:96:6",
														"trueBody": {
															"id": 1196,
															"nodeType": "Block",
															"src": "10369:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "10387:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1191,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:6"
																},
																{
																	"expression": {
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1192,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "10419:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1195,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1198,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10462:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1214,
														"nodeType": "IfStatement",
														"src": "10458:96:6",
														"trueBody": {
															"id": 1213,
															"nodeType": "Block",
															"src": "10478:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "10496:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:6"
																},
																{
																	"expression": {
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "10528:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1212,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1215,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10571:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1231,
														"nodeType": "IfStatement",
														"src": "10567:96:6",
														"trueBody": {
															"id": 1230,
															"nodeType": "Block",
															"src": "10587:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "10605:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1225,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:6"
																},
																{
																	"expression": {
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1226,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "10637:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1229,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10680:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1242,
														"nodeType": "IfStatement",
														"src": "10676:64:6",
														"trueBody": {
															"id": 1241,
															"nodeType": "Block",
															"src": "10696:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1237,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "10714:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1240,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1244,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1127,
													"src": "10766:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1245,
												"nodeType": "Return",
												"src": "10759:13:6"
											}
										]
									},
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "9904:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:6"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "9942:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:6"
									},
									"scope": 1410,
									"src": "9889:890:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "11014:165:6",
										"statements": [
											{
												"id": 1281,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:6",
												"statements": [
													{
														"assignments": [
															1259
														],
														"declarations": [
															{
																"constant": false,
																"id": 1259,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1281,
																"src": "11048:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1258,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1263,
														"initialValue": {
															"arguments": [
																{
																	"id": 1261,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "11071:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1260,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1247,
																	1283
																],
																"referencedDeclaration": 1247,
																"src": "11065:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1264,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "11098:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$552",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1265,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "11108:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$552",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1266,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "11120:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$552_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 550,
																					"src": "11120:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$552",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1271,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1270,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1259,
																						"src": "11139:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1272,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1250,
																					"src": "11148:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1278,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1257,
														"id": 1280,
														"nodeType": "Return",
														"src": "11091:71:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "10948:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "10963:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$552",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1251,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 552,
														"src": "10963:8:6"
													},
													"referencedDeclaration": 552,
													"src": "10963:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$552",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "11005:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:6"
									},
									"scope": 1410,
									"src": "10933:246:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "11493:600:6",
										"statements": [
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "11503:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1294,
												"initialValue": {
													"hexValue": "30",
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:6"
											},
											{
												"id": 1366,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1295,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "11559:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1309,
														"nodeType": "IfStatement",
														"src": "11555:98:6",
														"trueBody": {
															"id": 1308,
															"nodeType": "Block",
															"src": "11577:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "11595:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1303,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:6"
																},
																{
																	"expression": {
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1304,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "11626:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1307,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1310,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "11670:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"nodeType": "IfStatement",
														"src": "11666:95:6",
														"trueBody": {
															"id": 1323,
															"nodeType": "Block",
															"src": "11687:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1315,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "11705:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1318,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:6"
																},
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "11735:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1325,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "11778:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1339,
														"nodeType": "IfStatement",
														"src": "11774:95:6",
														"trueBody": {
															"id": 1338,
															"nodeType": "Block",
															"src": "11795:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "11813:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1333,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:6"
																},
																{
																	"expression": {
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1334,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "11843:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1337,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1340,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "11886:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1354,
														"nodeType": "IfStatement",
														"src": "11882:95:6",
														"trueBody": {
															"id": 1353,
															"nodeType": "Block",
															"src": "11903:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1345,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "11921:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1348,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:6"
																},
																{
																	"expression": {
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1349,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "11951:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1352,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1355,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "11994:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1365,
														"nodeType": "IfStatement",
														"src": "11990:64:6",
														"trueBody": {
															"id": 1364,
															"nodeType": "Block",
															"src": "12010:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1360,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "12028:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1363,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1367,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1292,
													"src": "12080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1368,
												"nodeType": "Return",
												"src": "12073:13:6"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "11446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:6"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "11484:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:6"
									},
									"scope": 1410,
									"src": "11430:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "12329:173:6",
										"statements": [
											{
												"id": 1407,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:6",
												"statements": [
													{
														"assignments": [
															1382
														],
														"declarations": [
															{
																"constant": false,
																"id": 1382,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1407,
																"src": "12363:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1381,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1386,
														"initialValue": {
															"arguments": [
																{
																	"id": 1384,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "12387:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1383,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1370,
																	1409
																],
																"referencedDeclaration": 1370,
																"src": "12380:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1387,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "12414:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$552",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1388,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1376,
																					"src": "12424:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$552",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1389,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "12436:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$552_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 550,
																					"src": "12436:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$552",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1397,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1392,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1395,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1393,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1382,
																									"src": "12457:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1394,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1396,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1398,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1373,
																					"src": "12471:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1404,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1380,
														"id": 1406,
														"nodeType": "Return",
														"src": "12407:78:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "12263:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "12278:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$552",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1375,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1374,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 552,
														"src": "12278:8:6"
													},
													"referencedDeclaration": 552,
													"src": "12278:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$552",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:6"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "12320:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:6"
									},
									"scope": 1410,
									"src": "12247:255:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1411,
							"src": "202:12302:6",
							"usedErrors": []
						}
					],
					"src": "103:12402:6"
				},
				"id": 6
			},
			"DoAConstants.sol": {
				"ast": {
					"absolutePath": "DoAConstants.sol",
					"exportedSymbols": {
						"DoAConstants": [
							1745
						],
						"NFT_CLASS": [
							1418
						]
					},
					"id": 1746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"canonicalName": "NFT_CLASS",
							"id": 1418,
							"members": [
								{
									"id": 1413,
									"name": "HERO",
									"nameLocation": "256:4:7",
									"nodeType": "EnumValue",
									"src": "256:4:7"
								},
								{
									"id": 1414,
									"name": "LEGEND",
									"nameLocation": "266:6:7",
									"nodeType": "EnumValue",
									"src": "266:6:7"
								},
								{
									"id": 1415,
									"name": "RARE",
									"nameLocation": "278:4:7",
									"nodeType": "EnumValue",
									"src": "278:4:7"
								},
								{
									"id": 1416,
									"name": "UNCOMMON",
									"nameLocation": "288:8:7",
									"nodeType": "EnumValue",
									"src": "288:8:7"
								},
								{
									"id": 1417,
									"name": "COMMON",
									"nameLocation": "302:6:7",
									"nodeType": "EnumValue",
									"src": "302:6:7"
								}
							],
							"name": "NFT_CLASS",
							"nameLocation": "240:9:7",
							"nodeType": "EnumDefinition",
							"src": "235:75:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DoAConstants",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1745,
							"linearizedBaseContracts": [
								1745
							],
							"name": "DoAConstants",
							"nameLocation": "511:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e93e980b",
									"id": 1421,
									"mutability": "constant",
									"name": "HERO_NFT_SUPPLY_1st",
									"nameLocation": "804:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "781:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1419,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "781:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "826:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8d1da411",
									"id": 1424,
									"mutability": "constant",
									"name": "LEGEND_NFT_SUPPLY_1st",
									"nameLocation": "857:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "834:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1422,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "834:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "881:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "970f6e2f",
									"id": 1427,
									"mutability": "constant",
									"name": "RARE_NFT_SUPPLY_1st",
									"nameLocation": "911:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "888:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1425,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "888:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1426,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "933:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5e28c936",
									"id": 1430,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_SUPPLY_1st",
									"nameLocation": "963:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "940:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1428,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "940:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1429,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "989:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "828d481b",
									"id": 1433,
									"mutability": "constant",
									"name": "COMMON_NFT_SUPPLY_1st",
									"nameLocation": "1020:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "997:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1431,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "997:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "313235",
										"id": 1432,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1044:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_125_by_1",
											"typeString": "int_const 125"
										},
										"value": "125"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a83179db",
									"id": 1436,
									"mutability": "constant",
									"name": "HERO_NFT_SUPPLY_2nd",
									"nameLocation": "1111:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1088:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1434,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1088:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1435,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1133:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "38d79b52",
									"id": 1439,
									"mutability": "constant",
									"name": "LEGEND_NFT_SUPPLY_2nd",
									"nameLocation": "1163:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1140:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1437,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1140:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1438,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1187:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5e09346a",
									"id": 1442,
									"mutability": "constant",
									"name": "RARE_NFT_SUPPLY_2nd",
									"nameLocation": "1218:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1195:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1440,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1195:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1441,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1240:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f59528d2",
									"id": 1445,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_SUPPLY_2nd",
									"nameLocation": "1271:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1248:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1443,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1248:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "323530",
										"id": 1444,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1297:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250_by_1",
											"typeString": "int_const 250"
										},
										"value": "250"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c525c0c8",
									"id": 1448,
									"mutability": "constant",
									"name": "COMMON_NFT_SUPPLY_2nd",
									"nameLocation": "1329:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1306:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1446,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1306:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31323530",
										"id": 1447,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1353:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1250_by_1",
											"typeString": "int_const 1250"
										},
										"value": "1250"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f41dc7d2",
									"id": 1451,
									"mutability": "constant",
									"name": "HERO_NFT_SUPPLY_3rd",
									"nameLocation": "1421:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1398:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1449,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1398:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1450,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1443:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bf0832ae",
									"id": 1454,
									"mutability": "constant",
									"name": "LEGEND_NFT_SUPPLY_3rd",
									"nameLocation": "1473:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1450:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1452,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1450:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3830",
										"id": 1453,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1497:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80_by_1",
											"typeString": "int_const 80"
										},
										"value": "80"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ca45f599",
									"id": 1457,
									"mutability": "constant",
									"name": "RARE_NFT_SUPPLY_3rd",
									"nameLocation": "1528:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1505:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1455,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1505:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 1456,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1550:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a1d2002d",
									"id": 1460,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_SUPPLY_3rd",
									"nameLocation": "1582:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1559:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1458,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1559:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "32303030",
										"id": 1459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1608:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000_by_1",
											"typeString": "int_const 2000"
										},
										"value": "2000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cb937d2b",
									"id": 1463,
									"mutability": "constant",
									"name": "COMMON_NFT_SUPPLY_3rd",
									"nameLocation": "1641:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1618:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1461,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "35373730",
										"id": 1462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1665:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5770_by_1",
											"typeString": "int_const 5770"
										},
										"value": "5770"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32a41506",
									"id": 1466,
									"mutability": "constant",
									"name": "NFT_SUPPLY_1st",
									"nameLocation": "1727:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1704:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1464,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1704:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "313831",
										"id": 1465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_181_by_1",
											"typeString": "int_const 181"
										},
										"value": "181"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1ab7730c",
									"id": 1469,
									"mutability": "constant",
									"name": "NFT_SUPPLY_2nd",
									"nameLocation": "1776:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1753:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1467,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1753:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31353630",
										"id": 1468,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1793:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1560_by_1",
											"typeString": "int_const 1560"
										},
										"value": "1560"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6b606f0f",
									"id": 1472,
									"mutability": "constant",
									"name": "NFT_SUPPLY_3rd",
									"nameLocation": "1826:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "1803:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1470,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1803:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "38323530",
										"id": 1471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1843:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8250_by_1",
											"typeString": "int_const 8250"
										},
										"value": "8250"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58a0d923",
									"id": 1475,
									"mutability": "constant",
									"name": "HERO_NFT_START_INDEX",
									"nameLocation": "2130:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2107:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1473,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2107:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1474,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2153:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a1bd4a07",
									"id": 1478,
									"mutability": "constant",
									"name": "LEGEND_NFT_START_INDEX",
									"nameLocation": "2183:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2160:50:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1476,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2160:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1477,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2208:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "10a309f3",
									"id": 1481,
									"mutability": "constant",
									"name": "RARE_NFT_START_INDEX",
									"nameLocation": "2239:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2216:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1479,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2216:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "313236",
										"id": 1480,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2262:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_126_by_1",
											"typeString": "int_const 126"
										},
										"value": "126"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "11f47eb5",
									"id": 1484,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_START_INDEX",
									"nameLocation": "2294:24:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2271:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1482,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2271:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "363237",
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2321:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_627_by_1",
											"typeString": "int_const 627"
										},
										"value": "627"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "971cba96",
									"id": 1487,
									"mutability": "constant",
									"name": "COMMON_NFT_START_INDEX",
									"nameLocation": "2353:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2330:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1485,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2330:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "33313238",
										"id": 1486,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2378:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3128_by_1",
											"typeString": "int_const 3128"
										},
										"value": "3128"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4e2ecca1",
									"id": 1490,
									"mutability": "constant",
									"name": "LEGEND_NFT_PRICE",
									"nameLocation": "2614:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2590:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1488,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2590:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "312e3634",
										"id": 1489,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2633:10:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1640000000000000000_by_1",
											"typeString": "int_const 1640000000000000000"
										},
										"value": "1.64"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "be8ca905",
									"id": 1493,
									"mutability": "constant",
									"name": "RARE_NFT_PRICE",
									"nameLocation": "2682:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2658:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1491,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3333",
										"id": 1492,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2699:10:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_330000000000000000_by_1",
											"typeString": "int_const 330000000000000000"
										},
										"value": "0.33"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9ee58048",
									"id": 1496,
									"mutability": "constant",
									"name": "COMMON_NFT_PRICE",
									"nameLocation": "2747:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2723:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1494,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2723:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303636",
										"id": 1495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2766:11:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_66000000000000000_by_1",
											"typeString": "int_const 66000000000000000"
										},
										"value": "0.066"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "beb9e75e",
									"id": 1499,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_PRICE",
									"nameLocation": "2815:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "2791:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1497,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2791:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303133",
										"id": 1498,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2836:11:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13000000000000000_by_1",
											"typeString": "int_const 13000000000000000"
										},
										"value": "0.013"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "dbddb26a",
									"id": 1502,
									"mutability": "constant",
									"name": "BASE_URI",
									"nameLocation": "3083:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "3060:57:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1500,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3060:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "697066733a2f2f3c686173683e2f646f612f6e6674",
										"id": 1501,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3094:23:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_791972a3766451f970be7ea3b9adadfb2288dfc356bcb5aa2451414035147207",
											"typeString": "literal_string \"ipfs://<hash>/doa/nft\""
										},
										"value": "ipfs://<hash>/doa/nft"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cfc2abb7",
									"id": 1505,
									"mutability": "constant",
									"name": "BASE_HERO_URI",
									"nameLocation": "3147:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "3124:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1503,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3124:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f6865726f2f6d65746164617461",
										"id": 1504,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3163:16:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_79dc579bf9a6d817651e59882288c1d81ebd8449269c94684a34b09abdcbf88e",
											"typeString": "literal_string \"/hero/metadata\""
										},
										"value": "/hero/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1eb1a2d3",
									"id": 1508,
									"mutability": "constant",
									"name": "BASE_LEGEND_URI",
									"nameLocation": "3208:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "3185:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1506,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3185:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f6c6567656e642f6d65746164617461",
										"id": 1507,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3226:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1b2155a7b42a80d86813721797e11599df9987117108462cb59c96982cd76b5e",
											"typeString": "literal_string \"/legend/metadata\""
										},
										"value": "/legend/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c244e88b",
									"id": 1511,
									"mutability": "constant",
									"name": "BASE_RARE_URI",
									"nameLocation": "3273:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "3250:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1509,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3250:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f726172652f6d65746164617461",
										"id": 1510,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3289:16:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e34860fd719fea59b566fbbfdb8aabe3d7acad002998d6921aec5bcf58fcd0fb",
											"typeString": "literal_string \"/rare/metadata\""
										},
										"value": "/rare/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6871d79f",
									"id": 1514,
									"mutability": "constant",
									"name": "BASE_UNCOMMON_URI",
									"nameLocation": "3334:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "3311:63:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1512,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3311:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f756e636f6d6d6f6e2f6d65746164617461",
										"id": 1513,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3354:20:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_122ca4802b59ecd45d81420fa2f9e9d43469fa336da2a5a0774a5e9c5c8f674d",
											"typeString": "literal_string \"/uncommon/metadata\""
										},
										"value": "/uncommon/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "811d5c6c",
									"id": 1517,
									"mutability": "constant",
									"name": "BASE_COMMON_URI",
									"nameLocation": "3403:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "3380:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1515,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3380:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f636f6d6d6f6e2f6d65746164617461",
										"id": 1516,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3421:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ad15b80b2bebb1e4c6553666ef49046738c0b15fc0cc4c69b6fed3da0bcf4c93",
											"typeString": "literal_string \"/common/metadata\""
										},
										"value": "/common/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "eda14323",
									"id": 1520,
									"mutability": "constant",
									"name": "PUBLIC_FUND_PERCENTAGE",
									"nameLocation": "3663:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "3641:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1518,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3641:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 1519,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3688:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "3835:856:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1528,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "3858:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"expression": {
																"id": 1529,
																"name": "DoAConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "3869:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																	"typeString": "type(library DoAConstants)"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3882:20:7",
															"memberName": "HERO_NFT_START_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1475,
															"src": "3869:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "3858:44:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1532,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "3906:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1533,
																"name": "DoAConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "3916:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																	"typeString": "type(library DoAConstants)"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3929:22:7",
															"memberName": "LEGEND_NFT_START_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1478,
															"src": "3916:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "3906:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3858:93:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1543,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "4015:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1544,
																	"name": "DoAConstants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "4026:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																		"typeString": "type(library DoAConstants)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4039:22:7",
																"memberName": "LEGEND_NFT_START_INDEX",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1478,
																"src": "4026:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "4015:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1547,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "4065:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1548,
																	"name": "DoAConstants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "4075:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																		"typeString": "type(library DoAConstants)"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4088:20:7",
																"memberName": "RARE_NFT_START_INDEX",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1481,
																"src": "4075:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "4065:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4015:93:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1558,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4174:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1559,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "4185:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4198:20:7",
																	"memberName": "RARE_NFT_START_INDEX",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "4185:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4174:44:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1562,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4222:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1563,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "4232:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4245:24:7",
																	"memberName": "UNCOMMON_NFT_START_INDEX",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1484,
																	"src": "4232:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4222:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4174:95:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1573,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "4333:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"id": 1574,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "4344:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4357:24:7",
																		"memberName": "UNCOMMON_NFT_START_INDEX",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1484,
																		"src": "4344:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "4333:48:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1577,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "4385:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1578,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "4395:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4408:22:7",
																		"memberName": "COMMON_NFT_START_INDEX",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1487,
																		"src": "4395:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "4385:45:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4333:97:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1588,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "4498:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"id": 1589,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "4509:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4522:22:7",
																		"memberName": "COMMON_NFT_START_INDEX",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1487,
																		"src": "4509:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "4498:46:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1602,
																	"nodeType": "Block",
																	"src": "4606:51:7",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "496e76616c696420746f6b656e204944",
																						"id": 1599,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4627:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48",
																							"typeString": "literal_string \"Invalid token ID\""
																						},
																						"value": "Invalid token ID"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48",
																							"typeString": "literal_string \"Invalid token ID\""
																						}
																					],
																					"id": 1598,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "4620:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 1600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4620:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 1601,
																			"nodeType": "ExpressionStatement",
																			"src": "4620:26:7"
																		}
																	]
																},
																"id": 1603,
																"nodeType": "IfStatement",
																"src": "4494:163:7",
																"trueBody": {
																	"id": 1597,
																	"nodeType": "Block",
																	"src": "4546:54:7",
																	"statements": [
																		{
																			"expression": {
																				"id": 1595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1592,
																					"name": "tokenClass",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1526,
																					"src": "4560:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																						"typeString": "enum NFT_CLASS"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"expression": {
																						"id": 1593,
																						"name": "NFT_CLASS",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1418,
																						"src": "4573:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																							"typeString": "type(enum NFT_CLASS)"
																						}
																					},
																					"id": 1594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4583:6:7",
																					"memberName": "COMMON",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1417,
																					"src": "4573:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																						"typeString": "enum NFT_CLASS"
																					}
																				},
																				"src": "4560:29:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																					"typeString": "enum NFT_CLASS"
																				}
																			},
																			"id": 1596,
																			"nodeType": "ExpressionStatement",
																			"src": "4560:29:7"
																		}
																	]
																}
															},
															"id": 1604,
															"nodeType": "IfStatement",
															"src": "4329:328:7",
															"trueBody": {
																"id": 1587,
																"nodeType": "Block",
																"src": "4432:56:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1582,
																				"name": "tokenClass",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1526,
																				"src": "4446:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																					"typeString": "enum NFT_CLASS"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1583,
																					"name": "NFT_CLASS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1418,
																					"src": "4459:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																						"typeString": "type(enum NFT_CLASS)"
																					}
																				},
																				"id": 1584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4469:8:7",
																				"memberName": "UNCOMMON",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1416,
																				"src": "4459:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																					"typeString": "enum NFT_CLASS"
																				}
																			},
																			"src": "4446:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																				"typeString": "enum NFT_CLASS"
																			}
																		},
																		"id": 1586,
																		"nodeType": "ExpressionStatement",
																		"src": "4446:31:7"
																	}
																]
															}
														},
														"id": 1605,
														"nodeType": "IfStatement",
														"src": "4170:487:7",
														"trueBody": {
															"id": 1572,
															"nodeType": "Block",
															"src": "4271:52:7",
															"statements": [
																{
																	"expression": {
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1567,
																			"name": "tokenClass",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1526,
																			"src": "4285:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																				"typeString": "enum NFT_CLASS"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 1568,
																				"name": "NFT_CLASS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1418,
																				"src": "4298:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																					"typeString": "type(enum NFT_CLASS)"
																				}
																			},
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4308:4:7",
																			"memberName": "RARE",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1415,
																			"src": "4298:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																				"typeString": "enum NFT_CLASS"
																			}
																		},
																		"src": "4285:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"id": 1571,
																	"nodeType": "ExpressionStatement",
																	"src": "4285:27:7"
																}
															]
														}
													},
													"id": 1606,
													"nodeType": "IfStatement",
													"src": "4011:646:7",
													"trueBody": {
														"id": 1557,
														"nodeType": "Block",
														"src": "4110:54:7",
														"statements": [
															{
																"expression": {
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1552,
																		"name": "tokenClass",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "4124:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 1553,
																			"name": "NFT_CLASS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "4137:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																				"typeString": "type(enum NFT_CLASS)"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4147:6:7",
																		"memberName": "LEGEND",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1414,
																		"src": "4137:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"src": "4124:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"id": 1556,
																"nodeType": "ExpressionStatement",
																"src": "4124:29:7"
															}
														]
													}
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "3854:803:7",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "3953:52:7",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1537,
																	"name": "tokenClass",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "3967:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1538,
																		"name": "NFT_CLASS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "3980:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																			"typeString": "type(enum NFT_CLASS)"
																		}
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3990:4:7",
																	"memberName": "HERO",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1413,
																	"src": "3980:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"src": "3967:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"id": 1541,
															"nodeType": "ExpressionStatement",
															"src": "3967:27:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1608,
													"name": "tokenClass",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1526,
													"src": "4674:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
														"typeString": "enum NFT_CLASS"
													}
												},
												"functionReturnParameters": 1527,
												"id": 1609,
												"nodeType": "Return",
												"src": "4667:17:7"
											}
										]
									},
									"functionSelector": "ed944cb6",
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClassForTokenId",
									"nameLocation": "3756:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3783:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3775:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3775:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3774:17:7"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "tokenClass",
												"nameLocation": "3823:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3813:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 1525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1524,
														"name": "NFT_CLASS",
														"nameLocations": [
															"3813:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1418,
														"src": "3813:9:7"
													},
													"referencedDeclaration": 1418,
													"src": "3813:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3812:22:7"
									},
									"scope": 1745,
									"src": "3747:944:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "4790:526:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
														"typeString": "enum NFT_CLASS"
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1619,
														"name": "nftClass",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "4813:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
															"typeString": "enum NFT_CLASS"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1620,
															"name": "NFT_CLASS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "4825:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																"typeString": "type(enum NFT_CLASS)"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4835:4:7",
														"memberName": "HERO",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1413,
														"src": "4825:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
															"typeString": "enum NFT_CLASS"
														}
													},
													"src": "4813:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
															"typeString": "enum NFT_CLASS"
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1628,
															"name": "nftClass",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "4899:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																"typeString": "enum NFT_CLASS"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1629,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "4911:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4921:6:7",
															"memberName": "LEGEND",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1414,
															"src": "4911:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																"typeString": "enum NFT_CLASS"
															}
														},
														"src": "4899:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																"typeString": "enum NFT_CLASS"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1637,
																"name": "nftClass",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "4989:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1638,
																	"name": "NFT_CLASS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "5001:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																		"typeString": "type(enum NFT_CLASS)"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5011:4:7",
																"memberName": "RARE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1415,
																"src": "5001:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"src": "4989:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																	"typeString": "enum NFT_CLASS"
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1646,
																	"name": "nftClass",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "5075:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1647,
																		"name": "NFT_CLASS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "5087:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																			"typeString": "type(enum NFT_CLASS)"
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5097:8:7",
																	"memberName": "UNCOMMON",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1416,
																	"src": "5087:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"src": "5075:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																		"typeString": "enum NFT_CLASS"
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1655,
																		"name": "nftClass",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "5169:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1656,
																			"name": "NFT_CLASS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "5181:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																				"typeString": "type(enum NFT_CLASS)"
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5191:6:7",
																		"memberName": "COMMON",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1417,
																		"src": "5181:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"src": "5169:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1668,
																	"nodeType": "Block",
																	"src": "5255:54:7",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "496e76616c696420746f6b656e20636c617373",
																						"id": 1665,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5276:21:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18",
																							"typeString": "literal_string \"Invalid token class\""
																						},
																						"value": "Invalid token class"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18",
																							"typeString": "literal_string \"Invalid token class\""
																						}
																					],
																					"id": 1664,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "5269:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 1666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5269:29:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 1667,
																			"nodeType": "ExpressionStatement",
																			"src": "5269:29:7"
																		}
																	]
																},
																"id": 1669,
																"nodeType": "IfStatement",
																"src": "5165:144:7",
																"trueBody": {
																	"id": 1663,
																	"nodeType": "Block",
																	"src": "5199:50:7",
																	"statements": [
																		{
																			"expression": {
																				"id": 1661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1659,
																					"name": "tokenClassName",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1617,
																					"src": "5213:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "436f6d6d6f6e",
																					"id": 1660,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5230:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3b031f7f29326d3f445a56aaa83a78114c260f1e40af44c50964d9edf6271f4a",
																						"typeString": "literal_string \"Common\""
																					},
																					"value": "Common"
																				},
																				"src": "5213:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"id": 1662,
																			"nodeType": "ExpressionStatement",
																			"src": "5213:25:7"
																		}
																	]
																}
															},
															"id": 1670,
															"nodeType": "IfStatement",
															"src": "5071:238:7",
															"trueBody": {
																"id": 1654,
																"nodeType": "Block",
																"src": "5107:52:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1650,
																				"name": "tokenClassName",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1617,
																				"src": "5121:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "556e636f6d6d6f6e",
																				"id": 1651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5138:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_2a19cece7381d374050418c2bff2b7de5d6ca0adbe97e81c12b0540ace359d20",
																					"typeString": "literal_string \"Uncommon\""
																				},
																				"value": "Uncommon"
																			},
																			"src": "5121:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 1653,
																		"nodeType": "ExpressionStatement",
																		"src": "5121:27:7"
																	}
																]
															}
														},
														"id": 1671,
														"nodeType": "IfStatement",
														"src": "4985:324:7",
														"trueBody": {
															"id": 1645,
															"nodeType": "Block",
															"src": "5017:48:7",
															"statements": [
																{
																	"expression": {
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1641,
																			"name": "tokenClassName",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "5031:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "52617265",
																			"id": 1642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5048:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
																				"typeString": "literal_string \"Rare\""
																			},
																			"value": "Rare"
																		},
																		"src": "5031:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"id": 1644,
																	"nodeType": "ExpressionStatement",
																	"src": "5031:23:7"
																}
															]
														}
													},
													"id": 1672,
													"nodeType": "IfStatement",
													"src": "4895:414:7",
													"trueBody": {
														"id": 1636,
														"nodeType": "Block",
														"src": "4929:50:7",
														"statements": [
															{
																"expression": {
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1632,
																		"name": "tokenClassName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "4943:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "4c6567656e64",
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4960:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2a285c025008a50a558ef5409f2e6faeea2a5e5c28298c322a3f15499c775bd4",
																			"typeString": "literal_string \"Legend\""
																		},
																		"value": "Legend"
																	},
																	"src": "4943:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 1635,
																"nodeType": "ExpressionStatement",
																"src": "4943:25:7"
															}
														]
													}
												},
												"id": 1673,
												"nodeType": "IfStatement",
												"src": "4809:500:7",
												"trueBody": {
													"id": 1627,
													"nodeType": "Block",
													"src": "4841:48:7",
													"statements": [
														{
															"expression": {
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1623,
																	"name": "tokenClassName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "4855:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "4865726f",
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4872:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c030c220fcf0c0c0f4226aec63b167a0289c212f50714361c29bbef91576cedf",
																		"typeString": "literal_string \"Hero\""
																	},
																	"value": "Hero"
																},
																"src": "4855:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1626,
															"nodeType": "ExpressionStatement",
															"src": "4855:23:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8f5236e5",
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClassName",
									"nameLocation": "4706:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "nftClass",
												"nameLocation": "4729:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "4719:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 1613,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1612,
														"name": "NFT_CLASS",
														"nameLocations": [
															"4719:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1418,
														"src": "4719:9:7"
													},
													"referencedDeclaration": 1418,
													"src": "4719:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4718:20:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "tokenClassName",
												"nameLocation": "4774:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "4760:28:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4760:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4759:30:7"
									},
									"scope": 1745,
									"src": "4697:619:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "5411:495:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
														"typeString": "enum NFT_CLASS"
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1683,
														"name": "nftClass",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "5424:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
															"typeString": "enum NFT_CLASS"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1684,
															"name": "NFT_CLASS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "5436:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																"typeString": "type(enum NFT_CLASS)"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5446:6:7",
														"memberName": "LEGEND",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1414,
														"src": "5436:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
															"typeString": "enum NFT_CLASS"
														}
													},
													"src": "5424:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
															"typeString": "enum NFT_CLASS"
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1692,
															"name": "nftClass",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "5530:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																"typeString": "enum NFT_CLASS"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1693,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "5542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5552:4:7",
															"memberName": "RARE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1415,
															"src": "5542:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																"typeString": "enum NFT_CLASS"
															}
														},
														"src": "5530:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																"typeString": "enum NFT_CLASS"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1701,
																"name": "nftClass",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "5632:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1702,
																	"name": "NFT_CLASS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "5644:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																		"typeString": "type(enum NFT_CLASS)"
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5654:8:7",
																"memberName": "UNCOMMON",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1416,
																"src": "5644:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"src": "5632:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																	"typeString": "enum NFT_CLASS"
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1710,
																	"name": "nftClass",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "5742:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1711,
																		"name": "NFT_CLASS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "5754:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1418_$",
																			"typeString": "type(enum NFT_CLASS)"
																		}
																	},
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5764:6:7",
																	"memberName": "COMMON",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1417,
																	"src": "5754:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"src": "5742:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "496e76616c696420636c617373",
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5852:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																				"typeString": "literal_string \"Invalid class\""
																			},
																			"value": "Invalid class"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																				"typeString": "literal_string \"Invalid class\""
																			}
																		],
																		"id": 1719,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "5845:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5845:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1722,
																"nodeType": "ExpressionStatement",
																"src": "5845:23:7"
															},
															"id": 1723,
															"nodeType": "IfStatement",
															"src": "5739:129:7",
															"trueBody": {
																"expression": {
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1714,
																		"name": "classNFTPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "5785:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 1715,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "5801:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5814:16:7",
																		"memberName": "COMMON_NFT_PRICE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1496,
																		"src": "5801:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5785:45:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1718,
																"nodeType": "ExpressionStatement",
																"src": "5785:45:7"
															}
														},
														"id": 1724,
														"nodeType": "IfStatement",
														"src": "5629:239:7",
														"trueBody": {
															"expression": {
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1705,
																	"name": "classNFTPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "5677:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1706,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "5693:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5706:18:7",
																	"memberName": "UNCOMMON_NFT_PRICE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "5693:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5677:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1709,
															"nodeType": "ExpressionStatement",
															"src": "5677:47:7"
														}
													},
													"id": 1725,
													"nodeType": "IfStatement",
													"src": "5527:341:7",
													"trueBody": {
														"expression": {
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1696,
																"name": "classNFTPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "5571:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"expression": {
																	"id": 1697,
																	"name": "DoAConstants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "5587:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																		"typeString": "type(library DoAConstants)"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5600:14:7",
																"memberName": "RARE_NFT_PRICE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1493,
																"src": "5587:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5571:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1700,
														"nodeType": "ExpressionStatement",
														"src": "5571:43:7"
													}
												},
												"id": 1726,
												"nodeType": "IfStatement",
												"src": "5421:447:7",
												"trueBody": {
													"expression": {
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1687,
															"name": "classNFTPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "5467:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 1688,
																"name": "DoAConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "5483:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																	"typeString": "type(library DoAConstants)"
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5496:16:7",
															"memberName": "LEGEND_NFT_PRICE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1490,
															"src": "5483:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5467:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1691,
													"nodeType": "ExpressionStatement",
													"src": "5467:45:7"
												}
											},
											{
												"expression": {
													"id": 1727,
													"name": "classNFTPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1681,
													"src": "5886:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1728,
												"nodeType": "Return",
												"src": "5879:20:7"
											}
										]
									},
									"functionSelector": "6e2f5a5f",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClassPrice",
									"nameLocation": "5333:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "nftClass",
												"nameLocation": "5357:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "5347:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 1677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1676,
														"name": "NFT_CLASS",
														"nameLocations": [
															"5347:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1418,
														"src": "5347:9:7"
													},
													"referencedDeclaration": 1418,
													"src": "5347:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5346:20:7"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "classNFTPrice",
												"nameLocation": "5396:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "5388:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5387:23:7"
									},
									"scope": 1745,
									"src": "5324:582:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "6004:65:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1739,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1732,
																	"src": "6053:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1738,
																"name": "getClassForTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "6034:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_enum$_NFT_CLASS_$1418_$",
																	"typeString": "function (uint256) pure returns (enum NFT_CLASS)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6034:27:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1418",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 1737,
														"name": "getClassName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "6021:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_NFT_CLASS_$1418_$returns$_t_string_memory_ptr_$",
															"typeString": "function (enum NFT_CLASS) pure returns (string memory)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6021:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1736,
												"id": 1742,
												"nodeType": "Return",
												"src": "6014:48:7"
											}
										]
									},
									"functionSelector": "fd642870",
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testClassForTokenId",
									"nameLocation": "5921:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5949:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "5941:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5940:17:7"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "className",
												"nameLocation": "5993:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "5979:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5979:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:25:7"
									},
									"scope": 1745,
									"src": "5912:157:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1746,
							"src": "503:5569:7",
							"usedErrors": []
						}
					],
					"src": "32:6040:7"
				},
				"id": 7
			},
			"Treasury.sol": {
				"ast": {
					"absolutePath": "Treasury.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Counters": [
							370
						],
						"DoAConstants": [
							1745
						],
						"Math": [
							1410
						],
						"NFT_CLASS": [
							1418
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						],
						"ReentrancyGuard": [
							274
						],
						"Strings": [
							545
						],
						"Treasury": [
							1874
						],
						"iTreasury": [
							1890
						]
					},
					"id": 1875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1747,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1748,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 221,
							"src": "58:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1749,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 275,
							"src": "114:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1750,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 113,
							"src": "177:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 1751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 371,
							"src": "230:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 546,
							"src": "283:51:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "iTreasury.sol",
							"file": "./iTreasury.sol",
							"id": 1753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 1891,
							"src": "336:25:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DoAConstants.sol",
							"file": "./DoAConstants.sol",
							"id": 1754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 1746,
							"src": "362:28:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1755,
										"name": "iTreasury",
										"nameLocations": [
											"413:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1890,
										"src": "413:9:8"
									},
									"id": 1756,
									"nodeType": "InheritanceSpecifier",
									"src": "413:9:8"
								},
								{
									"baseName": {
										"id": 1757,
										"name": "Ownable",
										"nameLocations": [
											"424:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "424:7:8"
									},
									"id": 1758,
									"nodeType": "InheritanceSpecifier",
									"src": "424:7:8"
								},
								{
									"baseName": {
										"id": 1759,
										"name": "Pausable",
										"nameLocations": [
											"433:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "433:8:8"
									},
									"id": 1760,
									"nodeType": "InheritanceSpecifier",
									"src": "433:8:8"
								},
								{
									"baseName": {
										"id": 1761,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"443:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 274,
										"src": "443:15:8"
									},
									"id": 1762,
									"nodeType": "InheritanceSpecifier",
									"src": "443:15:8"
								}
							],
							"canonicalName": "Treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1874,
							"linearizedBaseContracts": [
								1874,
								274,
								220,
								112,
								296,
								1890
							],
							"name": "Treasury",
							"nameLocation": "401:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "015f009a",
									"id": 1764,
									"mutability": "mutable",
									"name": "privateFund",
									"nameLocation": "680:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "665:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1763,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "665:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "68a18cc2",
									"id": 1766,
									"mutability": "mutable",
									"name": "publicFund",
									"nameLocation": "712:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "697:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1765,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1770,
									"mutability": "mutable",
									"name": "_authorizedContracts",
									"nameLocation": "766:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "733:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1769,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1767,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "741:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "733:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1768,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "752:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "1292:61:8",
										"statements": [
											{
												"expression": {
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1777,
															"name": "_authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "1302:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1779,
														"indexExpression": {
															"id": 1778,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "1323:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1302:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1342:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1302:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "1302:44:8"
											}
										]
									},
									"functionSelector": "98eaa4a7",
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1775,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1774,
												"name": "onlyOwner",
												"nameLocations": [
													"1282:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1282:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1282:9:8"
										}
									],
									"name": "addAuthorizedContract",
									"nameLocation": "1225:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "1255:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1247:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:25:8"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1292:0:8"
									},
									"scope": 1874,
									"src": "1216:137:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "1592:25:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1789,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1602:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1602:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "1602:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1787,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1786,
												"name": "onlyOwner",
												"nameLocations": [
													"1582:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1582:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1582:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "1567:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1572:2:8"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1592:0:8"
									},
									"scope": 1874,
									"src": "1558:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "1659:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1798,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1669:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "1669:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1796,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1795,
												"name": "onlyOwner",
												"nameLocations": [
													"1649:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1649:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "1632:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:2:8"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:8"
									},
									"scope": 1874,
									"src": "1623:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1879
									],
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "1947:274:8",
										"statements": [
											{
												"assignments": [
													1806
												],
												"declarations": [
													{
														"constant": false,
														"id": 1806,
														"mutability": "mutable",
														"name": "publicShare",
														"nameLocation": "2042:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "2034:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1805,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2034:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1818,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1807,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2057:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2061:5:8",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2057:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1811,
																				"name": "DoAConstants",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1745,
																				"src": "2077:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1745_$",
																					"typeString": "type(library DoAConstants)"
																				}
																			},
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2090:22:8",
																			"memberName": "PUBLIC_FUND_PERCENTAGE",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1520,
																			"src": "2077:35:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2069:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1809,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2069:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2069:44:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2057:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1815,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2056:58:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2117:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2056:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2034:86:8"
											},
											{
												"expression": {
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1819,
														"name": "publicFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "2139:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1820,
														"name": "publicShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1806,
														"src": "2153:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2139:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "2139:25:8"
											},
											{
												"expression": {
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1823,
														"name": "privateFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "2174:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1824,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2190:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2194:5:8",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2190:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1826,
																	"name": "publicShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1806,
																	"src": "2202:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2190:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1828,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2189:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2174:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "2174:40:8"
											}
										]
									},
									"functionSelector": "760c764d",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositNFTRevenue",
									"nameLocation": "1909:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1926:2:8"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:0:8"
									},
									"scope": 1874,
									"src": "1900:321:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1884
									],
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "2300:222:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1841,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "2395:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1842,
																"name": "privateFund",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "2405:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2395:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682066756e6473",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2418:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
																"typeString": "literal_string \"Not enough funds\""
															},
															"value": "Not enough funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
																"typeString": "literal_string \"Not enough funds\""
															}
														],
														"id": 1840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2387:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2387:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "2387:50:8"
											},
											{
												"expression": {
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1847,
														"name": "privateFund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "2448:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1848,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "2463:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2448:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "2448:21:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1857,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "2508:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1853,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2487:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2491:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2487:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2479:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2479:8:8",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2479:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2499:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2479:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2479:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "2479:36:8"
											}
										]
									},
									"functionSelector": "3419628b",
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1838,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1837,
												"name": "onlyOwner",
												"nameLocations": [
													"2290:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2290:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2290:9:8"
										}
									],
									"name": "withdrawPrivateFund",
									"nameLocation": "2236:19:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1836,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2281:8:8"
									},
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2264:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2256:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:16:8"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:0:8"
									},
									"scope": 1874,
									"src": "2227:295:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1889
									],
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "2588:45:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1868,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2613:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Treasury_$1874",
																	"typeString": "contract Treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Treasury_$1874",
																	"typeString": "contract Treasury"
																}
															],
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2605:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1866,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2605:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2605:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2619:7:8",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2605:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1865,
												"id": 1871,
												"nodeType": "Return",
												"src": "2598:28:8"
											}
										]
									},
									"functionSelector": "3d2ba888",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCombinedBalance",
									"nameLocation": "2537:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:2:8"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "2579:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:9:8"
									},
									"scope": 1874,
									"src": "2528:105:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1875,
							"src": "392:2246:8",
							"usedErrors": []
						}
					],
					"src": "32:2606:8"
				},
				"id": 8
			},
			"iTreasury.sol": {
				"ast": {
					"absolutePath": "iTreasury.sol",
					"exportedSymbols": {
						"iTreasury": [
							1890
						]
					},
					"id": 1891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "iTreasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1890,
							"linearizedBaseContracts": [
								1890
							],
							"name": "iTreasury",
							"nameLocation": "70:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "760c764d",
									"id": 1879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositNFTRevenue",
									"nameLocation": "97:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:9"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:0:9"
									},
									"scope": 1890,
									"src": "88:46:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3419628b",
									"id": 1884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawPrivateFund",
									"nameLocation": "149:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "177:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "169:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:16:9"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:0:9"
									},
									"scope": 1890,
									"src": "140:55:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d2ba888",
									"id": 1889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCombinedBalance",
									"nameLocation": "214:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:9"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "258:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:9:9"
									},
									"scope": 1890,
									"src": "205:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1891,
							"src": "60:210:9",
							"usedErrors": []
						}
					],
					"src": "32:238:9"
				},
				"id": 9
			}
		}
	}
}