{
	"id": "d826c8808584b5f67bfc077ad1ad355a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenMinter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./iTokenMinter.sol\";\nimport \"./DoAConstants.sol\";\nimport \"./iDoACollection.sol\";\nimport \"./iTreasury.sol\";\nimport \"./iMemberRegistry.sol\";\n\n\ncontract TokenMinter is iTokenMinter, Ownable, Pausable, ReentrancyGuard {\n    using Counters for Counters.Counter;\n\n\n\n    //--------------------------------------------------------------------------------\n    //  State Variables\n    //--------------------------------------------------------------------------------\n    iDoACollection private _doaCollection;\n    iTreasury private _treasury;\n    iMemberRegistry private _memberRegistry;\n\n    mapping(address => bool) private _authorizedContracts;   //contracts that are allowed to call this\n\n\n    //# sold NFTs\n    Counters.Counter public _heroNFTsMinted;\n    Counters.Counter public _legendNFTsMinted;\n    Counters.Counter public _rareNFTsMinted;\n    Counters.Counter public _uncommonNFTsMinted;\n    Counters.Counter public _commonNFTsMinted;\n\n\n    //# round control\n    bool public _areHerosMinted;\n    bool public _is1stPublicRoundUnlocked;\n    bool public _is2ndPublicRoundUnlocked;\n    bool public _is3rdPublicRoundUnlocked;\n\n\n\n    //--------------------------------------------------------------------------------\n    // Utility functions\n    //--------------------------------------------------------------------------------\n    \n\n    //--------------------------------------------------------------------------------\n    // Modifiers\n    //--------------------------------------------------------------------------------\n\n\n    //--------------------------------------------------------------------------------\n    // Events\n    //--------------------------------------------------------------------------------\n\n\n    //--------------------------------------------------------------------------------\n    // Constructor\n    //--------------------------------------------------------------------------------\n\n    constructor(address doaCollectionAddress, address treasuryAddress, address memberRegistryAddress)  {\n        _doaCollection = iDoACollection(doaCollectionAddress);\n        _treasury = iTreasury(treasuryAddress);\n        _memberRegistry = iMemberRegistry(memberRegistryAddress);\n\n        _authorizedContracts[msg.sender] = true; //add owner as authorized contract\n    }\n\n\n    function addAuthorizedContract(address contractAddress) public onlyOwner {\n        _authorizedContracts[contractAddress] = true;\n    }\n    \n\n\n    //--------------------------------------------------------------------------------\n    // Functions: Owner\n    //--------------------------------------------------------------------------------\n\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n\n\n    //--------------------------------------------------------------------------------\n    // Functions: DoA Internal\n    //--------------------------------------------------------------------------------\n    \n    function unlock1stPublicRound() external  whenNotPaused nonReentrant {\n        require(_authorizedContracts[msg.sender], \"No Auth\");\n        require(!_is1stPublicRoundUnlocked, \"Already unlocked\");\n\n        require(_areHerosMinted, \"Heros not minted\");\n\n        _is1stPublicRoundUnlocked = true;\n    }\n\n\n    function unlock2ndPublicRound() external  whenNotPaused nonReentrant {\n        require(_authorizedContracts[msg.sender], \"No Auth\");\n        require(!_is2ndPublicRoundUnlocked, \"Already unlocked\");\n\n        //check if there are any NFTs left to mint\n        require(_areHerosMinted, \"Heros not minted\");\n        require(_is1stPublicRoundUnlocked && uint16(_legendNFTsMinted.current()) < DoAConstants.LEGEND_NFT_SUPPLY_1st, \"Unminted legends\");\n        require(_is1stPublicRoundUnlocked && uint16(_rareNFTsMinted.current()) < DoAConstants.RARE_NFT_SUPPLY_1st, \"Unminted rares\");\n        require(_is1stPublicRoundUnlocked && uint16(_uncommonNFTsMinted.current()) < DoAConstants.UNCOMMON_NFT_SUPPLY_1st, \"Unminted uncommons\");\n        require(_is1stPublicRoundUnlocked && uint16(_commonNFTsMinted.current())< DoAConstants.COMMON_NFT_SUPPLY_1st, \"Unminted commons\");\n\n        _is2ndPublicRoundUnlocked = true;\n        _is1stPublicRoundUnlocked = false;  //relock 1st round\n    }\n\n    //mint 25 heros\n    function mintHeros(address toAddr) external  whenNotPaused nonReentrant {\n        require(_authorizedContracts[msg.sender], \"No Auth\");\n        require(!_areHerosMinted, \"Already minted\");\n\n        uint256 numMinted = _mintNFTs(toAddr, DoAConstants.HERO_NFT_SUPPLY_1st, NFT_CLASS.HERO);\n\n        if(numMinted == DoAConstants.HERO_NFT_SUPPLY_1st)\n            _areHerosMinted = true;\n\n    }\n\n\n    function getMintIndexRange(uint256 numToMint, NFT_CLASS classToMint) public view whenNotPaused returns (uint256 mintStartIndex, uint256 mintEndIndex) {\n        require(numToMint > 0, \"numToMint 0\");\n        require(_areHerosMinted, \"Heros not minted\");\n\n        uint16 currentCount;\n        uint16 futureCount;\n        uint256 classNFTSupply_1st;\n        uint256 classNFTSupply_2nd;\n        uint256 classNFTSupply_3rd;\n        \n\n        //set class specific variables\n        if(classToMint == NFT_CLASS.LEGEND) {\n                currentCount = uint16(_legendNFTsMinted.current());\n                futureCount = currentCount + uint16(numToMint);\n\n                classNFTSupply_1st = DoAConstants.LEGEND_NFT_SUPPLY_1st;\n                classNFTSupply_2nd = DoAConstants.LEGEND_NFT_SUPPLY_2nd;\n                classNFTSupply_3rd = DoAConstants.LEGEND_NFT_SUPPLY_3rd;\n\n                mintStartIndex = DoAConstants.LEGEND_NFT_START_INDEX + currentCount;\n                mintEndIndex = DoAConstants.LEGEND_NFT_START_INDEX + futureCount - 1;\n        }\n        else if(classToMint == NFT_CLASS.RARE) {\n                currentCount = uint16(_rareNFTsMinted.current());\n                futureCount = currentCount + uint16(numToMint);\n\n                classNFTSupply_1st = DoAConstants.RARE_NFT_SUPPLY_1st;\n                classNFTSupply_2nd = DoAConstants.RARE_NFT_SUPPLY_2nd;\n                classNFTSupply_3rd = DoAConstants.RARE_NFT_SUPPLY_3rd;\n\n                mintStartIndex = DoAConstants.RARE_NFT_START_INDEX + currentCount;\n                mintEndIndex = DoAConstants.RARE_NFT_START_INDEX + futureCount - 1;\n        }\n        else if(classToMint == NFT_CLASS.UNCOMMON) {\n                currentCount = uint16(_uncommonNFTsMinted.current());\n                futureCount = currentCount + uint16(numToMint);\n\n                classNFTSupply_1st = DoAConstants.UNCOMMON_NFT_SUPPLY_1st;\n                classNFTSupply_2nd = DoAConstants.UNCOMMON_NFT_SUPPLY_2nd;\n                classNFTSupply_3rd = DoAConstants.UNCOMMON_NFT_SUPPLY_3rd;\n\n                mintStartIndex = DoAConstants.UNCOMMON_NFT_START_INDEX + currentCount;\n                mintEndIndex = DoAConstants.UNCOMMON_NFT_START_INDEX + futureCount - 1;\n        }\n        else if(classToMint == NFT_CLASS.COMMON) {\n                currentCount = uint16(_commonNFTsMinted.current());\n                futureCount = currentCount + uint16(numToMint);\n\n                classNFTSupply_1st = DoAConstants.COMMON_NFT_SUPPLY_1st;\n                classNFTSupply_2nd = DoAConstants.COMMON_NFT_SUPPLY_2nd;\n                classNFTSupply_3rd = DoAConstants.COMMON_NFT_SUPPLY_3rd;\n\n                mintStartIndex = DoAConstants.COMMON_NFT_START_INDEX + currentCount;\n                mintEndIndex = DoAConstants.COMMON_NFT_START_INDEX + futureCount - 1;\n                \n        } \n        else revert(\"Invalid class\");\n\n\n        //check supply of Class NFTs\n        if(_is1stPublicRoundUnlocked) \n            require(futureCount <= classNFTSupply_1st, \"supply insufficient\");\n        else if(_is2ndPublicRoundUnlocked) \n            require(futureCount <= classNFTSupply_2nd, \"supply insufficient\");\n        else if(_is3rdPublicRoundUnlocked)\n            require(futureCount <= classNFTSupply_3rd, \"supply insufficient\");\n        else\n            revert(\"no public round unlocked\");\n\n    }\n\n\n    function _mintNFTs(address toAddr, uint256 numToMint, NFT_CLASS classToMint) private whenNotPaused  returns (uint256 numMinted){ \n        require(_areHerosMinted, \"Heros not minted\");\n\n        //require payment\n        //TODO uint256 classNFTPrice = DoAConstants.getClassPrice(classToMint);\n        //TODO require(msg.value >= classNFTPrice * numToMint, \"Insufficient payment\");\n\n\n        (uint256 mintStartIndex, uint256 mintEndIndex) = \n            getMintIndexRange(numToMint, classToMint);\n\n\n        uint256 actualMintEndIndex = mintStartIndex;\n\n        //mint NFT\n        for(uint256 currentIndex = mintStartIndex; currentIndex <= mintEndIndex; currentIndex++) {\n            \n            _doaCollection.safeMint(toAddr, currentIndex);\n            _memberRegistry.nftMinted(toAddr, classToMint);\n\n            actualMintEndIndex = currentIndex;\n\n            //update minted class counters\n            if(classToMint == NFT_CLASS.LEGEND)\n                _legendNFTsMinted.increment();\n            else if(classToMint == NFT_CLASS.RARE)\n                _rareNFTsMinted.increment();\n            else if(classToMint == NFT_CLASS.UNCOMMON)\n                _uncommonNFTsMinted.increment();\n            else if(classToMint == NFT_CLASS.COMMON)\n                _commonNFTsMinted.increment();\n            else revert(\"Invalid class\");\n\n        }\n\n        //send payment to treasury\n        //TODO _treasury.depositNFTRevenue{value: msg.value} ();\n\n        numMinted = actualMintEndIndex - mintStartIndex + 1;\n    }\n\n\n    function mintLegends(address toAddr, uint256 numToMint) external whenNotPaused  payable {\n        _mintNFTs(toAddr, numToMint, NFT_CLASS.LEGEND);\n    }\n\n        \n    function mintLegend(address toAddr) external  whenNotPaused  payable {\n        _mintNFTs(toAddr, 1, NFT_CLASS.LEGEND);\n    }\n\n\n    function mintRares(address toAddr, uint256 numToMint) external  whenNotPaused  payable {\n        _mintNFTs(toAddr, numToMint, NFT_CLASS.RARE);\n    }\n\n    function mintRare(address toAddr) external  whenNotPaused  payable {\n        _mintNFTs(toAddr, 1, NFT_CLASS.RARE);\n    }\n\n    function mintUncommons(address toAddr, uint256 numToMint) external  whenNotPaused  payable {\n        _mintNFTs(toAddr, numToMint, NFT_CLASS.UNCOMMON);\n    }\n\n    function mintUncommon(address toAddr) external  whenNotPaused  payable {\n        _mintNFTs(toAddr, 1, NFT_CLASS.UNCOMMON);\n    }\n\n    function mintCommons(address toAddr, uint256 numToMint) external  whenNotPaused  payable {\n        _mintNFTs(toAddr, numToMint, NFT_CLASS.COMMON);\n    }\n\n    function mintCommon(address toAddr) external  whenNotPaused  payable {\n        _mintNFTs(toAddr, 1, NFT_CLASS.COMMON);\n    }\n\n\n    //------------------------------------------------------------------------------------\n    // Utility\n    //------------------------------------------------------------------------------------\n\n   \n\n}"
			},
			"iMemberRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"./DoAConstants.sol\";\n\ninterface iMemberRegistry {\n\n    function nftMinted(address member, NFT_CLASS nftClasse) external;\n    function nftBurned(address member, NFT_CLASS nftClasse) external;\n    function getMemberClass(address member) external returns (NFT_CLASS);\n\n    function nftTransferred(address oldMember, address toNewMember, uint256 tokenId) external;\n\n\n}"
			},
			"iTreasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n\n\ninterface iTreasury {\n\n\n    function depositNFTRevenue() external payable;\n\n    function withdrawPrivateFund(uint256 amount) external ;\n    \n    function getCombinedBalance() external view returns (uint256) ;\n}"
			},
			"iDoACollection.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\n\n\ninterface iDoACollection is IERC721, IERC721Enumerable, IERC721Metadata {\n\n    \n    //------------------------------------------------------------------------------------\n    // DoA Specific\n    //------------------------------------------------------------------------------------\n\n    function safeMint(address to) external;\n\n    function safeMint(address to, uint256 tokenID) external;\n\n    function safeBatchMint(address to, uint256 tokensToMint) external;\n\n    //------------------------------------------------------------------------------------\n    // IERC721\n    //------------------------------------------------------------------------------------\n    \n    // Event that is emitted when ownership of any NFT changes by any mechanism.\n    //event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n\n    // Event that is emitted when an approved address for an NFT is changed or reaffirmed.\n    //event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n\n    // Event that is emitted when an operator is enabled or disabled for an owner.\n    //event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n    // Returns the name of the token.\n    function name() external view returns (string memory);\n\n    // Returns the symbol of the token.\n    function symbol() external view returns (string memory);\n\n    // Returns the number of NFTs in existence.\n    function totalSupply() external view returns (uint256);\n\n    // Returns the owner of a particular NFT.\n    function ownerOf(uint256 _tokenId) external view returns (address);\n\n    // Transfers ownership of an NFT from one address to another address.\n    function transferFrom(address _from, address _to, uint256 _tokenId) external;\n\n    // Gives permission to another address to transfer the given NFT.\n    function approve(address _approved, uint256 _tokenId) external;\n\n    // Returns the approved address for a single NFT.\n    function getApproved(uint256 _tokenId) external view returns (address);\n\n    // Enables or disables approval for a third party (\"operator\") to manage all of the caller's assets.\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    // Returns true if an operator is approved to manage all of the assets of a particular owner.\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n\n    // Safely transfers ownership of an NFT from one address to another address.\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;\n\n    // Safely transfers ownership of an NFT from one address to another address, checking first that the recipient can receive it.\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;\n\n    //the number of tokens owned by the address\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n\n\n    //------------------------------------------------------------------------------------\n    // IERC721 Enumerable\n    //------------------------------------------------------------------------------------\n\n    // Returns the token identifier for the nth NFT.\n    function tokenByIndex(uint256 _index) external view returns (uint256);\n\n    // Returns the nth NFT assigned to an owner.\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\n\n\n    //------------------------------------------------------------------------------------\n    // IERC721 Metadata\n    //------------------------------------------------------------------------------------\n\n     // Returns the token collection symbol\n    function tokenURI(uint256 tokenId) external view returns (string memory); // Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n\n\n    //------------------------------------------------------------------------------------\n    // IERC721 Burnable\n    //------------------------------------------------------------------------------------\n    \n    // Burns a specific NFT.\n    function burn(uint256 tokenId) external;\n    // Burns a set of NFTs.\n    function batchBurn(uint256[] calldata tokenIds) external;\n\n    \n}"
			},
			"DoAConstants.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n\n//--------------------------------------------------------------------------------\n//  Enums\n//--------------------------------------------------------------------------------\nenum NFT_CLASS {\n    HERO,\n    LEGEND,\n    RARE,\n    UNCOMMON,\n    COMMON\n}\n\n\n   \n//-----------------------------------------------------------------------------------\n// Constants\n//-----------------------------------------------------------------------------------\n\nlibrary DoAConstants {\n\n    \n    //--------------------------------------------------------------------------------\n    //  Minting rounds & supply\n    //--------------------------------------------------------------------------------\n    \n    //#  NFTs supply in 1st round\n    uint16 public constant HERO_NFT_SUPPLY_1st = 25;\n    uint16 public constant LEGEND_NFT_SUPPLY_1st = 1;\n    uint16 public constant RARE_NFT_SUPPLY_1st = 5;\n    uint16 public constant UNCOMMON_NFT_SUPPLY_1st = 25;\n    uint16 public constant COMMON_NFT_SUPPLY_1st = 125;\n\n    //#  NFTs supply in 2nd round\n    uint16 public constant HERO_NFT_SUPPLY_2nd = 0;\n    uint16 public constant LEGEND_NFT_SUPPLY_2nd = 10;\n    uint16 public constant RARE_NFT_SUPPLY_2nd = 50;\n    uint16 public constant UNCOMMON_NFT_SUPPLY_2nd = 250;\n    uint16 public constant COMMON_NFT_SUPPLY_2nd = 1250;\n\n    //#  NFTs supply in 3rd round\n    uint16 public constant HERO_NFT_SUPPLY_3rd = 0;\n    uint16 public constant LEGEND_NFT_SUPPLY_3rd = 80;\n    uint16 public constant RARE_NFT_SUPPLY_3rd = 400;\n    uint16 public constant UNCOMMON_NFT_SUPPLY_3rd = 2000;\n    uint16 public constant COMMON_NFT_SUPPLY_3rd = 5770;\n\n    //#  NFTs supply totals\n    uint16 public constant NFT_SUPPLY_1st = 181;\n    uint16 public constant NFT_SUPPLY_2nd = 1560;\n    uint16 public constant NFT_SUPPLY_3rd = 8250;\n\n\n    //--------------------------------------------------------------------------------\n    // NFTs start indexes for first 10K NFTs\n    //--------------------------------------------------------------------------------\n\n    //#  NFT Type start indexes\n    uint16 public constant HERO_NFT_START_INDEX = 0;\n    uint16 public constant LEGEND_NFT_START_INDEX = 25;\n    uint16 public constant RARE_NFT_START_INDEX = 126;\n    uint16 public constant UNCOMMON_NFT_START_INDEX = 627;\n    uint16 public constant COMMON_NFT_START_INDEX = 3128;\n\n\n\n    //--------------------------------------------------------------------------------\n    //  Minting prices\n    //--------------------------------------------------------------------------------\n \n    uint256 public constant LEGEND_NFT_PRICE = 1.64 ether; //~$2500\n    uint256 public constant RARE_NFT_PRICE = 0.33 ether; //~$500\n    uint256 public constant COMMON_NFT_PRICE = 0.066 ether; //~$100\n    uint256 public constant UNCOMMON_NFT_PRICE = 0.013 ether; //~$20\n\n\n\n\n    //--------------------------------------------------------------------------------\n    // NFTs metadata\n    //--------------------------------------------------------------------------------\n\n    string public constant BASE_URI = \"ipfs://<hash>/doa/nft\";\n\n    string public constant BASE_HERO_URI = \"/hero/metadata\";\n    string public constant BASE_LEGEND_URI = \"/legend/metadata\";\n    string public constant BASE_RARE_URI = \"/rare/metadata\";\n    string public constant BASE_UNCOMMON_URI = \"/uncommon/metadata\";\n    string public constant BASE_COMMON_URI = \"/common/metadata\";\n\n    \n    //--------------------------------------------------------------------------------\n    // Treasury\n    //--------------------------------------------------------------------------------\n    uint8 public constant PUBLIC_FUND_PERCENTAGE = 60;\n\n\n    \n    // Returns NFT class for given token ID\n    function getClassForTokenId(uint256 tokenId) public pure returns (NFT_CLASS tokenClass) {\n        \n        if (tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.HERO;\n        } else if (tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.LEGEND;\n        } else if (tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.RARE;\n        } else if (tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.UNCOMMON;\n        } else if (tokenId >= DoAConstants.COMMON_NFT_START_INDEX) {\n            tokenClass = NFT_CLASS.COMMON;\n        } else {\n            revert(\"Invalid token ID\");\n        }\n\n        return tokenClass;\n    }\n\n    function getClassName(NFT_CLASS nftClass) public pure returns (string memory tokenClassName) {\n        \n        if (nftClass == NFT_CLASS.HERO) {\n            tokenClassName = \"Hero\";\n        } else if (nftClass == NFT_CLASS.LEGEND) {\n            tokenClassName = \"Legend\";\n        } else if (nftClass == NFT_CLASS.RARE) {\n            tokenClassName = \"Rare\";\n        } else if (nftClass == NFT_CLASS.UNCOMMON) {\n            tokenClassName = \"Uncommon\";\n        } else if (nftClass == NFT_CLASS.COMMON) {\n            tokenClassName = \"Common\";\n        } else {\n            revert(\"Invalid token class\");\n        }\n\n    } \n\n\n    function getClassPrice(NFT_CLASS nftClass) public pure returns (uint256 classNFTPrice) {\n        if(nftClass == NFT_CLASS.LEGEND) \n            classNFTPrice = DoAConstants.LEGEND_NFT_PRICE;\n        else if(nftClass == NFT_CLASS.RARE) \n            classNFTPrice = DoAConstants.RARE_NFT_PRICE;\n        else if(nftClass == NFT_CLASS.UNCOMMON) \n            classNFTPrice = DoAConstants.UNCOMMON_NFT_PRICE;\n        else if(nftClass == NFT_CLASS.COMMON) \n            classNFTPrice = DoAConstants.COMMON_NFT_PRICE;\n        else revert(\"Invalid class\");\n\n        return classNFTPrice;\n    }\n\n    function testClassForTokenId(uint256 tokenId) public pure returns (string memory className) {\n        return getClassName(getClassForTokenId(tokenId));\n    }\n\n}"
			},
			"iTokenMinter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"./iTreasury.sol\";\n\ninterface iTokenMinter {\n\n    \n    //mints the hero tokens\n    function mintHeros(address to) external; \n\n    function mintLegends(address to, uint256 numToMint) external payable;\n    function mintLegend(address to) external payable;\n\n    function mintRares(address to, uint256 numToMint) external payable;\n    function mintRare(address to) external payable;\n\n    function mintUncommons(address to, uint256 numToMint) external payable;\n    function mintUncommon(address to) external payable;\n\n\n    function mintCommons(address to, uint256 numToMint) external payable;\n    function mintCommon(address to) external payable;\n\n    \n}"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 0xD PUSH32 0x86E1AB2F8303D17696B97E631053FD399CF240C2D50EF4C88FDBA17564736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "424:971:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 0xD PUSH32 0x86E1AB2F8303D17696B97E631053FD399CF240C2D50EF4C88FDBA17564736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "424:971:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"TokenMinter.sol",
								"iDoACollection.sol",
								"iMemberRegistry.sol",
								"iTokenMinter.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH6 0x290B9DA26864 0xE5 DUP16 0xA5 MULMOD DUP6 0xA9 PUSH3 0x7A3EDB 0x4A 0xAF PUSH10 0xFEE8E3EDC3CA33127A2D SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "188:2065:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH6 0x290B9DA26864 0xE5 DUP16 0xA5 MULMOD DUP6 0xA9 PUSH3 0x7A3EDB 0x4A 0xAF PUSH10 0xFEE8E3EDC3CA33127A2D SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "188:2065:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"TokenMinter.sol",
								"iDoACollection.sol",
								"iMemberRegistry.sol",
								"iTokenMinter.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1C4CD965BC5B6BC4AC36FCFA833570 XOR CALLDATALOAD 0xF8 CALL RETURNDATASIZE 0x24 LOG1 CODESIZE 0xD1 0xD PUSH26 0x9A9389425864736F6C6343000813003300000000000000000000 ",
							"sourceMap": "202:12302:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1C4CD965BC5B6BC4AC36FCFA833570 XOR CALLDATALOAD 0xF8 CALL RETURNDATASIZE 0x24 LOG1 CODESIZE 0xD1 0xD PUSH26 0x9A9389425864736F6C6343000813003300000000000000000000 ",
							"sourceMap": "202:12302:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"TokenMinter.sol",
								"iDoACollection.sol",
								"iMemberRegistry.sol",
								"iTokenMinter.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DoAConstants.sol": {
				"DoAConstants": {
					"abi": [
						{
							"inputs": [],
							"name": "BASE_COMMON_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_HERO_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_LEGEND_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_RARE_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_UNCOMMON_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_URI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMON_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HERO_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HERO_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HERO_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HERO_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LEGEND_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PUBLIC_FUND_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RARE_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_START_INDEX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_SUPPLY_1st",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_SUPPLY_2nd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNCOMMON_NFT_SUPPLY_3rd",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getClassForTokenId",
							"outputs": [
								{
									"internalType": "enum NFT_CLASS",
									"name": "tokenClass",
									"type": "NFT_CLASS"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum NFT_CLASS",
									"name": "nftClass",
									"type": "NFT_CLASS"
								}
							],
							"name": "getClassName",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenClassName",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum NFT_CLASS",
									"name": "nftClass",
									"type": "NFT_CLASS"
								}
							],
							"name": "getClassPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "classNFTPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "testClassForTokenId",
							"outputs": [
								{
									"internalType": "string",
									"name": "className",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DoAConstants.sol\":503:6072  library DoAConstants {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DoAConstants.sol\":503:6072  library DoAConstants {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9ee58048\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xca45f599\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xed944cb6\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xed944cb6\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xeda14323\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf41dc7d2\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf59528d2\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xfd642870\n      eq\n      tag_39\n      jumpi\n      jump(tag_1)\n    tag_42:\n      dup1\n      0xca45f599\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xcb937d2b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xcfc2abb7\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdbddb26a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe93e980b\n      eq\n      tag_34\n      jumpi\n      jump(tag_1)\n    tag_41:\n      dup1\n      0xbe8ca905\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xbe8ca905\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbeb9e75e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xbf0832ae\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc244e88b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc525c0c8\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_43:\n      dup1\n      0x9ee58048\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa1bd4a07\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa1d2002d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa83179db\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_40:\n      dup1\n      0x5e28c936\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x828d481b\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x828d481b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8d1da411\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8f5236e5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x970f6e2f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x971cba96\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_45:\n      dup1\n      0x5e28c936\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6871d79f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6b606f0f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6e2f5a5f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x811d5c6c\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_44:\n      dup1\n      0x32a41506\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x32a41506\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x38d79b52\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e2ecca1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x58a0d923\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5e09346a\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_46:\n      dup1\n      0x10a309f3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x11f47eb5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ab7730c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1eb1a2d3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DoAConstants.sol\":2216:2265  uint16 public constant RARE_NFT_START_INDEX = 126 */\n    tag_2:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2271:2324  uint16 public constant UNCOMMON_NFT_START_INDEX = 627 */\n    tag_3:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1753:1797  uint16 public constant NFT_SUPPLY_2nd = 1560 */\n    tag_4:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3185:3244  string public constant BASE_LEGEND_URI = \"/legend/metadata\" */\n    tag_5:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1704:1747  uint16 public constant NFT_SUPPLY_1st = 181 */\n    tag_6:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1140:1189  uint16 public constant LEGEND_NFT_SUPPLY_2nd = 10 */\n    tag_7:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2590:2643  uint256 public constant LEGEND_NFT_PRICE = 1.64 ether */\n    tag_8:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2107:2154  uint16 public constant HERO_NFT_START_INDEX = 0 */\n    tag_9:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1195:1242  uint16 public constant RARE_NFT_SUPPLY_2nd = 50 */\n    tag_10:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":940:991  uint16 public constant UNCOMMON_NFT_SUPPLY_1st = 25 */\n    tag_11:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3311:3374  string public constant BASE_UNCOMMON_URI = \"/uncommon/metadata\" */\n    tag_12:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1803:1847  uint16 public constant NFT_SUPPLY_3rd = 8250 */\n    tag_13:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":5324:5906  function getClassPrice(NFT_CLASS nftClass) public pure returns (uint256 classNFTPrice) {... */\n    tag_14:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3380:3439  string public constant BASE_COMMON_URI = \"/common/metadata\" */\n    tag_15:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":997:1047  uint16 public constant COMMON_NFT_SUPPLY_1st = 125 */\n    tag_16:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":834:882  uint16 public constant LEGEND_NFT_SUPPLY_1st = 1 */\n    tag_17:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":4697:5316  function getClassName(NFT_CLASS nftClass) public pure returns (string memory tokenClassName) {... */\n    tag_18:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":888:934  uint16 public constant RARE_NFT_SUPPLY_1st = 5 */\n    tag_19:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2330:2382  uint16 public constant COMMON_NFT_START_INDEX = 3128 */\n    tag_20:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2723:2777  uint256 public constant COMMON_NFT_PRICE = 0.066 ether */\n    tag_21:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2160:2210  uint16 public constant LEGEND_NFT_START_INDEX = 25 */\n    tag_22:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1559:1612  uint16 public constant UNCOMMON_NFT_SUPPLY_3rd = 2000 */\n    tag_23:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1088:1134  uint16 public constant HERO_NFT_SUPPLY_2nd = 0 */\n    tag_24:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2658:2709  uint256 public constant RARE_NFT_PRICE = 0.33 ether */\n    tag_25:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2791:2847  uint256 public constant UNCOMMON_NFT_PRICE = 0.013 ether */\n    tag_26:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1450:1499  uint16 public constant LEGEND_NFT_SUPPLY_3rd = 80 */\n    tag_27:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3250:3305  string public constant BASE_RARE_URI = \"/rare/metadata\" */\n    tag_28:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1306:1357  uint16 public constant COMMON_NFT_SUPPLY_2nd = 1250 */\n    tag_29:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1505:1553  uint16 public constant RARE_NFT_SUPPLY_3rd = 400 */\n    tag_30:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1618:1669  uint16 public constant COMMON_NFT_SUPPLY_3rd = 5770 */\n    tag_31:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3124:3179  string public constant BASE_HERO_URI = \"/hero/metadata\" */\n    tag_32:\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3060:3117  string public constant BASE_URI = \"ipfs://<hash>/doa/nft\" */\n    tag_33:\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":781:828  uint16 public constant HERO_NFT_SUPPLY_1st = 25 */\n    tag_34:\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3747:4691  function getClassForTokenId(uint256 tokenId) public pure returns (NFT_CLASS tokenClass) {... */\n    tag_35:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      tag_155\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":3641:3690  uint8 public constant PUBLIC_FUND_PERCENTAGE = 60 */\n    tag_36:\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1398:1444  uint16 public constant HERO_NFT_SUPPLY_3rd = 0 */\n    tag_37:\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":1248:1300  uint16 public constant UNCOMMON_NFT_SUPPLY_2nd = 250 */\n    tag_38:\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":5912:6069  function testClassForTokenId(uint256 tokenId) public pure returns (string memory className) {... */\n    tag_39:\n      tag_168\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DoAConstants.sol\":2216:2265  uint16 public constant RARE_NFT_START_INDEX = 126 */\n    tag_48:\n        /* \"DoAConstants.sol\":2262:2265  126 */\n      0x7e\n        /* \"DoAConstants.sol\":2216:2265  uint16 public constant RARE_NFT_START_INDEX = 126 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2271:2324  uint16 public constant UNCOMMON_NFT_START_INDEX = 627 */\n    tag_52:\n        /* \"DoAConstants.sol\":2321:2324  627 */\n      0x0273\n        /* \"DoAConstants.sol\":2271:2324  uint16 public constant UNCOMMON_NFT_START_INDEX = 627 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1753:1797  uint16 public constant NFT_SUPPLY_2nd = 1560 */\n    tag_55:\n        /* \"DoAConstants.sol\":1793:1797  1560 */\n      0x0618\n        /* \"DoAConstants.sol\":1753:1797  uint16 public constant NFT_SUPPLY_2nd = 1560 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3185:3244  string public constant BASE_LEGEND_URI = \"/legend/metadata\" */\n    tag_58:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      0x2f6c6567656e642f6d6574616461746100000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1704:1747  uint16 public constant NFT_SUPPLY_1st = 181 */\n    tag_62:\n        /* \"DoAConstants.sol\":1744:1747  181 */\n      0xb5\n        /* \"DoAConstants.sol\":1704:1747  uint16 public constant NFT_SUPPLY_1st = 181 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1140:1189  uint16 public constant LEGEND_NFT_SUPPLY_2nd = 10 */\n    tag_65:\n        /* \"DoAConstants.sol\":1187:1189  10 */\n      0x0a\n        /* \"DoAConstants.sol\":1140:1189  uint16 public constant LEGEND_NFT_SUPPLY_2nd = 10 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2590:2643  uint256 public constant LEGEND_NFT_PRICE = 1.64 ether */\n    tag_68:\n        /* \"DoAConstants.sol\":2633:2643  1.64 ether */\n      0x16c2734f97a40000\n        /* \"DoAConstants.sol\":2590:2643  uint256 public constant LEGEND_NFT_PRICE = 1.64 ether */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2107:2154  uint16 public constant HERO_NFT_START_INDEX = 0 */\n    tag_72:\n        /* \"DoAConstants.sol\":2153:2154  0 */\n      0x00\n        /* \"DoAConstants.sol\":2107:2154  uint16 public constant HERO_NFT_START_INDEX = 0 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1195:1242  uint16 public constant RARE_NFT_SUPPLY_2nd = 50 */\n    tag_75:\n        /* \"DoAConstants.sol\":1240:1242  50 */\n      0x32\n        /* \"DoAConstants.sol\":1195:1242  uint16 public constant RARE_NFT_SUPPLY_2nd = 50 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":940:991  uint16 public constant UNCOMMON_NFT_SUPPLY_1st = 25 */\n    tag_78:\n        /* \"DoAConstants.sol\":989:991  25 */\n      0x19\n        /* \"DoAConstants.sol\":940:991  uint16 public constant UNCOMMON_NFT_SUPPLY_1st = 25 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3311:3374  string public constant BASE_UNCOMMON_URI = \"/uncommon/metadata\" */\n    tag_81:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      0x2f756e636f6d6d6f6e2f6d657461646174610000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1803:1847  uint16 public constant NFT_SUPPLY_3rd = 8250 */\n    tag_84:\n        /* \"DoAConstants.sol\":1843:1847  8250 */\n      0x203a\n        /* \"DoAConstants.sol\":1803:1847  uint16 public constant NFT_SUPPLY_3rd = 8250 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":5324:5906  function getClassPrice(NFT_CLASS nftClass) public pure returns (uint256 classNFTPrice) {... */\n    tag_89:\n        /* \"DoAConstants.sol\":5388:5409  uint256 classNFTPrice */\n      0x00\n        /* \"DoAConstants.sol\":5436:5452  NFT_CLASS.LEGEND */\n      0x01\n        /* \"DoAConstants.sol\":5424:5452  nftClass == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_173\n      jumpi\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n    tag_173:\n        /* \"DoAConstants.sol\":5424:5432  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5424:5452  nftClass == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_176\n      jumpi\n      tag_177\n      tag_175\n      jump\t// in\n    tag_177:\n    tag_176:\n      sub\n        /* \"DoAConstants.sol\":5421:5868  if(nftClass == NFT_CLASS.LEGEND) ... */\n      tag_178\n      jumpi\n        /* \"DoAConstants.sol\":2633:2643  1.64 ether */\n      0x16c2734f97a40000\n        /* \"DoAConstants.sol\":5467:5512  classNFTPrice = DoAConstants.LEGEND_NFT_PRICE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5421:5868  if(nftClass == NFT_CLASS.LEGEND) ... */\n      jump(tag_179)\n    tag_178:\n        /* \"DoAConstants.sol\":5542:5556  NFT_CLASS.RARE */\n      0x02\n        /* \"DoAConstants.sol\":5530:5556  nftClass == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      tag_181\n      tag_175\n      jump\t// in\n    tag_181:\n    tag_180:\n        /* \"DoAConstants.sol\":5530:5538  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5530:5556  nftClass == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_182\n      jumpi\n      tag_183\n      tag_175\n      jump\t// in\n    tag_183:\n    tag_182:\n      sub\n        /* \"DoAConstants.sol\":5527:5868  if(nftClass == NFT_CLASS.RARE) ... */\n      tag_184\n      jumpi\n        /* \"DoAConstants.sol\":2699:2709  0.33 ether */\n      0x0494654067e10000\n        /* \"DoAConstants.sol\":5571:5614  classNFTPrice = DoAConstants.RARE_NFT_PRICE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5527:5868  if(nftClass == NFT_CLASS.RARE) ... */\n      jump(tag_185)\n    tag_184:\n        /* \"DoAConstants.sol\":5644:5662  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"DoAConstants.sol\":5632:5662  nftClass == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_186\n      jumpi\n      tag_187\n      tag_175\n      jump\t// in\n    tag_187:\n    tag_186:\n        /* \"DoAConstants.sol\":5632:5640  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5632:5662  nftClass == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_188\n      jumpi\n      tag_189\n      tag_175\n      jump\t// in\n    tag_189:\n    tag_188:\n      sub\n        /* \"DoAConstants.sol\":5629:5868  if(nftClass == NFT_CLASS.UNCOMMON) ... */\n      tag_190\n      jumpi\n        /* \"DoAConstants.sol\":2836:2847  0.013 ether */\n      0x2e2f6e5e148000\n        /* \"DoAConstants.sol\":5677:5724  classNFTPrice = DoAConstants.UNCOMMON_NFT_PRICE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5629:5868  if(nftClass == NFT_CLASS.UNCOMMON) ... */\n      jump(tag_191)\n    tag_190:\n        /* \"DoAConstants.sol\":5754:5770  NFT_CLASS.COMMON */\n      0x04\n        /* \"DoAConstants.sol\":5742:5770  nftClass == NFT_CLASS.COMMON */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_192\n      jumpi\n      tag_193\n      tag_175\n      jump\t// in\n    tag_193:\n    tag_192:\n        /* \"DoAConstants.sol\":5742:5750  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5742:5770  nftClass == NFT_CLASS.COMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_195\n      tag_175\n      jump\t// in\n    tag_195:\n    tag_194:\n      sub\n        /* \"DoAConstants.sol\":5739:5868  if(nftClass == NFT_CLASS.COMMON) ... */\n      tag_196\n      jumpi\n        /* \"DoAConstants.sol\":2766:2777  0.066 ether */\n      0xea7aa67b2d0000\n        /* \"DoAConstants.sol\":5785:5830  classNFTPrice = DoAConstants.COMMON_NFT_PRICE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5739:5868  if(nftClass == NFT_CLASS.COMMON) ... */\n      jump(tag_197)\n    tag_196:\n        /* \"DoAConstants.sol\":5845:5868  revert(\"Invalid class\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DoAConstants.sol\":5739:5868  if(nftClass == NFT_CLASS.COMMON) ... */\n    tag_197:\n        /* \"DoAConstants.sol\":5629:5868  if(nftClass == NFT_CLASS.UNCOMMON) ... */\n    tag_191:\n        /* \"DoAConstants.sol\":5527:5868  if(nftClass == NFT_CLASS.RARE) ... */\n    tag_185:\n        /* \"DoAConstants.sol\":5421:5868  if(nftClass == NFT_CLASS.LEGEND) ... */\n    tag_179:\n        /* \"DoAConstants.sol\":5324:5906  function getClassPrice(NFT_CLASS nftClass) public pure returns (uint256 classNFTPrice) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DoAConstants.sol\":3380:3439  string public constant BASE_COMMON_URI = \"/common/metadata\" */\n    tag_92:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      0x2f636f6d6d6f6e2f6d6574616461746100000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":997:1047  uint16 public constant COMMON_NFT_SUPPLY_1st = 125 */\n    tag_95:\n        /* \"DoAConstants.sol\":1044:1047  125 */\n      0x7d\n        /* \"DoAConstants.sol\":997:1047  uint16 public constant COMMON_NFT_SUPPLY_1st = 125 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":834:882  uint16 public constant LEGEND_NFT_SUPPLY_1st = 1 */\n    tag_98:\n        /* \"DoAConstants.sol\":881:882  1 */\n      0x01\n        /* \"DoAConstants.sol\":834:882  uint16 public constant LEGEND_NFT_SUPPLY_1st = 1 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":4697:5316  function getClassName(NFT_CLASS nftClass) public pure returns (string memory tokenClassName) {... */\n    tag_102:\n        /* \"DoAConstants.sol\":4760:4788  string memory tokenClassName */\n      0x60\n        /* \"DoAConstants.sol\":4825:4839  NFT_CLASS.HERO */\n      0x00\n        /* \"DoAConstants.sol\":4813:4839  nftClass == NFT_CLASS.HERO */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_175\n      jump\t// in\n    tag_202:\n    tag_201:\n        /* \"DoAConstants.sol\":4813:4821  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":4813:4839  nftClass == NFT_CLASS.HERO */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_203\n      jumpi\n      tag_204\n      tag_175\n      jump\t// in\n    tag_204:\n    tag_203:\n      sub\n        /* \"DoAConstants.sol\":4809:5309  if (nftClass == NFT_CLASS.HERO) {... */\n      tag_205\n      jumpi\n        /* \"DoAConstants.sol\":4855:4878  tokenClassName = \"Hero\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x4865726f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4809:5309  if (nftClass == NFT_CLASS.HERO) {... */\n      jump(tag_206)\n    tag_205:\n        /* \"DoAConstants.sol\":4911:4927  NFT_CLASS.LEGEND */\n      0x01\n        /* \"DoAConstants.sol\":4899:4927  nftClass == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_207\n      jumpi\n      tag_208\n      tag_175\n      jump\t// in\n    tag_208:\n    tag_207:\n        /* \"DoAConstants.sol\":4899:4907  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":4899:4927  nftClass == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_209\n      jumpi\n      tag_210\n      tag_175\n      jump\t// in\n    tag_210:\n    tag_209:\n      sub\n        /* \"DoAConstants.sol\":4895:5309  if (nftClass == NFT_CLASS.LEGEND) {... */\n      tag_211\n      jumpi\n        /* \"DoAConstants.sol\":4943:4968  tokenClassName = \"Legend\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4c6567656e640000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4895:5309  if (nftClass == NFT_CLASS.LEGEND) {... */\n      jump(tag_212)\n    tag_211:\n        /* \"DoAConstants.sol\":5001:5015  NFT_CLASS.RARE */\n      0x02\n        /* \"DoAConstants.sol\":4989:5015  nftClass == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_213\n      jumpi\n      tag_214\n      tag_175\n      jump\t// in\n    tag_214:\n    tag_213:\n        /* \"DoAConstants.sol\":4989:4997  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":4989:5015  nftClass == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_215\n      jumpi\n      tag_216\n      tag_175\n      jump\t// in\n    tag_216:\n    tag_215:\n      sub\n        /* \"DoAConstants.sol\":4985:5309  if (nftClass == NFT_CLASS.RARE) {... */\n      tag_217\n      jumpi\n        /* \"DoAConstants.sol\":5031:5054  tokenClassName = \"Rare\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x5261726500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4985:5309  if (nftClass == NFT_CLASS.RARE) {... */\n      jump(tag_218)\n    tag_217:\n        /* \"DoAConstants.sol\":5087:5105  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"DoAConstants.sol\":5075:5105  nftClass == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_220\n      tag_175\n      jump\t// in\n    tag_220:\n    tag_219:\n        /* \"DoAConstants.sol\":5075:5083  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5075:5105  nftClass == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_222\n      tag_175\n      jump\t// in\n    tag_222:\n    tag_221:\n      sub\n        /* \"DoAConstants.sol\":5071:5309  if (nftClass == NFT_CLASS.UNCOMMON) {... */\n      tag_223\n      jumpi\n        /* \"DoAConstants.sol\":5121:5148  tokenClassName = \"Uncommon\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x556e636f6d6d6f6e000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5071:5309  if (nftClass == NFT_CLASS.UNCOMMON) {... */\n      jump(tag_224)\n    tag_223:\n        /* \"DoAConstants.sol\":5181:5197  NFT_CLASS.COMMON */\n      0x04\n        /* \"DoAConstants.sol\":5169:5197  nftClass == NFT_CLASS.COMMON */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_226\n      tag_175\n      jump\t// in\n    tag_226:\n    tag_225:\n        /* \"DoAConstants.sol\":5169:5177  nftClass */\n      dup3\n        /* \"DoAConstants.sol\":5169:5197  nftClass == NFT_CLASS.COMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_175\n      jump\t// in\n    tag_228:\n    tag_227:\n      sub\n        /* \"DoAConstants.sol\":5165:5309  if (nftClass == NFT_CLASS.COMMON) {... */\n      tag_229\n      jumpi\n        /* \"DoAConstants.sol\":5213:5238  tokenClassName = \"Common\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x436f6d6d6f6e0000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5165:5309  if (nftClass == NFT_CLASS.COMMON) {... */\n      jump(tag_230)\n    tag_229:\n        /* \"DoAConstants.sol\":5269:5298  revert(\"Invalid token class\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DoAConstants.sol\":5165:5309  if (nftClass == NFT_CLASS.COMMON) {... */\n    tag_230:\n        /* \"DoAConstants.sol\":5071:5309  if (nftClass == NFT_CLASS.UNCOMMON) {... */\n    tag_224:\n        /* \"DoAConstants.sol\":4985:5309  if (nftClass == NFT_CLASS.RARE) {... */\n    tag_218:\n        /* \"DoAConstants.sol\":4895:5309  if (nftClass == NFT_CLASS.LEGEND) {... */\n    tag_212:\n        /* \"DoAConstants.sol\":4809:5309  if (nftClass == NFT_CLASS.HERO) {... */\n    tag_206:\n        /* \"DoAConstants.sol\":4697:5316  function getClassName(NFT_CLASS nftClass) public pure returns (string memory tokenClassName) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DoAConstants.sol\":888:934  uint16 public constant RARE_NFT_SUPPLY_1st = 5 */\n    tag_105:\n        /* \"DoAConstants.sol\":933:934  5 */\n      0x05\n        /* \"DoAConstants.sol\":888:934  uint16 public constant RARE_NFT_SUPPLY_1st = 5 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2330:2382  uint16 public constant COMMON_NFT_START_INDEX = 3128 */\n    tag_108:\n        /* \"DoAConstants.sol\":2378:2382  3128 */\n      0x0c38\n        /* \"DoAConstants.sol\":2330:2382  uint16 public constant COMMON_NFT_START_INDEX = 3128 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2723:2777  uint256 public constant COMMON_NFT_PRICE = 0.066 ether */\n    tag_111:\n        /* \"DoAConstants.sol\":2766:2777  0.066 ether */\n      0xea7aa67b2d0000\n        /* \"DoAConstants.sol\":2723:2777  uint256 public constant COMMON_NFT_PRICE = 0.066 ether */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2160:2210  uint16 public constant LEGEND_NFT_START_INDEX = 25 */\n    tag_114:\n        /* \"DoAConstants.sol\":2208:2210  25 */\n      0x19\n        /* \"DoAConstants.sol\":2160:2210  uint16 public constant LEGEND_NFT_START_INDEX = 25 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1559:1612  uint16 public constant UNCOMMON_NFT_SUPPLY_3rd = 2000 */\n    tag_117:\n        /* \"DoAConstants.sol\":1608:1612  2000 */\n      0x07d0\n        /* \"DoAConstants.sol\":1559:1612  uint16 public constant UNCOMMON_NFT_SUPPLY_3rd = 2000 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1088:1134  uint16 public constant HERO_NFT_SUPPLY_2nd = 0 */\n    tag_120:\n        /* \"DoAConstants.sol\":1133:1134  0 */\n      0x00\n        /* \"DoAConstants.sol\":1088:1134  uint16 public constant HERO_NFT_SUPPLY_2nd = 0 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2658:2709  uint256 public constant RARE_NFT_PRICE = 0.33 ether */\n    tag_123:\n        /* \"DoAConstants.sol\":2699:2709  0.33 ether */\n      0x0494654067e10000\n        /* \"DoAConstants.sol\":2658:2709  uint256 public constant RARE_NFT_PRICE = 0.33 ether */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":2791:2847  uint256 public constant UNCOMMON_NFT_PRICE = 0.013 ether */\n    tag_126:\n        /* \"DoAConstants.sol\":2836:2847  0.013 ether */\n      0x2e2f6e5e148000\n        /* \"DoAConstants.sol\":2791:2847  uint256 public constant UNCOMMON_NFT_PRICE = 0.013 ether */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1450:1499  uint16 public constant LEGEND_NFT_SUPPLY_3rd = 80 */\n    tag_129:\n        /* \"DoAConstants.sol\":1497:1499  80 */\n      0x50\n        /* \"DoAConstants.sol\":1450:1499  uint16 public constant LEGEND_NFT_SUPPLY_3rd = 80 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3250:3305  string public constant BASE_RARE_URI = \"/rare/metadata\" */\n    tag_132:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      0x2f726172652f6d65746164617461000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1306:1357  uint16 public constant COMMON_NFT_SUPPLY_2nd = 1250 */\n    tag_135:\n        /* \"DoAConstants.sol\":1353:1357  1250 */\n      0x04e2\n        /* \"DoAConstants.sol\":1306:1357  uint16 public constant COMMON_NFT_SUPPLY_2nd = 1250 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1505:1553  uint16 public constant RARE_NFT_SUPPLY_3rd = 400 */\n    tag_138:\n        /* \"DoAConstants.sol\":1550:1553  400 */\n      0x0190\n        /* \"DoAConstants.sol\":1505:1553  uint16 public constant RARE_NFT_SUPPLY_3rd = 400 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1618:1669  uint16 public constant COMMON_NFT_SUPPLY_3rd = 5770 */\n    tag_141:\n        /* \"DoAConstants.sol\":1665:1669  5770 */\n      0x168a\n        /* \"DoAConstants.sol\":1618:1669  uint16 public constant COMMON_NFT_SUPPLY_3rd = 5770 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3124:3179  string public constant BASE_HERO_URI = \"/hero/metadata\" */\n    tag_144:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      0x2f6865726f2f6d65746164617461000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3060:3117  string public constant BASE_URI = \"ipfs://<hash>/doa/nft\" */\n    tag_147:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      0x697066733a2f2f3c686173683e2f646f612f6e66740000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":781:828  uint16 public constant HERO_NFT_SUPPLY_1st = 25 */\n    tag_150:\n        /* \"DoAConstants.sol\":826:828  25 */\n      0x19\n        /* \"DoAConstants.sol\":781:828  uint16 public constant HERO_NFT_SUPPLY_1st = 25 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":3747:4691  function getClassForTokenId(uint256 tokenId) public pure returns (NFT_CLASS tokenClass) {... */\n    tag_155:\n        /* \"DoAConstants.sol\":3813:3833  NFT_CLASS tokenClass */\n      0x00\n        /* \"DoAConstants.sol\":2153:2154  0 */\n      dup1\n        /* \"DoAConstants.sol\":3858:3902  tokenId >= DoAConstants.HERO_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":3858:3865  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":3858:3902  tokenId >= DoAConstants.HERO_NFT_START_INDEX */\n      lt\n      iszero\n        /* \"DoAConstants.sol\":3858:3951  tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":2208:2210  25 */\n      0x19\n        /* \"DoAConstants.sol\":3906:3951  tokenId < DoAConstants.LEGEND_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":3906:3913  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":3906:3951  tokenId < DoAConstants.LEGEND_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":3858:3951  tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX */\n    tag_234:\n        /* \"DoAConstants.sol\":3854:4657  if (tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"DoAConstants.sol\":3980:3994  NFT_CLASS.HERO */\n      0x00\n        /* \"DoAConstants.sol\":3967:3994  tokenClass = NFT_CLASS.HERO */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":3854:4657  if (tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX) {... */\n      jump(tag_236)\n    tag_235:\n        /* \"DoAConstants.sol\":2208:2210  25 */\n      0x19\n        /* \"DoAConstants.sol\":4015:4061  tokenId >= DoAConstants.LEGEND_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4015:4022  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4015:4061  tokenId >= DoAConstants.LEGEND_NFT_START_INDEX */\n      lt\n      iszero\n        /* \"DoAConstants.sol\":4015:4108  tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX */\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":2262:2265  126 */\n      0x7e\n        /* \"DoAConstants.sol\":4065:4108  tokenId < DoAConstants.RARE_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4065:4072  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4065:4108  tokenId < DoAConstants.RARE_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":4015:4108  tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX */\n    tag_237:\n        /* \"DoAConstants.sol\":4011:4657  if (tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"DoAConstants.sol\":4137:4153  NFT_CLASS.LEGEND */\n      0x01\n        /* \"DoAConstants.sol\":4124:4153  tokenClass = NFT_CLASS.LEGEND */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4011:4657  if (tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX) {... */\n      jump(tag_239)\n    tag_238:\n        /* \"DoAConstants.sol\":2262:2265  126 */\n      0x7e\n        /* \"DoAConstants.sol\":4174:4218  tokenId >= DoAConstants.RARE_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4174:4181  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4174:4218  tokenId >= DoAConstants.RARE_NFT_START_INDEX */\n      lt\n      iszero\n        /* \"DoAConstants.sol\":4174:4269  tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX */\n      dup1\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":2321:2324  627 */\n      0x0273\n        /* \"DoAConstants.sol\":4222:4269  tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4222:4229  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4222:4269  tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":4174:4269  tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX */\n    tag_240:\n        /* \"DoAConstants.sol\":4170:4657  if (tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"DoAConstants.sol\":4298:4312  NFT_CLASS.RARE */\n      0x02\n        /* \"DoAConstants.sol\":4285:4312  tokenClass = NFT_CLASS.RARE */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4170:4657  if (tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX) {... */\n      jump(tag_242)\n    tag_241:\n        /* \"DoAConstants.sol\":2321:2324  627 */\n      0x0273\n        /* \"DoAConstants.sol\":4333:4381  tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4333:4340  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4333:4381  tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX */\n      lt\n      iszero\n        /* \"DoAConstants.sol\":4333:4430  tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX */\n      dup1\n      iszero\n      tag_243\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":2378:2382  3128 */\n      0x0c38\n        /* \"DoAConstants.sol\":4385:4430  tokenId < DoAConstants.COMMON_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4385:4392  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4385:4430  tokenId < DoAConstants.COMMON_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":4333:4430  tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX */\n    tag_243:\n        /* \"DoAConstants.sol\":4329:4657  if (tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"DoAConstants.sol\":4459:4477  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"DoAConstants.sol\":4446:4477  tokenClass = NFT_CLASS.UNCOMMON */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4329:4657  if (tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX) {... */\n      jump(tag_245)\n    tag_244:\n        /* \"DoAConstants.sol\":2378:2382  3128 */\n      0x0c38\n        /* \"DoAConstants.sol\":4498:4544  tokenId >= DoAConstants.COMMON_NFT_START_INDEX */\n      0xffff\n      and\n        /* \"DoAConstants.sol\":4498:4505  tokenId */\n      dup3\n        /* \"DoAConstants.sol\":4498:4544  tokenId >= DoAConstants.COMMON_NFT_START_INDEX */\n      lt\n        /* \"DoAConstants.sol\":4494:4657  if (tokenId >= DoAConstants.COMMON_NFT_START_INDEX) {... */\n      tag_246\n      jumpi\n        /* \"DoAConstants.sol\":4573:4589  NFT_CLASS.COMMON */\n      0x04\n        /* \"DoAConstants.sol\":4560:4589  tokenClass = NFT_CLASS.COMMON */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":4494:4657  if (tokenId >= DoAConstants.COMMON_NFT_START_INDEX) {... */\n      jump(tag_247)\n    tag_246:\n        /* \"DoAConstants.sol\":4620:4646  revert(\"Invalid token ID\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DoAConstants.sol\":4494:4657  if (tokenId >= DoAConstants.COMMON_NFT_START_INDEX) {... */\n    tag_247:\n        /* \"DoAConstants.sol\":4329:4657  if (tokenId >= DoAConstants.UNCOMMON_NFT_START_INDEX && tokenId < DoAConstants.COMMON_NFT_START_INDEX) {... */\n    tag_245:\n        /* \"DoAConstants.sol\":4170:4657  if (tokenId >= DoAConstants.RARE_NFT_START_INDEX && tokenId < DoAConstants.UNCOMMON_NFT_START_INDEX) {... */\n    tag_242:\n        /* \"DoAConstants.sol\":4011:4657  if (tokenId >= DoAConstants.LEGEND_NFT_START_INDEX && tokenId < DoAConstants.RARE_NFT_START_INDEX) {... */\n    tag_239:\n        /* \"DoAConstants.sol\":3854:4657  if (tokenId >= DoAConstants.HERO_NFT_START_INDEX && tokenId < DoAConstants.LEGEND_NFT_START_INDEX) {... */\n    tag_236:\n        /* \"DoAConstants.sol\":3747:4691  function getClassForTokenId(uint256 tokenId) public pure returns (NFT_CLASS tokenClass) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DoAConstants.sol\":3641:3690  uint8 public constant PUBLIC_FUND_PERCENTAGE = 60 */\n    tag_159:\n        /* \"DoAConstants.sol\":3688:3690  60 */\n      0x3c\n        /* \"DoAConstants.sol\":3641:3690  uint8 public constant PUBLIC_FUND_PERCENTAGE = 60 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1398:1444  uint16 public constant HERO_NFT_SUPPLY_3rd = 0 */\n    tag_163:\n        /* \"DoAConstants.sol\":1443:1444  0 */\n      0x00\n        /* \"DoAConstants.sol\":1398:1444  uint16 public constant HERO_NFT_SUPPLY_3rd = 0 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":1248:1300  uint16 public constant UNCOMMON_NFT_SUPPLY_2nd = 250 */\n    tag_166:\n        /* \"DoAConstants.sol\":1297:1300  250 */\n      0xfa\n        /* \"DoAConstants.sol\":1248:1300  uint16 public constant UNCOMMON_NFT_SUPPLY_2nd = 250 */\n      dup2\n      jump\t// out\n        /* \"DoAConstants.sol\":5912:6069  function testClassForTokenId(uint256 tokenId) public pure returns (string memory className) {... */\n    tag_170:\n        /* \"DoAConstants.sol\":5979:6002  string memory className */\n      0x60\n        /* \"DoAConstants.sol\":6021:6062  getClassName(getClassForTokenId(tokenId)) */\n      tag_251\n        /* \"DoAConstants.sol\":6034:6061  getClassForTokenId(tokenId) */\n      tag_252\n        /* \"DoAConstants.sol\":6053:6060  tokenId */\n      dup4\n        /* \"DoAConstants.sol\":6034:6052  getClassForTokenId */\n      tag_155\n        /* \"DoAConstants.sol\":6034:6061  getClassForTokenId(tokenId) */\n      jump\t// in\n    tag_252:\n        /* \"DoAConstants.sol\":6021:6033  getClassName */\n      tag_102\n        /* \"DoAConstants.sol\":6021:6062  getClassName(getClassForTokenId(tokenId)) */\n      jump\t// in\n    tag_251:\n        /* \"DoAConstants.sol\":6014:6062  return getClassName(getClassForTokenId(tokenId)) */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":5912:6069  function testClassForTokenId(uint256 tokenId) public pure returns (string memory className) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:96   */\n    tag_253:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:89   */\n      0xffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:90   */\n      and\n        /* \"#utility.yul\":61:90   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:96   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":102:225   */\n    tag_254:\n        /* \"#utility.yul\":195:218   */\n      tag_285\n        /* \"#utility.yul\":212:217   */\n      dup2\n        /* \"#utility.yul\":195:218   */\n      tag_253\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":190:193   */\n      dup3\n        /* \"#utility.yul\":183:219   */\n      mstore\n        /* \"#utility.yul\":102:225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":231:465   */\n    tag_50:\n        /* \"#utility.yul\":330:334   */\n      0x00\n        /* \"#utility.yul\":368:370   */\n      0x20\n        /* \"#utility.yul\":357:366   */\n      dup3\n        /* \"#utility.yul\":353:371   */\n      add\n        /* \"#utility.yul\":345:371   */\n      swap1\n      pop\n        /* \"#utility.yul\":381:458   */\n      tag_287\n        /* \"#utility.yul\":455:456   */\n      0x00\n        /* \"#utility.yul\":444:453   */\n      dup4\n        /* \"#utility.yul\":440:457   */\n      add\n        /* \"#utility.yul\":431:437   */\n      dup5\n        /* \"#utility.yul\":381:458   */\n      tag_254\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":231:465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":471:570   */\n    tag_255:\n        /* \"#utility.yul\":523:529   */\n      0x00\n        /* \"#utility.yul\":557:562   */\n      dup2\n        /* \"#utility.yul\":551:563   */\n      mload\n        /* \"#utility.yul\":541:563   */\n      swap1\n      pop\n        /* \"#utility.yul\":471:570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":576:753   */\n    tag_256:\n        /* \"#utility.yul\":668:679   */\n      0x00\n        /* \"#utility.yul\":702:708   */\n      dup3\n        /* \"#utility.yul\":697:700   */\n      dup3\n        /* \"#utility.yul\":690:709   */\n      mstore\n        /* \"#utility.yul\":742:746   */\n      0x20\n        /* \"#utility.yul\":737:740   */\n      dup3\n        /* \"#utility.yul\":733:747   */\n      add\n        /* \"#utility.yul\":718:747   */\n      swap1\n      pop\n        /* \"#utility.yul\":576:753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":759:1005   */\n    tag_257:\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":850:963   */\n    tag_291:\n        /* \"#utility.yul\":864:870   */\n      dup4\n        /* \"#utility.yul\":861:862   */\n      dup2\n        /* \"#utility.yul\":858:871   */\n      lt\n        /* \"#utility.yul\":850:963   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":949:950   */\n      dup1\n        /* \"#utility.yul\":944:947   */\n      dup3\n        /* \"#utility.yul\":940:951   */\n      add\n        /* \"#utility.yul\":934:952   */\n      mload\n        /* \"#utility.yul\":930:931   */\n      dup2\n        /* \"#utility.yul\":925:928   */\n      dup5\n        /* \"#utility.yul\":921:932   */\n      add\n        /* \"#utility.yul\":914:953   */\n      mstore\n        /* \"#utility.yul\":886:888   */\n      0x20\n        /* \"#utility.yul\":883:884   */\n      dup2\n        /* \"#utility.yul\":879:889   */\n      add\n        /* \"#utility.yul\":874:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":850:963   */\n      jump(tag_291)\n    tag_293:\n        /* \"#utility.yul\":997:998   */\n      0x00\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:995   */\n      add\n        /* \"#utility.yul\":972:999   */\n      mstore\n        /* \"#utility.yul\":821:1005   */\n      pop\n        /* \"#utility.yul\":759:1005   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1011:1113   */\n    tag_258:\n        /* \"#utility.yul\":1052:1058   */\n      0x00\n        /* \"#utility.yul\":1103:1105   */\n      0x1f\n        /* \"#utility.yul\":1099:1106   */\n      not\n        /* \"#utility.yul\":1094:1096   */\n      0x1f\n        /* \"#utility.yul\":1087:1092   */\n      dup4\n        /* \"#utility.yul\":1083:1097   */\n      add\n        /* \"#utility.yul\":1079:1107   */\n      and\n        /* \"#utility.yul\":1069:1107   */\n      swap1\n      pop\n        /* \"#utility.yul\":1011:1113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1119:1512   */\n    tag_259:\n        /* \"#utility.yul\":1215:1218   */\n      0x00\n        /* \"#utility.yul\":1243:1282   */\n      tag_296\n        /* \"#utility.yul\":1276:1281   */\n      dup3\n        /* \"#utility.yul\":1243:1282   */\n      tag_255\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1298:1377   */\n      tag_297\n        /* \"#utility.yul\":1370:1376   */\n      dup2\n        /* \"#utility.yul\":1365:1368   */\n      dup6\n        /* \"#utility.yul\":1298:1377   */\n      tag_256\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1291:1377   */\n      swap4\n      pop\n        /* \"#utility.yul\":1386:1451   */\n      tag_298\n        /* \"#utility.yul\":1444:1450   */\n      dup2\n        /* \"#utility.yul\":1439:1442   */\n      dup6\n        /* \"#utility.yul\":1432:1436   */\n      0x20\n        /* \"#utility.yul\":1425:1430   */\n      dup7\n        /* \"#utility.yul\":1421:1437   */\n      add\n        /* \"#utility.yul\":1386:1451   */\n      tag_257\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1476:1505   */\n      tag_299\n        /* \"#utility.yul\":1498:1504   */\n      dup2\n        /* \"#utility.yul\":1476:1505   */\n      tag_258\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1471:1474   */\n      dup5\n        /* \"#utility.yul\":1467:1506   */\n      add\n        /* \"#utility.yul\":1460:1506   */\n      swap2\n      pop\n        /* \"#utility.yul\":1219:1512   */\n      pop\n        /* \"#utility.yul\":1119:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1847   */\n    tag_60:\n        /* \"#utility.yul\":1639:1643   */\n      0x00\n        /* \"#utility.yul\":1677:1679   */\n      0x20\n        /* \"#utility.yul\":1666:1675   */\n      dup3\n        /* \"#utility.yul\":1662:1680   */\n      add\n        /* \"#utility.yul\":1654:1680   */\n      swap1\n      pop\n        /* \"#utility.yul\":1726:1735   */\n      dup2\n        /* \"#utility.yul\":1720:1724   */\n      dup2\n        /* \"#utility.yul\":1716:1736   */\n      sub\n        /* \"#utility.yul\":1712:1713   */\n      0x00\n        /* \"#utility.yul\":1701:1710   */\n      dup4\n        /* \"#utility.yul\":1697:1714   */\n      add\n        /* \"#utility.yul\":1690:1737   */\n      mstore\n        /* \"#utility.yul\":1754:1840   */\n      tag_301\n        /* \"#utility.yul\":1835:1839   */\n      dup2\n        /* \"#utility.yul\":1826:1832   */\n      dup5\n        /* \"#utility.yul\":1754:1840   */\n      tag_259\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1746:1840   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1853:1930   */\n    tag_260:\n        /* \"#utility.yul\":1890:1897   */\n      0x00\n        /* \"#utility.yul\":1919:1924   */\n      dup2\n        /* \"#utility.yul\":1908:1924   */\n      swap1\n      pop\n        /* \"#utility.yul\":1853:1930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1936:2062   */\n    tag_261:\n        /* \"#utility.yul\":2031:2055   */\n      tag_304\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_260\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2026:2029   */\n      dup3\n        /* \"#utility.yul\":2019:2056   */\n      mstore\n        /* \"#utility.yul\":1936:2062   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2068:2306   */\n    tag_70:\n        /* \"#utility.yul\":2169:2173   */\n      0x00\n        /* \"#utility.yul\":2207:2209   */\n      0x20\n        /* \"#utility.yul\":2196:2205   */\n      dup3\n        /* \"#utility.yul\":2192:2210   */\n      add\n        /* \"#utility.yul\":2184:2210   */\n      swap1\n      pop\n        /* \"#utility.yul\":2220:2299   */\n      tag_306\n        /* \"#utility.yul\":2296:2297   */\n      0x00\n        /* \"#utility.yul\":2285:2294   */\n      dup4\n        /* \"#utility.yul\":2281:2298   */\n      add\n        /* \"#utility.yul\":2272:2278   */\n      dup5\n        /* \"#utility.yul\":2220:2299   */\n      tag_261\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2068:2306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2393:2510   */\n    tag_263:\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      dup1\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2639:2752   */\n    tag_265:\n        /* \"#utility.yul\":2726:2727   */\n      0x05\n        /* \"#utility.yul\":2719:2724   */\n      dup2\n        /* \"#utility.yul\":2716:2728   */\n      lt\n        /* \"#utility.yul\":2706:2746   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":2742:2743   */\n      0x00\n        /* \"#utility.yul\":2739:2740   */\n      dup1\n        /* \"#utility.yul\":2732:2744   */\n      revert\n        /* \"#utility.yul\":2706:2746   */\n    tag_311:\n        /* \"#utility.yul\":2639:2752   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2758:2925   */\n    tag_266:\n        /* \"#utility.yul\":2818:2823   */\n      0x00\n        /* \"#utility.yul\":2856:2862   */\n      dup2\n        /* \"#utility.yul\":2843:2863   */\n      calldataload\n        /* \"#utility.yul\":2834:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2919   */\n      tag_313\n        /* \"#utility.yul\":2913:2918   */\n      dup2\n        /* \"#utility.yul\":2872:2919   */\n      tag_265\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2758:2925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2931:3288   */\n    tag_88:\n        /* \"#utility.yul\":3004:3010   */\n      0x00\n        /* \"#utility.yul\":3053:3055   */\n      0x20\n        /* \"#utility.yul\":3041:3050   */\n      dup3\n        /* \"#utility.yul\":3032:3039   */\n      dup5\n        /* \"#utility.yul\":3028:3051   */\n      sub\n        /* \"#utility.yul\":3024:3056   */\n      slt\n        /* \"#utility.yul\":3021:3140   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3059:3138   */\n      tag_316\n      tag_263\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3021:3140   */\n    tag_315:\n        /* \"#utility.yul\":3179:3180   */\n      0x00\n        /* \"#utility.yul\":3204:3271   */\n      tag_317\n        /* \"#utility.yul\":3263:3270   */\n      dup5\n        /* \"#utility.yul\":3254:3260   */\n      dup3\n        /* \"#utility.yul\":3243:3252   */\n      dup6\n        /* \"#utility.yul\":3239:3261   */\n      add\n        /* \"#utility.yul\":3204:3271   */\n      tag_266\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3194:3271   */\n      swap2\n      pop\n        /* \"#utility.yul\":3150:3281   */\n      pop\n        /* \"#utility.yul\":2931:3288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3294:3416   */\n    tag_267:\n        /* \"#utility.yul\":3367:3391   */\n      tag_319\n        /* \"#utility.yul\":3385:3390   */\n      dup2\n        /* \"#utility.yul\":3367:3391   */\n      tag_260\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3360:3365   */\n      dup2\n        /* \"#utility.yul\":3357:3392   */\n      eq\n        /* \"#utility.yul\":3347:3410   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3403:3404   */\n      dup1\n        /* \"#utility.yul\":3396:3408   */\n      revert\n        /* \"#utility.yul\":3347:3410   */\n    tag_320:\n        /* \"#utility.yul\":3294:3416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3422:3561   */\n    tag_268:\n        /* \"#utility.yul\":3468:3473   */\n      0x00\n        /* \"#utility.yul\":3506:3512   */\n      dup2\n        /* \"#utility.yul\":3493:3513   */\n      calldataload\n        /* \"#utility.yul\":3484:3513   */\n      swap1\n      pop\n        /* \"#utility.yul\":3522:3555   */\n      tag_322\n        /* \"#utility.yul\":3549:3554   */\n      dup2\n        /* \"#utility.yul\":3522:3555   */\n      tag_267\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3422:3561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3896   */\n    tag_154:\n        /* \"#utility.yul\":3626:3632   */\n      0x00\n        /* \"#utility.yul\":3675:3677   */\n      0x20\n        /* \"#utility.yul\":3663:3672   */\n      dup3\n        /* \"#utility.yul\":3654:3661   */\n      dup5\n        /* \"#utility.yul\":3650:3673   */\n      sub\n        /* \"#utility.yul\":3646:3678   */\n      slt\n        /* \"#utility.yul\":3643:3762   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3681:3760   */\n      tag_325\n      tag_263\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3643:3762   */\n    tag_324:\n        /* \"#utility.yul\":3801:3802   */\n      0x00\n        /* \"#utility.yul\":3826:3879   */\n      tag_326\n        /* \"#utility.yul\":3871:3878   */\n      dup5\n        /* \"#utility.yul\":3862:3868   */\n      dup3\n        /* \"#utility.yul\":3851:3860   */\n      dup6\n        /* \"#utility.yul\":3847:3869   */\n      add\n        /* \"#utility.yul\":3826:3879   */\n      tag_268\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3816:3879   */\n      swap2\n      pop\n        /* \"#utility.yul\":3772:3889   */\n      pop\n        /* \"#utility.yul\":3567:3896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3902:4082   */\n    tag_175:\n        /* \"#utility.yul\":3950:4027   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3947:3948   */\n      0x00\n        /* \"#utility.yul\":3940:4028   */\n      mstore\n        /* \"#utility.yul\":4047:4051   */\n      0x21\n        /* \"#utility.yul\":4044:4045   */\n      0x04\n        /* \"#utility.yul\":4037:4052   */\n      mstore\n        /* \"#utility.yul\":4071:4075   */\n      0x24\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4061:4076   */\n      revert\n        /* \"#utility.yul\":4088:4207   */\n    tag_269:\n        /* \"#utility.yul\":4175:4176   */\n      0x05\n        /* \"#utility.yul\":4168:4173   */\n      dup2\n        /* \"#utility.yul\":4165:4177   */\n      lt\n        /* \"#utility.yul\":4155:4201   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4181:4199   */\n      tag_330\n      tag_175\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4155:4201   */\n    tag_329:\n        /* \"#utility.yul\":4088:4207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4213:4352   */\n    tag_270:\n        /* \"#utility.yul\":4264:4271   */\n      0x00\n        /* \"#utility.yul\":4293:4298   */\n      dup2\n        /* \"#utility.yul\":4282:4298   */\n      swap1\n      pop\n        /* \"#utility.yul\":4299:4346   */\n      tag_332\n        /* \"#utility.yul\":4340:4345   */\n      dup3\n        /* \"#utility.yul\":4299:4346   */\n      tag_269\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4213:4352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4358:4497   */\n    tag_271:\n        /* \"#utility.yul\":4420:4429   */\n      0x00\n        /* \"#utility.yul\":4453:4491   */\n      tag_334\n        /* \"#utility.yul\":4485:4490   */\n      dup3\n        /* \"#utility.yul\":4453:4491   */\n      tag_270\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4440:4491   */\n      swap1\n      pop\n        /* \"#utility.yul\":4358:4497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4503:4666   */\n    tag_272:\n        /* \"#utility.yul\":4610:4659   */\n      tag_336\n        /* \"#utility.yul\":4653:4658   */\n      dup2\n        /* \"#utility.yul\":4610:4659   */\n      tag_271\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4605:4608   */\n      dup3\n        /* \"#utility.yul\":4598:4660   */\n      mstore\n        /* \"#utility.yul\":4503:4666   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4672:4934   */\n    tag_157:\n        /* \"#utility.yul\":4785:4789   */\n      0x00\n        /* \"#utility.yul\":4823:4825   */\n      0x20\n        /* \"#utility.yul\":4812:4821   */\n      dup3\n        /* \"#utility.yul\":4808:4826   */\n      add\n        /* \"#utility.yul\":4800:4826   */\n      swap1\n      pop\n        /* \"#utility.yul\":4836:4927   */\n      tag_338\n        /* \"#utility.yul\":4924:4925   */\n      0x00\n        /* \"#utility.yul\":4913:4922   */\n      dup4\n        /* \"#utility.yul\":4909:4926   */\n      add\n        /* \"#utility.yul\":4900:4906   */\n      dup5\n        /* \"#utility.yul\":4836:4927   */\n      tag_272\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4672:4934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4940:5026   */\n    tag_273:\n        /* \"#utility.yul\":4975:4982   */\n      0x00\n        /* \"#utility.yul\":5015:5019   */\n      0xff\n        /* \"#utility.yul\":5008:5013   */\n      dup3\n        /* \"#utility.yul\":5004:5020   */\n      and\n        /* \"#utility.yul\":4993:5020   */\n      swap1\n      pop\n        /* \"#utility.yul\":4940:5026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5032:5152   */\n    tag_274:\n        /* \"#utility.yul\":5123:5145   */\n      tag_341\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5123:5145   */\n      tag_273\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5118:5121   */\n      dup3\n        /* \"#utility.yul\":5111:5146   */\n      mstore\n        /* \"#utility.yul\":5032:5152   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5158:5388   */\n    tag_161:\n        /* \"#utility.yul\":5255:5259   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5282:5291   */\n      dup3\n        /* \"#utility.yul\":5278:5296   */\n      add\n        /* \"#utility.yul\":5270:5296   */\n      swap1\n      pop\n        /* \"#utility.yul\":5306:5381   */\n      tag_343\n        /* \"#utility.yul\":5378:5379   */\n      0x00\n        /* \"#utility.yul\":5367:5376   */\n      dup4\n        /* \"#utility.yul\":5363:5380   */\n      add\n        /* \"#utility.yul\":5354:5360   */\n      dup5\n        /* \"#utility.yul\":5306:5381   */\n      tag_274\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5158:5388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5563   */\n    tag_275:\n        /* \"#utility.yul\":5478:5489   */\n      0x00\n        /* \"#utility.yul\":5512:5518   */\n      dup3\n        /* \"#utility.yul\":5507:5510   */\n      dup3\n        /* \"#utility.yul\":5500:5519   */\n      mstore\n        /* \"#utility.yul\":5552:5556   */\n      0x20\n        /* \"#utility.yul\":5547:5550   */\n      dup3\n        /* \"#utility.yul\":5543:5557   */\n      add\n        /* \"#utility.yul\":5528:5557   */\n      swap1\n      pop\n        /* \"#utility.yul\":5394:5563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5569:5732   */\n    tag_276:\n        /* \"#utility.yul\":5709:5724   */\n      0x496e76616c696420636c61737300000000000000000000000000000000000000\n        /* \"#utility.yul\":5705:5706   */\n      0x00\n        /* \"#utility.yul\":5697:5703   */\n      dup3\n        /* \"#utility.yul\":5693:5707   */\n      add\n        /* \"#utility.yul\":5686:5725   */\n      mstore\n        /* \"#utility.yul\":5569:5732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5738:6104   */\n    tag_277:\n        /* \"#utility.yul\":5880:5883   */\n      0x00\n        /* \"#utility.yul\":5901:5968   */\n      tag_347\n        /* \"#utility.yul\":5965:5967   */\n      0x0d\n        /* \"#utility.yul\":5960:5963   */\n      dup4\n        /* \"#utility.yul\":5901:5968   */\n      tag_275\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5894:5968   */\n      swap2\n      pop\n        /* \"#utility.yul\":5977:6070   */\n      tag_348\n        /* \"#utility.yul\":6066:6069   */\n      dup3\n        /* \"#utility.yul\":5977:6070   */\n      tag_276\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6095:6097   */\n      0x20\n        /* \"#utility.yul\":6090:6093   */\n      dup3\n        /* \"#utility.yul\":6086:6098   */\n      add\n        /* \"#utility.yul\":6079:6098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5738:6104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6110:6529   */\n    tag_199:\n        /* \"#utility.yul\":6276:6280   */\n      0x00\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"#utility.yul\":6303:6312   */\n      dup3\n        /* \"#utility.yul\":6299:6317   */\n      add\n        /* \"#utility.yul\":6291:6317   */\n      swap1\n      pop\n        /* \"#utility.yul\":6363:6372   */\n      dup2\n        /* \"#utility.yul\":6357:6361   */\n      dup2\n        /* \"#utility.yul\":6353:6373   */\n      sub\n        /* \"#utility.yul\":6349:6350   */\n      0x00\n        /* \"#utility.yul\":6338:6347   */\n      dup4\n        /* \"#utility.yul\":6334:6351   */\n      add\n        /* \"#utility.yul\":6327:6374   */\n      mstore\n        /* \"#utility.yul\":6391:6522   */\n      tag_350\n        /* \"#utility.yul\":6517:6521   */\n      dup2\n        /* \"#utility.yul\":6391:6522   */\n      tag_277\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6383:6522   */\n      swap1\n      pop\n        /* \"#utility.yul\":6110:6529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6535:6704   */\n    tag_278:\n        /* \"#utility.yul\":6675:6696   */\n      0x496e76616c696420746f6b656e20636c61737300000000000000000000000000\n        /* \"#utility.yul\":6671:6672   */\n      0x00\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6659:6673   */\n      add\n        /* \"#utility.yul\":6652:6697   */\n      mstore\n        /* \"#utility.yul\":6535:6704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6710:7076   */\n    tag_279:\n        /* \"#utility.yul\":6852:6855   */\n      0x00\n        /* \"#utility.yul\":6873:6940   */\n      tag_353\n        /* \"#utility.yul\":6937:6939   */\n      0x13\n        /* \"#utility.yul\":6932:6935   */\n      dup4\n        /* \"#utility.yul\":6873:6940   */\n      tag_275\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6866:6940   */\n      swap2\n      pop\n        /* \"#utility.yul\":6949:7042   */\n      tag_354\n        /* \"#utility.yul\":7038:7041   */\n      dup3\n        /* \"#utility.yul\":6949:7042   */\n      tag_278\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7067:7069   */\n      0x20\n        /* \"#utility.yul\":7062:7065   */\n      dup3\n        /* \"#utility.yul\":7058:7070   */\n      add\n        /* \"#utility.yul\":7051:7070   */\n      swap1\n      pop\n        /* \"#utility.yul\":6710:7076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7082:7501   */\n    tag_232:\n        /* \"#utility.yul\":7248:7252   */\n      0x00\n        /* \"#utility.yul\":7286:7288   */\n      0x20\n        /* \"#utility.yul\":7275:7284   */\n      dup3\n        /* \"#utility.yul\":7271:7289   */\n      add\n        /* \"#utility.yul\":7263:7289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7335:7344   */\n      dup2\n        /* \"#utility.yul\":7329:7333   */\n      dup2\n        /* \"#utility.yul\":7325:7345   */\n      sub\n        /* \"#utility.yul\":7321:7322   */\n      0x00\n        /* \"#utility.yul\":7310:7319   */\n      dup4\n        /* \"#utility.yul\":7306:7323   */\n      add\n        /* \"#utility.yul\":7299:7346   */\n      mstore\n        /* \"#utility.yul\":7363:7494   */\n      tag_356\n        /* \"#utility.yul\":7489:7493   */\n      dup2\n        /* \"#utility.yul\":7363:7494   */\n      tag_279\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7355:7494   */\n      swap1\n      pop\n        /* \"#utility.yul\":7082:7501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7507:7673   */\n    tag_280:\n        /* \"#utility.yul\":7647:7665   */\n      0x496e76616c696420746f6b656e20494400000000000000000000000000000000\n        /* \"#utility.yul\":7643:7644   */\n      0x00\n        /* \"#utility.yul\":7635:7641   */\n      dup3\n        /* \"#utility.yul\":7631:7645   */\n      add\n        /* \"#utility.yul\":7624:7666   */\n      mstore\n        /* \"#utility.yul\":7507:7673   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7679:8045   */\n    tag_281:\n        /* \"#utility.yul\":7821:7824   */\n      0x00\n        /* \"#utility.yul\":7842:7909   */\n      tag_359\n        /* \"#utility.yul\":7906:7908   */\n      0x10\n        /* \"#utility.yul\":7901:7904   */\n      dup4\n        /* \"#utility.yul\":7842:7909   */\n      tag_275\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7835:7909   */\n      swap2\n      pop\n        /* \"#utility.yul\":7918:8011   */\n      tag_360\n        /* \"#utility.yul\":8007:8010   */\n      dup3\n        /* \"#utility.yul\":7918:8011   */\n      tag_280\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8036:8038   */\n      0x20\n        /* \"#utility.yul\":8031:8034   */\n      dup3\n        /* \"#utility.yul\":8027:8039   */\n      add\n        /* \"#utility.yul\":8020:8039   */\n      swap1\n      pop\n        /* \"#utility.yul\":7679:8045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8051:8470   */\n    tag_249:\n        /* \"#utility.yul\":8217:8221   */\n      0x00\n        /* \"#utility.yul\":8255:8257   */\n      0x20\n        /* \"#utility.yul\":8244:8253   */\n      dup3\n        /* \"#utility.yul\":8240:8258   */\n      add\n        /* \"#utility.yul\":8232:8258   */\n      swap1\n      pop\n        /* \"#utility.yul\":8304:8313   */\n      dup2\n        /* \"#utility.yul\":8298:8302   */\n      dup2\n        /* \"#utility.yul\":8294:8314   */\n      sub\n        /* \"#utility.yul\":8290:8291   */\n      0x00\n        /* \"#utility.yul\":8279:8288   */\n      dup4\n        /* \"#utility.yul\":8275:8292   */\n      add\n        /* \"#utility.yul\":8268:8315   */\n      mstore\n        /* \"#utility.yul\":8332:8463   */\n      tag_362\n        /* \"#utility.yul\":8458:8462   */\n      dup2\n        /* \"#utility.yul\":8332:8463   */\n      tag_281\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8324:8463   */\n      swap1\n      pop\n        /* \"#utility.yul\":8051:8470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207962e6d9f810008cf532599fa7a8ff39a064faaa27845750e28fb49db2c8845d64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x11BB PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EE58048 GT PUSH2 0x13A JUMPI DUP1 PUSH4 0xCA45F599 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0xED944CB6 GT PUSH2 0x86 JUMPI DUP1 PUSH4 0xED944CB6 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xEDA14323 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xF41DC7D2 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xF59528D2 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xFD642870 EQ PUSH2 0x6CD JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xCA45F599 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xCB937D2B EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xCFC2ABB7 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xDBDDB26A EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xE93E980B EQ PUSH2 0x625 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xBE8CA905 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xBE8CA905 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xBEB9E75E EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xBF0832AE EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xC244E88B EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xC525C0C8 EQ PUSH2 0x58F JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x9EE58048 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xA1BD4A07 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xA1D2002D EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA83179DB EQ PUSH2 0x4F9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x5E28C936 GT PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x828D481B GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x828D481B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x8D1DA411 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x8F5236E5 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x970F6E2F EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x971CBA96 EQ PUSH2 0x481 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x5E28C936 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x6871D79F EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x6B606F0F EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6E2F5A5F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x811D5C6C EQ PUSH2 0x3D9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x32A41506 GT PUSH2 0x20F JUMPI DUP1 PUSH4 0x32A41506 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x38D79B52 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x4E2ECCA1 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x58A0D923 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x5E09346A EQ PUSH2 0x331 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x10A309F3 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x11F47EB5 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x1AB7730C EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x1EB1A2D3 EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FF PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46B PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51F PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53D PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55B PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x579 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x597 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F1 PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60F PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62D PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67B PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x699 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B7 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7E DUP2 JUMP JUMPDEST PUSH2 0x273 DUP2 JUMP JUMPDEST PUSH2 0x618 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F6C6567656E642F6D6574616461746100000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB5 DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH8 0x16C2734F97A40000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F756E636F6D6D6F6E2F6D657461646174610000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x203A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI PUSH2 0x7D3 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x7E9 JUMPI PUSH8 0x16C2734F97A40000 SWAP1 POP PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7FD JUMPI PUSH2 0x7FC PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x810 JUMPI PUSH2 0x80F PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x825 JUMPI PUSH8 0x494654067E10000 SWAP1 POP PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x860 JUMPI PUSH7 0x2E2F6E5E148000 SWAP1 POP PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x89A JUMPI PUSH7 0xEA7AA67B2D0000 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP1 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F636F6D6D6F6E2F6D6574616461746100000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x7D DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x936 JUMPI PUSH2 0x935 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x948 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4865726F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B1 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6567656E640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA1B JUMPI PUSH2 0xA1A PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5261726500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA71 JUMPI PUSH2 0xA70 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA84 JUMPI PUSH2 0xA83 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E636F6D6D6F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAEC JUMPI PUSH2 0xAEB PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F6D6D6F6E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB60 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0xC38 DUP2 JUMP JUMPDEST PUSH7 0xEA7AA67B2D0000 DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH8 0x494654067E10000 DUP2 JUMP JUMPDEST PUSH7 0x2E2F6E5E148000 DUP2 JUMP JUMPDEST PUSH1 0x50 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F726172652F6D65746164617461000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x4E2 DUP2 JUMP JUMPDEST PUSH2 0x190 DUP2 JUMP JUMPDEST PUSH2 0x168A DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F6865726F2F6D65746164617461000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F3C686173683E2F646F612F6E66740000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xC90 JUMPI POP PUSH1 0x19 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x19 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xCB7 JUMPI POP PUSH1 0x7E PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x7E PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI POP PUSH2 0x273 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x273 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xD08 JUMPI POP PUSH2 0xC38 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xD16 JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0xD68 JUMP JUMPDEST PUSH2 0xC38 PUSH2 0xFFFF AND DUP3 LT PUSH2 0xD2C JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3C DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0xFA DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD92 PUSH2 0xD8D DUP4 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB0 DUP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xE3D DUP2 DUP6 PUSH2 0xDDC JUMP JUMPDEST SWAP4 POP PUSH2 0xE4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE56 DUP2 PUSH2 0xE17 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7B DUP2 DUP5 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE96 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEDB DUP2 PUSH2 0xEBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF7 JUMPI PUSH2 0xEF6 PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF05 DUP5 DUP3 DUP6 ADD PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF17 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP2 EQ PUSH2 0xF22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF34 DUP2 PUSH2 0xF0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH2 0xF4F PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF5E DUP5 DUP3 DUP6 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xFB8 DUP3 PUSH2 0xF96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC8 DUP3 PUSH2 0xFAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD8 DUP2 PUSH2 0xFBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100F DUP2 PUSH2 0xFF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636C61737300000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 PUSH1 0xD DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 DUP3 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A6 DUP2 PUSH2 0x106A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20636C61737300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 PUSH1 0x13 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x10EE DUP3 PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1112 DUP2 PUSH2 0x10D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114F PUSH1 0x10 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x115A DUP3 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x117E DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x62E6D9F810008CF532599FA7A8FF39A064FAAA27845750E28FB4 SWAP14 0xB2 0xC8 DUP5 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "503:5569:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BASE_COMMON_URI_1703": {
									"entryPoint": 2269,
									"id": 1703,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_HERO_URI_1691": {
									"entryPoint": 3071,
									"id": 1691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_LEGEND_URI_1694": {
									"entryPoint": 1806,
									"id": 1694,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_RARE_URI_1697": {
									"entryPoint": 2996,
									"id": 1697,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_UNCOMMON_URI_1700": {
									"entryPoint": 1900,
									"id": 1700,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BASE_URI_1688": {
									"entryPoint": 3128,
									"id": 1688,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_PRICE_1682": {
									"entryPoint": 2941,
									"id": 1682,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_START_INDEX_1673": {
									"entryPoint": 2935,
									"id": 1673,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_SUPPLY_1st_1619": {
									"entryPoint": 2326,
									"id": 1619,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_SUPPLY_2nd_1634": {
									"entryPoint": 3053,
									"id": 1634,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMON_NFT_SUPPLY_3rd_1649": {
									"entryPoint": 3065,
									"id": 1649,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HERO_NFT_START_INDEX_1661": {
									"entryPoint": 1885,
									"id": 1661,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HERO_NFT_SUPPLY_1st_1607": {
									"entryPoint": 3185,
									"id": 1607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HERO_NFT_SUPPLY_2nd_1622": {
									"entryPoint": 2963,
									"id": 1622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HERO_NFT_SUPPLY_3rd_1637": {
									"entryPoint": 3445,
									"id": 1637,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_PRICE_1676": {
									"entryPoint": 1873,
									"id": 1676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_START_INDEX_1664": {
									"entryPoint": 2952,
									"id": 1664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_SUPPLY_1st_1610": {
									"entryPoint": 2331,
									"id": 1610,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_SUPPLY_2nd_1625": {
									"entryPoint": 1868,
									"id": 1625,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LEGEND_NFT_SUPPLY_3rd_1640": {
									"entryPoint": 2991,
									"id": 1640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFT_SUPPLY_1st_1652": {
									"entryPoint": 1863,
									"id": 1652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFT_SUPPLY_2nd_1655": {
									"entryPoint": 1800,
									"id": 1655,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFT_SUPPLY_3rd_1658": {
									"entryPoint": 1957,
									"id": 1658,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PUBLIC_FUND_PERCENTAGE_1706": {
									"entryPoint": 3440,
									"id": 1706,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_PRICE_1679": {
									"entryPoint": 2968,
									"id": 1679,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_START_INDEX_1667": {
									"entryPoint": 1789,
									"id": 1667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_SUPPLY_1st_1613": {
									"entryPoint": 2930,
									"id": 1613,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_SUPPLY_2nd_1628": {
									"entryPoint": 1890,
									"id": 1628,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RARE_NFT_SUPPLY_3rd_1643": {
									"entryPoint": 3059,
									"id": 1643,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_PRICE_1685": {
									"entryPoint": 2980,
									"id": 1685,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_START_INDEX_1670": {
									"entryPoint": 1794,
									"id": 1670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_SUPPLY_1st_1616": {
									"entryPoint": 1895,
									"id": 1616,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_SUPPLY_2nd_1631": {
									"entryPoint": 3450,
									"id": 1631,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UNCOMMON_NFT_SUPPLY_3rd_1646": {
									"entryPoint": 2957,
									"id": 1646,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getClassForTokenId_1797": {
									"entryPoint": 3190,
									"id": 1797,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getClassName_1861": {
									"entryPoint": 2336,
									"id": 1861,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getClassPrice_1916": {
									"entryPoint": 1963,
									"id": 1916,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@testClassForTokenId_1930": {
									"entryPoint": 3455,
									"id": 1930,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 3809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack_library": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack_library": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 3725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack_library": {
									"entryPoint": 4102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_NFT_CLASS_$1604__to_t_uint8__fromStack_library_reversed": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_NFT_CLASS_$1604_to_t_uint8": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18": {
									"entryPoint": 4269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 3772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8473:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:45:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "83:6:17",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:18:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "43:7:17",
														"type": ""
													}
												],
												"src": "7:89:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "173:52:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "190:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "195:16:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "195:23:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:36:17"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "161:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "168:3:17",
														"type": ""
													}
												],
												"src": "102:123:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "335:130:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "345:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "357:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "368:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "353:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "345:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "431:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "444:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "455:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "440:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "440:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "381:49:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:77:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "381:77:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "307:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "319:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "330:4:17",
														"type": ""
													}
												],
												"src": "231:234:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "530:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "541:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "557:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "551:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "513:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "523:6:17",
														"type": ""
													}
												],
												"src": "471:99:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "680:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "697:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "702:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "690:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "718:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "737:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "718:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "657:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "668:11:17",
														"type": ""
													}
												],
												"src": "576:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "821:184:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "831:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "840:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "835:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "925:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "930:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "921:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "921:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "944:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "949:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "940:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "940:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "934:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "934:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "914:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "914:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "914:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "861:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "864:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "858:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "872:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "874:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "883:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "886:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "879:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "879:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "874:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "854:3:17",
																"statements": []
															},
															"src": "850:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "983:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "988:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "979:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "979:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "997:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "972:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "972:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "803:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "808:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "813:6:17",
														"type": ""
													}
												],
												"src": "759:246:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1059:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1069:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1087:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1094:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1083:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1083:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1103:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1079:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1069:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1042:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1052:6:17",
														"type": ""
													}
												],
												"src": "1011:102:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1219:293:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1229:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1276:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1243:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1233:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1291:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1365:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1298:66:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:79:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1425:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1432:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1439:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1444:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1386:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:65:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1460:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1498:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1476:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1476:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1207:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1215:3:17",
														"type": ""
													}
												],
												"src": "1119:393:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:203:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1654:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1666:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1662:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1654:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1701:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1712:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1720:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1726:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1690:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1746:94:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1835:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1754:71:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:86:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1616:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1628:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1639:4:17",
														"type": ""
													}
												],
												"src": "1518:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1898:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1908:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1919:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1908:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1880:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1890:7:17",
														"type": ""
													}
												],
												"src": "1853:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2009:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2026:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2049:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2031:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2031:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1997:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2004:3:17",
														"type": ""
													}
												],
												"src": "1936:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2174:132:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2184:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2196:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2207:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2192:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2184:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2272:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2285:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2296:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2281:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2281:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "2220:51:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:79:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:79:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2146:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2158:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2169:4:17",
														"type": ""
													}
												],
												"src": "2068:238:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2352:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2362:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2378:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2372:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2345:6:17",
														"type": ""
													}
												],
												"src": "2312:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2482:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2502:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2492:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2492:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2393:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2625:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2516:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2696:56:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2739:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2742:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2732:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2726:1:17",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2716:12:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:20:17"
															},
															"nodeType": "YulIf",
															"src": "2706:40:17"
														}
													]
												},
												"name": "validator_revert_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2689:5:17",
														"type": ""
													}
												],
												"src": "2639:113:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:101:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2834:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2913:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_NFT_CLASS_$1604",
																	"nodeType": "YulIdentifier",
																	"src": "2872:40:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:47:17"
														}
													]
												},
												"name": "abi_decode_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2802:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2810:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2818:5:17",
														"type": ""
													}
												],
												"src": "2758:167:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3011:277:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3057:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3059:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3059:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3059:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3032:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3041:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3028:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3028:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3024:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:32:17"
															},
															"nodeType": "YulIf",
															"src": "3021:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3150:131:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3165:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3179:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3169:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3194:77:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3243:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3254:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3239:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3239:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3263:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_NFT_CLASS_$1604",
																			"nodeType": "YulIdentifier",
																			"src": "3204:34:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3204:67:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3194:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2981:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2992:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3004:6:17",
														"type": ""
													}
												],
												"src": "2931:357:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3337:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3394:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3403:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3406:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3396:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3396:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3396:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3360:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3385:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3367:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3367:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3357:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3357:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:43:17"
															},
															"nodeType": "YulIf",
															"src": "3347:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3330:5:17",
														"type": ""
													}
												],
												"src": "3294:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3474:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3484:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3506:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3493:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3484:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3549:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3522:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3452:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3460:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3468:5:17",
														"type": ""
													}
												],
												"src": "3422:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3633:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3679:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3681:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3681:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3681:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3654:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3663:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3675:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:32:17"
															},
															"nodeType": "YulIf",
															"src": "3643:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3772:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3787:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3791:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3816:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3851:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3862:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3847:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3847:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3871:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3826:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3826:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3816:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3603:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3614:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3626:6:17",
														"type": ""
													}
												],
												"src": "3567:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3930:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3947:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3940:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3940:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4047:4:17",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4037:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4037:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4061:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4061:15:17"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3902:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4145:62:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4179:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "4181:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4181:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4181:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4168:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4175:1:17",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4165:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4165:12:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4158:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:20:17"
															},
															"nodeType": "YulIf",
															"src": "4155:46:17"
														}
													]
												},
												"name": "validator_assert_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4138:5:17",
														"type": ""
													}
												],
												"src": "4088:119:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4272:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4282:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4293:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4282:7:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4340:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_NFT_CLASS_$1604",
																	"nodeType": "YulIdentifier",
																	"src": "4299:40:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4299:47:17"
														}
													]
												},
												"name": "cleanup_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4254:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4264:7:17",
														"type": ""
													}
												],
												"src": "4213:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:67:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4440:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4485:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_NFT_CLASS_$1604",
																	"nodeType": "YulIdentifier",
																	"src": "4453:31:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:38:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4440:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_NFT_CLASS_$1604_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4410:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4420:9:17",
														"type": ""
													}
												],
												"src": "4358:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:78:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4653:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_NFT_CLASS_$1604_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4610:42:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:49:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4598:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4598:62:17"
														}
													]
												},
												"name": "abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4576:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4583:3:17",
														"type": ""
													}
												],
												"src": "4503:163:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4790:144:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4800:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4812:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4808:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4800:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4900:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4924:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "4836:63:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4836:91:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4836:91:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_NFT_CLASS_$1604__to_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4762:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4774:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4785:4:17",
														"type": ""
													}
												],
												"src": "4672:262:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4983:43:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4993:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5008:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5015:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:16:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4993:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4965:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4975:7:17",
														"type": ""
													}
												],
												"src": "4940:86:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5101:51:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5118:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5139:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5123:15:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5123:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5111:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5111:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5111:35:17"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5089:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5096:3:17",
														"type": ""
													}
												],
												"src": "5032:120:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5260:128:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5270:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5282:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5278:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5270:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5354:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5363:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "5306:47:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:75:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5306:75:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5232:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5255:4:17",
														"type": ""
													}
												],
												"src": "5158:230:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5490:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5507:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5512:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5528:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5547:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5543:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5528:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5462:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5467:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5478:11:17",
														"type": ""
													}
												],
												"src": "5394:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5675:57:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5697:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5705:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5693:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5693:14:17"
																	},
																	{
																		"hexValue": "496e76616c696420636c617373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5709:15:17",
																		"type": "",
																		"value": "Invalid class"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5686:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:39:17"
														}
													]
												},
												"name": "store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5667:6:17",
														"type": ""
													}
												],
												"src": "5569:163:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5884:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5894:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5960:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5965:2:17",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5901:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5894:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6066:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																	"nodeType": "YulIdentifier",
																	"src": "5977:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6079:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6090:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6086:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6079:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5872:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5880:3:17",
														"type": ""
													}
												],
												"src": "5738:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6281:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6291:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6303:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6314:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6299:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6291:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6338:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6349:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6357:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6363:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6353:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6353:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6327:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6383:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6517:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6391:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6383:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6261:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6276:4:17",
														"type": ""
													}
												],
												"src": "6110:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6641:63:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6663:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6659:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6659:14:17"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e20636c617373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6675:21:17",
																		"type": "",
																		"value": "Invalid token class"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6652:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6652:45:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6652:45:17"
														}
													]
												},
												"name": "store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6633:6:17",
														"type": ""
													}
												],
												"src": "6535:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6856:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6866:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6932:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6937:2:17",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6873:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6866:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7038:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18",
																	"nodeType": "YulIdentifier",
																	"src": "6949:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6949:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7051:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7062:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7067:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7058:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7058:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7051:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6844:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6852:3:17",
														"type": ""
													}
												],
												"src": "6710:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7253:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7263:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7275:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7286:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7271:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7271:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7263:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7310:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7321:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7306:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7306:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7329:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7335:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7325:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7325:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7299:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7299:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7355:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7489:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7363:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7363:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7355:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7233:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7248:4:17",
														"type": ""
													}
												],
												"src": "7082:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7613:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7635:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7643:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7631:14:17"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7647:18:17",
																		"type": "",
																		"value": "Invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7624:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7624:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7605:6:17",
														"type": ""
													}
												],
												"src": "7507:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7825:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7835:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7901:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7906:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7842:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7842:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7835:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8007:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48",
																	"nodeType": "YulIdentifier",
																	"src": "7918:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7918:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7918:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8020:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8031:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8027:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8027:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8020:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7813:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7821:3:17",
														"type": ""
													}
												],
												"src": "7679:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8222:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8232:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8244:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8255:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8240:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8232:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8279:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8290:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8275:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8275:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8298:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8304:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8294:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8294:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8268:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8268:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8268:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8324:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8458:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8332:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8332:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8324:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8202:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8217:4:17",
														"type": ""
													}
												],
												"src": "8051:419:17"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_NFT_CLASS_$1604(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_NFT_CLASS_$1604(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_NFT_CLASS_$1604(value)\n    }\n\n    function abi_decode_tuple_t_enum$_NFT_CLASS_$1604(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_NFT_CLASS_$1604(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_NFT_CLASS_$1604(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_NFT_CLASS_$1604(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_NFT_CLASS_$1604(value)\n    }\n\n    function convert_t_enum$_NFT_CLASS_$1604_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_NFT_CLASS_$1604(value)\n    }\n\n    function abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack_library(value, pos) {\n        mstore(pos, convert_t_enum$_NFT_CLASS_$1604_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_NFT_CLASS_$1604__to_t_uint8__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid class\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token class\")\n\n    }\n\n    function abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EE58048 GT PUSH2 0x13A JUMPI DUP1 PUSH4 0xCA45F599 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0xED944CB6 GT PUSH2 0x86 JUMPI DUP1 PUSH4 0xED944CB6 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xEDA14323 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xF41DC7D2 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xF59528D2 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xFD642870 EQ PUSH2 0x6CD JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xCA45F599 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xCB937D2B EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xCFC2ABB7 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xDBDDB26A EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xE93E980B EQ PUSH2 0x625 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xBE8CA905 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xBE8CA905 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xBEB9E75E EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xBF0832AE EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xC244E88B EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xC525C0C8 EQ PUSH2 0x58F JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x9EE58048 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xA1BD4A07 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xA1D2002D EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA83179DB EQ PUSH2 0x4F9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x5E28C936 GT PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x828D481B GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x828D481B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x8D1DA411 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x8F5236E5 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x970F6E2F EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x971CBA96 EQ PUSH2 0x481 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x5E28C936 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x6871D79F EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x6B606F0F EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6E2F5A5F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x811D5C6C EQ PUSH2 0x3D9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x32A41506 GT PUSH2 0x20F JUMPI DUP1 PUSH4 0x32A41506 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x38D79B52 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x4E2ECCA1 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x58A0D923 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x5E09346A EQ PUSH2 0x331 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x10A309F3 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x11F47EB5 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x1AB7730C EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x1EB1A2D3 EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FF PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46B PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51F PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53D PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55B PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x579 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x597 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F1 PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60F PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62D PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67B PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x699 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B7 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7E DUP2 JUMP JUMPDEST PUSH2 0x273 DUP2 JUMP JUMPDEST PUSH2 0x618 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F6C6567656E642F6D6574616461746100000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB5 DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH8 0x16C2734F97A40000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F756E636F6D6D6F6E2F6D657461646174610000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x203A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI PUSH2 0x7D3 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x7E9 JUMPI PUSH8 0x16C2734F97A40000 SWAP1 POP PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7FD JUMPI PUSH2 0x7FC PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x810 JUMPI PUSH2 0x80F PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x825 JUMPI PUSH8 0x494654067E10000 SWAP1 POP PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x860 JUMPI PUSH7 0x2E2F6E5E148000 SWAP1 POP PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x89A JUMPI PUSH7 0xEA7AA67B2D0000 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP1 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F636F6D6D6F6E2F6D6574616461746100000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x7D DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x936 JUMPI PUSH2 0x935 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x948 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4865726F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B1 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6567656E640000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA1B JUMPI PUSH2 0xA1A PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5261726500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA71 JUMPI PUSH2 0xA70 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA84 JUMPI PUSH2 0xA83 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E636F6D6D6F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAEC JUMPI PUSH2 0xAEB PUSH2 0xF67 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F6D6D6F6E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB60 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0xC38 DUP2 JUMP JUMPDEST PUSH7 0xEA7AA67B2D0000 DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x7D0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH8 0x494654067E10000 DUP2 JUMP JUMPDEST PUSH7 0x2E2F6E5E148000 DUP2 JUMP JUMPDEST PUSH1 0x50 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F726172652F6D65746164617461000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x4E2 DUP2 JUMP JUMPDEST PUSH2 0x190 DUP2 JUMP JUMPDEST PUSH2 0x168A DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2F6865726F2F6D65746164617461000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F3C686173683E2F646F612F6E66740000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xC90 JUMPI POP PUSH1 0x19 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x19 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xCB7 JUMPI POP PUSH1 0x7E PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x7E PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI POP PUSH2 0x273 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x273 PUSH2 0xFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xD08 JUMPI POP PUSH2 0xC38 PUSH2 0xFFFF AND DUP3 LT JUMPDEST ISZERO PUSH2 0xD16 JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0xD68 JUMP JUMPDEST PUSH2 0xC38 PUSH2 0xFFFF AND DUP3 LT PUSH2 0xD2C JUMPI PUSH1 0x4 SWAP1 POP PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3C DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0xFA DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD92 PUSH2 0xD8D DUP4 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB0 DUP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xE3D DUP2 DUP6 PUSH2 0xDDC JUMP JUMPDEST SWAP4 POP PUSH2 0xE4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE56 DUP2 PUSH2 0xE17 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE7B DUP2 DUP5 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE96 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEDB DUP2 PUSH2 0xEBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF7 JUMPI PUSH2 0xEF6 PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF05 DUP5 DUP3 DUP6 ADD PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF17 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP2 EQ PUSH2 0xF22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF34 DUP2 PUSH2 0xF0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH2 0xF4F PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF5E DUP5 DUP3 DUP6 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xFB8 DUP3 PUSH2 0xF96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC8 DUP3 PUSH2 0xFAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD8 DUP2 PUSH2 0xFBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100F DUP2 PUSH2 0xFF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636C61737300000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 PUSH1 0xD DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 DUP3 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A6 DUP2 PUSH2 0x106A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20636C61737300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 PUSH1 0x13 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x10EE DUP3 PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1112 DUP2 PUSH2 0x10D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114F PUSH1 0x10 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x115A DUP3 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x117E DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x62E6D9F810008CF532599FA7A8FF39A064FAAA27845750E28FB4 SWAP14 0xB2 0xC8 DUP5 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "503:5569:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2216:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2271:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1753:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3185:59;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1704:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1140:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2590:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2107:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1195;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;940:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3311:63;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1803:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5324:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3380:59;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;997:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;834:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4697:619;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;888:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2330:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2723:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2160:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1559:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1088:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2658:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2791:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1450:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3250:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1306:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1505:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1618:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3124:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3060:57;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;781:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3747:944;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3641:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1398:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1248:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5912:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2216:49;2262:3;2216:49;:::o;2271:53::-;2321:3;2271:53;:::o;1753:44::-;1793:4;1753:44;:::o;3185:59::-;;;;;;;;;;;;;;;;;;;:::o;1704:43::-;1744:3;1704:43;:::o;1140:49::-;1187:2;1140:49;:::o;2590:53::-;2633:10;2590:53;:::o;2107:47::-;2153:1;2107:47;:::o;1195:::-;1240:2;1195:47;:::o;940:51::-;989:2;940:51;:::o;3311:63::-;;;;;;;;;;;;;;;;;;;:::o;1803:44::-;1843:4;1803:44;:::o;5324:582::-;5388:21;5436:16;5424:28;;;;;;;;:::i;:::-;;:8;:28;;;;;;;;:::i;:::-;;;5421:447;;2633:10;5467:45;;5421:447;;;5542:14;5530:26;;;;;;;;:::i;:::-;;:8;:26;;;;;;;;:::i;:::-;;;5527:341;;2699:10;5571:43;;5527:341;;;5644:18;5632:30;;;;;;;;:::i;:::-;;:8;:30;;;;;;;;:::i;:::-;;;5629:239;;2836:11;5677:47;;5629:239;;;5754:16;5742:28;;;;;;;;:::i;:::-;;:8;:28;;;;;;;;:::i;:::-;;;5739:129;;2766:11;5785:45;;5739:129;;;5845:23;;;;;;;;;;:::i;:::-;;;;;;;;5739:129;5629:239;5527:341;5421:447;5324:582;;;:::o;3380:59::-;;;;;;;;;;;;;;;;;;;:::o;997:50::-;1044:3;997:50;:::o;834:48::-;881:1;834:48;:::o;4697:619::-;4760:28;4825:14;4813:26;;;;;;;;:::i;:::-;;:8;:26;;;;;;;;:::i;:::-;;;4809:500;;4855:23;;;;;;;;;;;;;;;;;;;4809:500;;;4911:16;4899:28;;;;;;;;:::i;:::-;;:8;:28;;;;;;;;:::i;:::-;;;4895:414;;4943:25;;;;;;;;;;;;;;;;;;;4895:414;;;5001:14;4989:26;;;;;;;;:::i;:::-;;:8;:26;;;;;;;;:::i;:::-;;;4985:324;;5031:23;;;;;;;;;;;;;;;;;;;4985:324;;;5087:18;5075:30;;;;;;;;:::i;:::-;;:8;:30;;;;;;;;:::i;:::-;;;5071:238;;5121:27;;;;;;;;;;;;;;;;;;;5071:238;;;5181:16;5169:28;;;;;;;;:::i;:::-;;:8;:28;;;;;;;;:::i;:::-;;;5165:144;;5213:25;;;;;;;;;;;;;;;;;;;5165:144;;;5269:29;;;;;;;;;;:::i;:::-;;;;;;;;5165:144;5071:238;4985:324;4895:414;4809:500;4697:619;;;:::o;888:46::-;933:1;888:46;:::o;2330:52::-;2378:4;2330:52;:::o;2723:54::-;2766:11;2723:54;:::o;2160:50::-;2208:2;2160:50;:::o;1559:53::-;1608:4;1559:53;:::o;1088:46::-;1133:1;1088:46;:::o;2658:51::-;2699:10;2658:51;:::o;2791:56::-;2836:11;2791:56;:::o;1450:49::-;1497:2;1450:49;:::o;3250:55::-;;;;;;;;;;;;;;;;;;;:::o;1306:51::-;1353:4;1306:51;:::o;1505:48::-;1550:3;1505:48;:::o;1618:51::-;1665:4;1618:51;:::o;3124:55::-;;;;;;;;;;;;;;;;;;;:::o;3060:57::-;;;;;;;;;;;;;;;;;;;:::o;781:47::-;826:2;781:47;:::o;3747:944::-;3813:20;2153:1;3858:44;;:7;:44;;:93;;;;;2208:2;3906:45;;:7;:45;3858:93;3854:803;;;3980:14;3967:27;;3854:803;;;2208:2;4015:46;;:7;:46;;:93;;;;;2262:3;4065:43;;:7;:43;4015:93;4011:646;;;4137:16;4124:29;;4011:646;;;2262:3;4174:44;;:7;:44;;:95;;;;;2321:3;4222:47;;:7;:47;4174:95;4170:487;;;4298:14;4285:27;;4170:487;;;2321:3;4333:48;;:7;:48;;:97;;;;;2378:4;4385:45;;:7;:45;4333:97;4329:328;;;4459:18;4446:31;;4329:328;;;2378:4;4498:46;;:7;:46;4494:163;;4573:16;4560:29;;4494:163;;;4620:26;;;;;;;;;;:::i;:::-;;;;;;;;4494:163;4329:328;4170:487;4011:646;3854:803;3747:944;;;:::o;3641:49::-;3688:2;3641:49;:::o;1398:46::-;1443:1;1398:46;:::o;1248:52::-;1297:3;1248:52;:::o;5912:157::-;5979:23;6021:41;6034:27;6053:7;6034:18;:27::i;:::-;6021:12;:41::i;:::-;6014:48;;5912:157;;;:::o;7:89:17:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:123::-;195:23;212:5;195:23;:::i;:::-;190:3;183:36;102:123;;:::o;231:234::-;330:4;368:2;357:9;353:18;345:26;;381:77;455:1;444:9;440:17;431:6;381:77;:::i;:::-;231:234;;;;:::o;471:99::-;523:6;557:5;551:12;541:22;;471:99;;;:::o;576:177::-;668:11;702:6;697:3;690:19;742:4;737:3;733:14;718:29;;576:177;;;;:::o;759:246::-;840:1;850:113;864:6;861:1;858:13;850:113;;;949:1;944:3;940:11;934:18;930:1;925:3;921:11;914:39;886:2;883:1;879:10;874:15;;850:113;;;997:1;988:6;983:3;979:16;972:27;821:184;759:246;;;:::o;1011:102::-;1052:6;1103:2;1099:7;1094:2;1087:5;1083:14;1079:28;1069:38;;1011:102;;;:::o;1119:393::-;1215:3;1243:39;1276:5;1243:39;:::i;:::-;1298:79;1370:6;1365:3;1298:79;:::i;:::-;1291:86;;1386:65;1444:6;1439:3;1432:4;1425:5;1421:16;1386:65;:::i;:::-;1476:29;1498:6;1476:29;:::i;:::-;1471:3;1467:39;1460:46;;1219:293;1119:393;;;;:::o;1518:329::-;1639:4;1677:2;1666:9;1662:18;1654:26;;1726:9;1720:4;1716:20;1712:1;1701:9;1697:17;1690:47;1754:86;1835:4;1826:6;1754:86;:::i;:::-;1746:94;;1518:329;;;;:::o;1853:77::-;1890:7;1919:5;1908:16;;1853:77;;;:::o;1936:126::-;2031:24;2049:5;2031:24;:::i;:::-;2026:3;2019:37;1936:126;;:::o;2068:238::-;2169:4;2207:2;2196:9;2192:18;2184:26;;2220:79;2296:1;2285:9;2281:17;2272:6;2220:79;:::i;:::-;2068:238;;;;:::o;2393:117::-;2502:1;2499;2492:12;2639:113;2726:1;2719:5;2716:12;2706:40;;2742:1;2739;2732:12;2706:40;2639:113;:::o;2758:167::-;2818:5;2856:6;2843:20;2834:29;;2872:47;2913:5;2872:47;:::i;:::-;2758:167;;;;:::o;2931:357::-;3004:6;3053:2;3041:9;3032:7;3028:23;3024:32;3021:119;;;3059:79;;:::i;:::-;3021:119;3179:1;3204:67;3263:7;3254:6;3243:9;3239:22;3204:67;:::i;:::-;3194:77;;3150:131;2931:357;;;;:::o;3294:122::-;3367:24;3385:5;3367:24;:::i;:::-;3360:5;3357:35;3347:63;;3406:1;3403;3396:12;3347:63;3294:122;:::o;3422:139::-;3468:5;3506:6;3493:20;3484:29;;3522:33;3549:5;3522:33;:::i;:::-;3422:139;;;;:::o;3567:329::-;3626:6;3675:2;3663:9;3654:7;3650:23;3646:32;3643:119;;;3681:79;;:::i;:::-;3643:119;3801:1;3826:53;3871:7;3862:6;3851:9;3847:22;3826:53;:::i;:::-;3816:63;;3772:117;3567:329;;;;:::o;3902:180::-;3950:77;3947:1;3940:88;4047:4;4044:1;4037:15;4071:4;4068:1;4061:15;4088:119;4175:1;4168:5;4165:12;4155:46;;4181:18;;:::i;:::-;4155:46;4088:119;:::o;4213:139::-;4264:7;4293:5;4282:16;;4299:47;4340:5;4299:47;:::i;:::-;4213:139;;;:::o;4358:::-;4420:9;4453:38;4485:5;4453:38;:::i;:::-;4440:51;;4358:139;;;:::o;4503:163::-;4610:49;4653:5;4610:49;:::i;:::-;4605:3;4598:62;4503:163;;:::o;4672:262::-;4785:4;4823:2;4812:9;4808:18;4800:26;;4836:91;4924:1;4913:9;4909:17;4900:6;4836:91;:::i;:::-;4672:262;;;;:::o;4940:86::-;4975:7;5015:4;5008:5;5004:16;4993:27;;4940:86;;;:::o;5032:120::-;5123:22;5139:5;5123:22;:::i;:::-;5118:3;5111:35;5032:120;;:::o;5158:230::-;5255:4;5293:2;5282:9;5278:18;5270:26;;5306:75;5378:1;5367:9;5363:17;5354:6;5306:75;:::i;:::-;5158:230;;;;:::o;5394:169::-;5478:11;5512:6;5507:3;5500:19;5552:4;5547:3;5543:14;5528:29;;5394:169;;;;:::o;5569:163::-;5709:15;5705:1;5697:6;5693:14;5686:39;5569:163;:::o;5738:366::-;5880:3;5901:67;5965:2;5960:3;5901:67;:::i;:::-;5894:74;;5977:93;6066:3;5977:93;:::i;:::-;6095:2;6090:3;6086:12;6079:19;;5738:366;;;:::o;6110:419::-;6276:4;6314:2;6303:9;6299:18;6291:26;;6363:9;6357:4;6353:20;6349:1;6338:9;6334:17;6327:47;6391:131;6517:4;6391:131;:::i;:::-;6383:139;;6110:419;;;:::o;6535:169::-;6675:21;6671:1;6663:6;6659:14;6652:45;6535:169;:::o;6710:366::-;6852:3;6873:67;6937:2;6932:3;6873:67;:::i;:::-;6866:74;;6949:93;7038:3;6949:93;:::i;:::-;7067:2;7062:3;7058:12;7051:19;;6710:366;;;:::o;7082:419::-;7248:4;7286:2;7275:9;7271:18;7263:26;;7335:9;7329:4;7325:20;7321:1;7310:9;7306:17;7299:47;7363:131;7489:4;7363:131;:::i;:::-;7355:139;;7082:419;;;:::o;7507:166::-;7647:18;7643:1;7635:6;7631:14;7624:42;7507:166;:::o;7679:366::-;7821:3;7842:67;7906:2;7901:3;7842:67;:::i;:::-;7835:74;;7918:93;8007:3;7918:93;:::i;:::-;8036:2;8031:3;8027:12;8020:19;;7679:366;;;:::o;8051:419::-;8217:4;8255:2;8244:9;8240:18;8232:26;;8304:9;8298:4;8294:20;8290:1;8279:9;8275:17;8268:47;8332:131;8458:4;8332:131;:::i;:::-;8324:139;;8051:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "907800",
								"executionCost": "970",
								"totalCost": "908770"
							},
							"external": {
								"BASE_COMMON_URI()": "infinite",
								"BASE_HERO_URI()": "infinite",
								"BASE_LEGEND_URI()": "infinite",
								"BASE_RARE_URI()": "infinite",
								"BASE_UNCOMMON_URI()": "infinite",
								"BASE_URI()": "infinite",
								"COMMON_NFT_PRICE()": "359",
								"COMMON_NFT_START_INDEX()": "452",
								"COMMON_NFT_SUPPLY_1st()": "364",
								"COMMON_NFT_SUPPLY_2nd()": "452",
								"COMMON_NFT_SUPPLY_3rd()": "386",
								"HERO_NFT_START_INDEX()": "431",
								"HERO_NFT_SUPPLY_1st()": "452",
								"HERO_NFT_SUPPLY_2nd()": "431",
								"HERO_NFT_SUPPLY_3rd()": "407",
								"LEGEND_NFT_PRICE()": "403",
								"LEGEND_NFT_START_INDEX()": "387",
								"LEGEND_NFT_SUPPLY_1st()": "386",
								"LEGEND_NFT_SUPPLY_2nd()": "387",
								"LEGEND_NFT_SUPPLY_3rd()": "408",
								"NFT_SUPPLY_1st()": "365",
								"NFT_SUPPLY_2nd()": "410",
								"NFT_SUPPLY_3rd()": "409",
								"PUBLIC_FUND_PERCENTAGE()": "385",
								"RARE_NFT_PRICE()": "358",
								"RARE_NFT_START_INDEX()": "366",
								"RARE_NFT_SUPPLY_1st()": "430",
								"RARE_NFT_SUPPLY_2nd()": "453",
								"RARE_NFT_SUPPLY_3rd()": "364",
								"UNCOMMON_NFT_PRICE()": "380",
								"UNCOMMON_NFT_START_INDEX()": "388",
								"UNCOMMON_NFT_SUPPLY_1st()": "365",
								"UNCOMMON_NFT_SUPPLY_2nd()": "429",
								"UNCOMMON_NFT_SUPPLY_3rd()": "409",
								"getClassForTokenId(uint256)": "1057",
								"getClassName(NFT_CLASS)": "infinite",
								"getClassPrice(NFT_CLASS)": "1050",
								"testClassForTokenId(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6072,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207962e6d9f810008cf532599fa7a8ff39a064faaa27845750e28fb49db2c8845d64736f6c63430008130033",
									".code": [
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "9EE58048"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "CA45F599"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "ED944CB6"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "ED944CB6"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "EDA14323"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "F41DC7D2"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "F59528D2"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "FD642870"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "CA45F599"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "CB937D2B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "CFC2ABB7"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "DBDDB26A"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "E93E980B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "BE8CA905"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "BE8CA905"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "BEB9E75E"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "BF0832AE"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "C244E88B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "C525C0C8"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "9EE58048"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "A1BD4A07"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "A1D2002D"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "A83179DB"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "5E28C936"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "828D481B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "828D481B"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "8D1DA411"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "8F5236E5"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "970F6E2F"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "971CBA96"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "5E28C936"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "6871D79F"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "6B606F0F"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "6E2F5A5F"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "811D5C6C"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "32A41506"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "32A41506"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "38D79B52"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "4E2ECCA1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "58A0D923"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "5E09346A"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "10A309F3"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "11F47EB5"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "1AB7730C"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "1EB1A2D3"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6072,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2216,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2216,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2271,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2271,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1753,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1753,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3185,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3185,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1704,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1140,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1140,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2590,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2590,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2107,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2107,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1195,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1195,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 940,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 940,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 3311,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3311,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1803,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1803,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5324,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5324,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 5324,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3380,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3380,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 997,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 997,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 834,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 834,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4697,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4697,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4697,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 888,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 888,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2330,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2330,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 2723,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2723,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2160,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2160,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1559,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1559,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 1088,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1088,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2658,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2658,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2791,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2791,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1450,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1450,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3250,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1306,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1306,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1505,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1505,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1618,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1618,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3124,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3124,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3060,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3060,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 781,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 781,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3747,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3747,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3747,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3641,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3641,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1398,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1398,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1248,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1248,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5912,
											"end": 6069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5912,
											"end": 6069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5912,
											"end": 6069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 11,
											"value": "7E"
										},
										{
											"begin": 2216,
											"end": 2265,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1793,
											"end": 1797,
											"name": "PUSH",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "2F6C6567656E642F6D6574616461746100000000000000000000000000000000"
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3185,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1744,
											"end": 1747,
											"name": "PUSH",
											"source": 11,
											"value": "B5"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1140,
											"end": 1189,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2643,
											"name": "PUSH",
											"source": 11,
											"value": "16C2734F97A40000"
										},
										{
											"begin": 2590,
											"end": 2643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2154,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1195,
											"end": 1242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 940,
											"end": 991,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "PUSH",
											"source": 11,
											"value": "2F756E636F6D6D6F6E2F6D657461646174610000000000000000000000000000"
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1847,
											"name": "PUSH",
											"source": 11,
											"value": "203A"
										},
										{
											"begin": 1803,
											"end": 1847,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5388,
											"end": 5409,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5452,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5424,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5432,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5424,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5452,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2643,
											"name": "PUSH",
											"source": 11,
											"value": "16C2734F97A40000"
										},
										{
											"begin": 5467,
											"end": 5512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5467,
											"end": 5512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5556,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5530,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5538,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5530,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5556,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2709,
											"name": "PUSH",
											"source": 11,
											"value": "494654067E10000"
										},
										{
											"begin": 5571,
											"end": 5614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5571,
											"end": 5614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5632,
											"end": 5662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5640,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5632,
											"end": 5662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "PUSH",
											"source": 11,
											"value": "2E2F6E5E148000"
										},
										{
											"begin": 5677,
											"end": 5724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5677,
											"end": 5724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5770,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5742,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5742,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5770,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "PUSH",
											"source": 11,
											"value": "EA7AA67B2D0000"
										},
										{
											"begin": 5785,
											"end": 5830,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 5845,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 5739,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5629,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5527,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5421,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "2F636F6D6D6F6E2F6D6574616461746100000000000000000000000000000000"
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 1047,
											"name": "PUSH",
											"source": 11,
											"value": "7D"
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 834,
											"end": 882,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 834,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4788,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4825,
											"end": 4839,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4813,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4821,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4813,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4839,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "PUSH",
											"source": 11,
											"value": "4865726F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4911,
											"end": 4927,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4899,
											"end": 4927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4907,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4899,
											"end": 4927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4927,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "PUSH",
											"source": 11,
											"value": "4C6567656E640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 4968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5015,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4989,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4989,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4989,
											"end": 5015,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "PUSH",
											"source": 11,
											"value": "5261726500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5075,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5075,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5105,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "PUSH",
											"source": 11,
											"value": "556E636F6D6D6F6E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5181,
											"end": 5197,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5169,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5177,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5169,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5197,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "PUSH",
											"source": 11,
											"value": "436F6D6D6F6E0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 5269,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5165,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5071,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 4985,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4895,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4809,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 5316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 933,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 888,
											"end": 934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 888,
											"end": 934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 11,
											"value": "C38"
										},
										{
											"begin": 2330,
											"end": 2382,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "PUSH",
											"source": 11,
											"value": "EA7AA67B2D0000"
										},
										{
											"begin": 2723,
											"end": 2777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2723,
											"end": 2777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 2160,
											"end": 2210,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1608,
											"end": 1612,
											"name": "PUSH",
											"source": 11,
											"value": "7D0"
										},
										{
											"begin": 1559,
											"end": 1612,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2709,
											"name": "PUSH",
											"source": 11,
											"value": "494654067E10000"
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "PUSH",
											"source": 11,
											"value": "2E2F6E5E148000"
										},
										{
											"begin": 2791,
											"end": 2847,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1499,
											"name": "PUSH",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1450,
											"end": 1499,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "2F726172652F6D65746164617461000000000000000000000000000000000000"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "PUSH",
											"source": 11,
											"value": "4E2"
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1550,
											"end": 1553,
											"name": "PUSH",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1665,
											"end": 1669,
											"name": "PUSH",
											"source": 11,
											"value": "168A"
										},
										{
											"begin": 1618,
											"end": 1669,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "2F6865726F2F6D65746164617461000000000000000000000000000000000000"
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "697066733A2F2F3C686173683E2F646F612F6E66740000000000000000000000"
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 781,
											"end": 828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 781,
											"end": 828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3902,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 3858,
											"end": 3902,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3865,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3902,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3902,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3858,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 3994,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3994,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3994,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 4015,
											"end": 4061,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 4015,
											"end": 4061,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4022,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4061,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4061,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 11,
											"value": "7E"
										},
										{
											"begin": 4065,
											"end": 4108,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 4065,
											"end": 4108,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4065,
											"end": 4108,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4015,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4153,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 11,
											"value": "7E"
										},
										{
											"begin": 4174,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 4174,
											"end": 4218,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4218,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4218,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 4222,
											"end": 4269,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 4222,
											"end": 4269,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4222,
											"end": 4229,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4222,
											"end": 4269,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4174,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4312,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4285,
											"end": 4312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4285,
											"end": 4312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 4333,
											"end": 4381,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 4333,
											"end": 4381,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4381,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4381,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 11,
											"value": "C38"
										},
										{
											"begin": 4385,
											"end": 4430,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 4385,
											"end": 4430,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4385,
											"end": 4430,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4333,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4446,
											"end": 4477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4446,
											"end": 4477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 11,
											"value": "C38"
										},
										{
											"begin": 4498,
											"end": 4544,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 4498,
											"end": 4544,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4498,
											"end": 4505,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4498,
											"end": 4544,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4573,
											"end": 4589,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4560,
											"end": 4589,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4560,
											"end": 4589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 4620,
											"end": 4646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4646,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 4494,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4329,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4170,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4011,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3854,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 4691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3690,
											"name": "PUSH",
											"source": 11,
											"value": "3C"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1398,
											"end": 1444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1297,
											"end": 1300,
											"name": "PUSH",
											"source": 11,
											"value": "FA"
										},
										{
											"begin": 1248,
											"end": 1300,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5979,
											"end": 6002,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6021,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6034,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 6053,
											"end": 6060,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 6034,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6034,
											"end": 6061,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 6034,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 6021,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6062,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6021,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 6069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 96,
											"name": "tag",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 7,
											"end": 96,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 17,
											"value": "FFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 72,
											"end": 90,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 61,
											"end": 90,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 61,
											"end": 90,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 96,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 96,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 102,
											"end": 225,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 102,
											"end": 225,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 195,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 212,
											"end": 217,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 195,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 195,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 195,
											"end": 218,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 195,
											"end": 218,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 190,
											"end": 193,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 183,
											"end": 219,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 102,
											"end": 225,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 102,
											"end": 225,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 102,
											"end": 225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 231,
											"end": 465,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 231,
											"end": 465,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 330,
											"end": 334,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 370,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 353,
											"end": 371,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 345,
											"end": 371,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 381,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 455,
											"end": 456,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 453,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 440,
											"end": 457,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 431,
											"end": 437,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 381,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 381,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 381,
											"end": 458,
											"name": "tag",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 381,
											"end": 458,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 231,
											"end": 465,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 231,
											"end": 465,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 231,
											"end": 465,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 231,
											"end": 465,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 231,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 471,
											"end": 570,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 471,
											"end": 570,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 523,
											"end": 529,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 563,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 541,
											"end": 563,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 541,
											"end": 563,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 471,
											"end": 570,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 471,
											"end": 570,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 471,
											"end": 570,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 471,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 576,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 668,
											"end": 679,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 708,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 697,
											"end": 700,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 690,
											"end": 709,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 742,
											"end": 746,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 740,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 733,
											"end": 747,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 718,
											"end": 747,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 718,
											"end": 747,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 753,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 864,
											"end": 870,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 861,
											"end": 862,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 858,
											"end": 871,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 850,
											"end": 963,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 850,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 949,
											"end": 950,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 944,
											"end": 947,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 940,
											"end": 951,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 934,
											"end": 952,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 925,
											"end": 928,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 921,
											"end": 932,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 914,
											"end": 953,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 886,
											"end": 888,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 879,
											"end": 889,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 874,
											"end": 889,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 874,
											"end": 889,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 850,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 850,
											"end": 963,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 850,
											"end": 963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 997,
											"end": 998,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 979,
											"end": 995,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 972,
											"end": 999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 821,
											"end": 1005,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 1005,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 1005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1094,
											"end": 1096,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1083,
											"end": 1097,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1079,
											"end": 1107,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1107,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1011,
											"end": 1113,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1011,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1215,
											"end": 1218,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 1276,
											"end": 1281,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1243,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 1243,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1243,
											"end": 1282,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 1243,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1298,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1365,
											"end": 1368,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1298,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 1298,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1298,
											"end": 1377,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 1298,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1291,
											"end": 1377,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1291,
											"end": 1377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1386,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1439,
											"end": 1442,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1432,
											"end": 1436,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1430,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1437,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1386,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 1386,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1386,
											"end": 1451,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 1386,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1476,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1476,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 1476,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1476,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 1476,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1467,
											"end": 1506,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1460,
											"end": 1506,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1460,
											"end": 1506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1219,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1119,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1119,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1639,
											"end": 1643,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1662,
											"end": 1680,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1654,
											"end": 1680,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1726,
											"end": 1735,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1716,
											"end": 1736,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1710,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1697,
											"end": 1714,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1737,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 1835,
											"end": 1839,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 1754,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1754,
											"end": 1840,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 1754,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1840,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1890,
											"end": 1897,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1924,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1924,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1853,
											"end": 1930,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1853,
											"end": 1930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1936,
											"end": 2062,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 1936,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2031,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2019,
											"end": 2056,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1936,
											"end": 2062,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1936,
											"end": 2062,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1936,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "tag",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2169,
											"end": 2173,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2209,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2205,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2184,
											"end": 2210,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2184,
											"end": 2210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2220,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2220,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 2220,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2220,
											"end": 2299,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 2220,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2306,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2393,
											"end": 2510,
											"name": "tag",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 2393,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2752,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 2639,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2719,
											"end": 2724,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2706,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 2706,
											"end": 2746,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2742,
											"end": 2743,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2732,
											"end": 2744,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2706,
											"end": 2746,
											"name": "tag",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 2706,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2639,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "tag",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2818,
											"end": 2823,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 2872,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2919,
											"name": "tag",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 2872,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2758,
											"end": 2925,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2758,
											"end": 2925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "tag",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3055,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3050,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3024,
											"end": 3056,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 3059,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 3059,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3138,
											"name": "tag",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 3059,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "tag",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 3021,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 3263,
											"end": 3270,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3239,
											"end": 3261,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3204,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 3204,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3204,
											"end": 3271,
											"name": "tag",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 3204,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3150,
											"end": 3281,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2931,
											"end": 3288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2931,
											"end": 3288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "tag",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 3367,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "tag",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3360,
											"end": 3365,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3357,
											"end": 3392,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "tag",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 3347,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3294,
											"end": 3416,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3294,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "tag",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3493,
											"end": 3513,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3484,
											"end": 3513,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3484,
											"end": 3513,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 3522,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "tag",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "tag",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3626,
											"end": 3632,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3654,
											"end": 3661,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3650,
											"end": 3673,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3681,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 3681,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 3681,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3681,
											"end": 3760,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 3681,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "tag",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 3643,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 3871,
											"end": 3878,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3847,
											"end": 3869,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3826,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 3826,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3826,
											"end": 3879,
											"name": "tag",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 3826,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3879,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3772,
											"end": 3889,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3567,
											"end": 3896,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3567,
											"end": 3896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3902,
											"end": 4082,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 3902,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 4027,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 4028,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4047,
											"end": 4051,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4037,
											"end": 4052,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4076,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4088,
											"end": 4207,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4088,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4175,
											"end": 4176,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4168,
											"end": 4173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4165,
											"end": 4177,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4155,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 4155,
											"end": 4201,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 4181,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 4181,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4155,
											"end": 4201,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 4155,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4088,
											"end": 4207,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4088,
											"end": 4207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "tag",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4282,
											"end": 4298,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4282,
											"end": 4298,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 4340,
											"end": 4345,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4299,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 4299,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4213,
											"end": 4352,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4213,
											"end": 4352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "tag",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 4485,
											"end": 4490,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4453,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 4453,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4453,
											"end": 4491,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 4453,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4491,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4440,
											"end": 4491,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4666,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 4503,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4610,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 4653,
											"end": 4658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4610,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 4610,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4610,
											"end": 4659,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 4610,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4598,
											"end": 4660,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4666,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4666,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4785,
											"end": 4789,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4812,
											"end": 4821,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4800,
											"end": 4826,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4800,
											"end": 4826,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4836,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4909,
											"end": 4926,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4836,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 4836,
											"end": 4927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4836,
											"end": 4927,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 4836,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4672,
											"end": 4934,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4672,
											"end": 4934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5019,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 5008,
											"end": 5013,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5004,
											"end": 5020,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4940,
											"end": 5026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4940,
											"end": 5026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5032,
											"end": 5152,
											"name": "tag",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 5032,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 5123,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "tag",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 5123,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5118,
											"end": 5121,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5111,
											"end": 5146,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5032,
											"end": 5152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5032,
											"end": 5152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5032,
											"end": 5152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5255,
											"end": 5259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5306,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 5378,
											"end": 5379,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5363,
											"end": 5380,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5354,
											"end": 5360,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5306,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 5306,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5306,
											"end": 5381,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 5306,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5388,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "tag",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5478,
											"end": 5489,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5518,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5507,
											"end": 5510,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5500,
											"end": 5519,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5552,
											"end": 5556,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5550,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5543,
											"end": 5557,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5528,
											"end": 5557,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5528,
											"end": 5557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5394,
											"end": 5563,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5394,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5569,
											"end": 5732,
											"name": "tag",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 5569,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5709,
											"end": 5724,
											"name": "PUSH",
											"source": 17,
											"value": "496E76616C696420636C61737300000000000000000000000000000000000000"
										},
										{
											"begin": 5705,
											"end": 5706,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5693,
											"end": 5707,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5686,
											"end": 5725,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5569,
											"end": 5732,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5569,
											"end": 5732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5880,
											"end": 5883,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 5960,
											"end": 5963,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 5901,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "tag",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5894,
											"end": 5968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5894,
											"end": 5968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 5977,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6095,
											"end": 6097,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6093,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5738,
											"end": 6104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6353,
											"end": 6373,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6334,
											"end": 6351,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6327,
											"end": 6374,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 6391,
											"end": 6522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "tag",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6522,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6522,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6110,
											"end": 6529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6535,
											"end": 6704,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 6535,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6675,
											"end": 6696,
											"name": "PUSH",
											"source": 17,
											"value": "496E76616C696420746F6B656E20636C61737300000000000000000000000000"
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6659,
											"end": 6673,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6652,
											"end": 6697,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6535,
											"end": 6704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6535,
											"end": 6704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6852,
											"end": 6855,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 6937,
											"end": 6939,
											"name": "PUSH",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 6932,
											"end": 6935,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 6873,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6866,
											"end": 6940,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6866,
											"end": 6940,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6949,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6949,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 6949,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6949,
											"end": 7042,
											"name": "tag",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 6949,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7067,
											"end": 7069,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7065,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7058,
											"end": 7070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7051,
											"end": 7070,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7051,
											"end": 7070,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6710,
											"end": 7076,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6710,
											"end": 7076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "tag",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7248,
											"end": 7252,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7263,
											"end": 7289,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7263,
											"end": 7289,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7329,
											"end": 7333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7325,
											"end": 7345,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7306,
											"end": 7323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7299,
											"end": 7346,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7363,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7363,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 7363,
											"end": 7494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7363,
											"end": 7494,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 7363,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7355,
											"end": 7494,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7355,
											"end": 7494,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7082,
											"end": 7501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7082,
											"end": 7501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7507,
											"end": 7673,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 7507,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "PUSH",
											"source": 17,
											"value": "496E76616C696420746F6B656E20494400000000000000000000000000000000"
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7641,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7631,
											"end": 7645,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7624,
											"end": 7666,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7507,
											"end": 7673,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7507,
											"end": 7673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "tag",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7821,
											"end": 7824,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 7906,
											"end": 7908,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 7901,
											"end": 7904,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7842,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 7842,
											"end": 7909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7842,
											"end": 7909,
											"name": "tag",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 7842,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7835,
											"end": 7909,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7835,
											"end": 7909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 8007,
											"end": 8010,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 7918,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 8011,
											"name": "tag",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 7918,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8036,
											"end": 8038,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8031,
											"end": 8034,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8027,
											"end": 8039,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8020,
											"end": 8039,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8020,
											"end": 8039,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7679,
											"end": 8045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7679,
											"end": 8045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "tag",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8217,
											"end": 8221,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8255,
											"end": 8257,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8244,
											"end": 8253,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8240,
											"end": 8258,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8232,
											"end": 8258,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8232,
											"end": 8258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8304,
											"end": 8313,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8298,
											"end": 8302,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8294,
											"end": 8314,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8288,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8268,
											"end": 8315,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8332,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 8458,
											"end": 8462,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8332,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 8332,
											"end": 8463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8332,
											"end": 8463,
											"name": "tag",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 8332,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8324,
											"end": 8463,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8324,
											"end": 8463,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8051,
											"end": 8470,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8051,
											"end": 8470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"TokenMinter.sol",
								"iDoACollection.sol",
								"iMemberRegistry.sol",
								"iTokenMinter.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BASE_COMMON_URI()": "811d5c6c",
							"BASE_HERO_URI()": "cfc2abb7",
							"BASE_LEGEND_URI()": "1eb1a2d3",
							"BASE_RARE_URI()": "c244e88b",
							"BASE_UNCOMMON_URI()": "6871d79f",
							"BASE_URI()": "dbddb26a",
							"COMMON_NFT_PRICE()": "9ee58048",
							"COMMON_NFT_START_INDEX()": "971cba96",
							"COMMON_NFT_SUPPLY_1st()": "828d481b",
							"COMMON_NFT_SUPPLY_2nd()": "c525c0c8",
							"COMMON_NFT_SUPPLY_3rd()": "cb937d2b",
							"HERO_NFT_START_INDEX()": "58a0d923",
							"HERO_NFT_SUPPLY_1st()": "e93e980b",
							"HERO_NFT_SUPPLY_2nd()": "a83179db",
							"HERO_NFT_SUPPLY_3rd()": "f41dc7d2",
							"LEGEND_NFT_PRICE()": "4e2ecca1",
							"LEGEND_NFT_START_INDEX()": "a1bd4a07",
							"LEGEND_NFT_SUPPLY_1st()": "8d1da411",
							"LEGEND_NFT_SUPPLY_2nd()": "38d79b52",
							"LEGEND_NFT_SUPPLY_3rd()": "bf0832ae",
							"NFT_SUPPLY_1st()": "32a41506",
							"NFT_SUPPLY_2nd()": "1ab7730c",
							"NFT_SUPPLY_3rd()": "6b606f0f",
							"PUBLIC_FUND_PERCENTAGE()": "eda14323",
							"RARE_NFT_PRICE()": "be8ca905",
							"RARE_NFT_START_INDEX()": "10a309f3",
							"RARE_NFT_SUPPLY_1st()": "970f6e2f",
							"RARE_NFT_SUPPLY_2nd()": "5e09346a",
							"RARE_NFT_SUPPLY_3rd()": "ca45f599",
							"UNCOMMON_NFT_PRICE()": "beb9e75e",
							"UNCOMMON_NFT_START_INDEX()": "11f47eb5",
							"UNCOMMON_NFT_SUPPLY_1st()": "5e28c936",
							"UNCOMMON_NFT_SUPPLY_2nd()": "f59528d2",
							"UNCOMMON_NFT_SUPPLY_3rd()": "a1d2002d",
							"getClassForTokenId(uint256)": "ed944cb6",
							"getClassName(NFT_CLASS)": "8f5236e5",
							"getClassPrice(NFT_CLASS)": "6e2f5a5f",
							"testClassForTokenId(uint256)": "fd642870"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BASE_COMMON_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_HERO_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_LEGEND_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_RARE_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_UNCOMMON_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMON_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HERO_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HERO_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HERO_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HERO_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGEND_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_FUND_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RARE_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_START_INDEX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_SUPPLY_1st\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_SUPPLY_2nd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNCOMMON_NFT_SUPPLY_3rd\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getClassForTokenId\",\"outputs\":[{\"internalType\":\"enum NFT_CLASS\",\"name\":\"tokenClass\",\"type\":\"NFT_CLASS\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum NFT_CLASS\",\"name\":\"nftClass\",\"type\":\"NFT_CLASS\"}],\"name\":\"getClassName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenClassName\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum NFT_CLASS\",\"name\":\"nftClass\",\"type\":\"NFT_CLASS\"}],\"name\":\"getClassPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"classNFTPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"testClassForTokenId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"className\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DoAConstants.sol\":\"DoAConstants\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DoAConstants.sol\":{\"keccak256\":\"0x55ef434cacc5cd41d8486e375d92253c3913cdb336e50e55edcd3de5830ff473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0342dc7329e66b28652792f33a5d20303f17eec9f15748ff06d80a76627d513a\",\"dweb:/ipfs/QmNTJfJi3qicRCRx1h43spbvfmkqpfJdprTiC3X8rwtNDn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenMinter.sol": {
				"TokenMinter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "doaCollectionAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "treasuryAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "memberRegistryAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_areHerosMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_commonNFTsMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_heroNFTsMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_is1stPublicRoundUnlocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_is2ndPublicRoundUnlocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_is3rdPublicRoundUnlocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_legendNFTsMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_rareNFTsMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_uncommonNFTsMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "addAuthorizedContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								},
								{
									"internalType": "enum NFT_CLASS",
									"name": "classToMint",
									"type": "uint8"
								}
							],
							"name": "getMintIndexRange",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "mintStartIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mintEndIndex",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								}
							],
							"name": "mintCommon",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								}
							],
							"name": "mintCommons",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								}
							],
							"name": "mintHeros",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								}
							],
							"name": "mintLegend",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								}
							],
							"name": "mintLegends",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								}
							],
							"name": "mintRare",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								}
							],
							"name": "mintRares",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								}
							],
							"name": "mintUncommon",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								}
							],
							"name": "mintUncommons",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlock1stPublicRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlock2ndPublicRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenMinter.sol\":486:11238  contract TokenMinter is iTokenMinter, Ownable, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"TokenMinter.sol\":2256:2624  constructor(address doaCollectionAddress, address treasuryAddress, address memberRegistryAddress)  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  dup1\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"TokenMinter.sol\":2397:2417  doaCollectionAddress */\n  dup3\n    /* \"TokenMinter.sol\":2365:2379  _doaCollection */\n  0x02\n  0x00\n    /* \"TokenMinter.sol\":2365:2418  _doaCollection = iDoACollection(doaCollectionAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TokenMinter.sol\":2450:2465  treasuryAddress */\n  dup2\n    /* \"TokenMinter.sol\":2428:2437  _treasury */\n  0x03\n  0x00\n    /* \"TokenMinter.sol\":2428:2466  _treasury = iTreasury(treasuryAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TokenMinter.sol\":2510:2531  memberRegistryAddress */\n  dup1\n    /* \"TokenMinter.sol\":2476:2491  _memberRegistry */\n  0x04\n  0x00\n    /* \"TokenMinter.sol\":2476:2532  _memberRegistry = iMemberRegistry(memberRegistryAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TokenMinter.sol\":2578:2582  true */\n  0x01\n    /* \"TokenMinter.sol\":2543:2563  _authorizedContracts */\n  0x05\n    /* \"TokenMinter.sol\":2543:2575  _authorizedContracts[msg.sender] */\n  0x00\n    /* \"TokenMinter.sol\":2564:2574  msg.sender */\n  caller\n    /* \"TokenMinter.sol\":2543:2575  _authorizedContracts[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"TokenMinter.sol\":2543:2582  _authorizedContracts[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TokenMinter.sol\":2256:2624  constructor(address doaCollectionAddress, address treasuryAddress, address memberRegistryAddress)  {... */\n  pop\n  pop\n  pop\n    /* \"TokenMinter.sol\":486:11238  contract TokenMinter is iTokenMinter, Ownable, Pausable, ReentrancyGuard {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_23:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_22\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_24:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_23\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_25:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":966:1085   */\ntag_39:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_41\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_42\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_43\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"TokenMinter.sol\":486:11238  contract TokenMinter is iTokenMinter, Ownable, Pausable, ReentrancyGuard {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenMinter.sol\":486:11238  contract TokenMinter is iTokenMinter, Ownable, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8d36f8f4\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc8d4fc60\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xf17a6777\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xf17a6777\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2c5d797\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf78f680a\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0xc8d4fc60\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd47e107e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd87b320b\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x98eaa4a7\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x98eaa4a7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9f158a78\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa8372307\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbad688c6\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x8d36f8f4\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x953a6ca8\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x508f0628\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x6f785cdf\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x6f785cdf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7e7f57f2\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x508f0628\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5eee43f0\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x28d3bd1b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x28d3bd1b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x329cc83f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3a149127\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x087bd107\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1592fb2a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x20a0c034\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"TokenMinter.sol\":1052:1091  Counters.Counter public _heroNFTsMinted */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":1097:1138  Counters.Counter public _legendNFTsMinted */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":9876:10027  function mintLegends(address toAddr, uint256 numToMint) external whenNotPaused  payable {... */\n    tag_4:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"TokenMinter.sol\":3631:4605  function unlock2ndPublicRound() external  whenNotPaused nonReentrant {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"TokenMinter.sol\":4631:5019  function mintHeros(address toAddr) external  whenNotPaused nonReentrant {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"TokenMinter.sol\":1144:1183  Counters.Counter public _rareNFTsMinted */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":3042:3105  function unpause() public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"TokenMinter.sol\":10615:10743  function mintUncommon(address toAddr) external  whenNotPaused  payable {... */\n    tag_9:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":1428:1465  bool public _is3rdPublicRoundUnlocked */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":1238:1279  Counters.Counter public _commonNFTsMinted */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"TokenMinter.sol\":3323:3624  function unlock1stPublicRound() external  whenNotPaused nonReentrant {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"TokenMinter.sol\":2977:3036  function pause() public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"TokenMinter.sol\":10327:10447  function mintRare(address toAddr) external  whenNotPaused  payable {... */\n    tag_16:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":1342:1379  bool public _is1stPublicRoundUnlocked */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":2631:2765  function addAuthorizedContract(address contractAddress) public onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"TokenMinter.sol\":1189:1232  Counters.Counter public _uncommonNFTsMinted */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":10042:10166  function mintLegend(address toAddr) external  whenNotPaused  payable {... */\n    tag_21:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"TokenMinter.sol\":10749:10901  function mintCommons(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n    tag_22:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"TokenMinter.sol\":1309:1336  bool public _areHerosMinted */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":10907:11031  function mintCommon(address toAddr) external  whenNotPaused  payable {... */\n    tag_24:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"TokenMinter.sol\":5026:8354  function getMintIndexRange(uint256 numToMint, NFT_CLASS classToMint) public view whenNotPaused returns (uint256 mintStartIndex, uint256 mintEndIndex) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenMinter.sol\":10453:10609  function mintUncommons(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n    tag_26:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n    tag_130:\n      stop\n        /* \"TokenMinter.sol\":1385:1422  bool public _is2ndPublicRoundUnlocked */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"TokenMinter.sol\":10173:10321  function mintRares(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n    tag_29:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      stop\n        /* \"TokenMinter.sol\":1052:1091  Counters.Counter public _heroNFTsMinted */\n    tag_39:\n      0x06\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"TokenMinter.sol\":1097:1138  Counters.Counter public _legendNFTsMinted */\n    tag_44:\n      0x07\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"TokenMinter.sol\":9876:10027  function mintLegends(address toAddr, uint256 numToMint) external whenNotPaused  payable {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_145\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_145:\n        /* \"TokenMinter.sol\":9974:10020  _mintNFTs(toAddr, numToMint, NFT_CLASS.LEGEND) */\n      tag_148\n        /* \"TokenMinter.sol\":9984:9990  toAddr */\n      dup3\n        /* \"TokenMinter.sol\":9992:10001  numToMint */\n      dup3\n        /* \"TokenMinter.sol\":10003:10019  NFT_CLASS.LEGEND */\n      0x01\n        /* \"TokenMinter.sol\":9974:9983  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":9974:10020  _mintNFTs(toAddr, numToMint, NFT_CLASS.LEGEND) */\n      jump\t// in\n    tag_148:\n      pop\n        /* \"TokenMinter.sol\":9876:10027  function mintLegends(address toAddr, uint256 numToMint) external whenNotPaused  payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":3631:4605  function unlock2ndPublicRound() external  whenNotPaused nonReentrant {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_151\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_153\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_154\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_153:\n        /* \"TokenMinter.sol\":3718:3738  _authorizedContracts */\n      0x05\n        /* \"TokenMinter.sol\":3718:3750  _authorizedContracts[msg.sender] */\n      0x00\n        /* \"TokenMinter.sol\":3739:3749  msg.sender */\n      caller\n        /* \"TokenMinter.sol\":3718:3750  _authorizedContracts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":3710:3762  require(_authorizedContracts[msg.sender], \"No Auth\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"TokenMinter.sol\":3781:3806  _is2ndPublicRoundUnlocked */\n      0x0b\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":3780:3806  !_is2ndPublicRoundUnlocked */\n      iszero\n        /* \"TokenMinter.sol\":3772:3827  require(!_is2ndPublicRoundUnlocked, \"Already unlocked\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"TokenMinter.sol\":3897:3912  _areHerosMinted */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":3889:3933  require(_areHerosMinted, \"Heros not minted\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"TokenMinter.sol\":3951:3976  _is1stPublicRoundUnlocked */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":3951:4052  _is1stPublicRoundUnlocked && uint16(_legendNFTsMinted.current()) < DoAConstants.LEGEND_NFT_SUPPLY_1st */\n      dup1\n      iszero\n      tag_165\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":881:882  1 */\n      0x01\n        /* \"TokenMinter.sol\":3980:4052  uint16(_legendNFTsMinted.current()) < DoAConstants.LEGEND_NFT_SUPPLY_1st */\n      0xffff\n      and\n        /* \"TokenMinter.sol\":3987:4014  _legendNFTsMinted.current() */\n      tag_166\n        /* \"TokenMinter.sol\":3987:4004  _legendNFTsMinted */\n      0x07\n        /* \"TokenMinter.sol\":3987:4012  _legendNFTsMinted.current */\n      tag_167\n        /* \"TokenMinter.sol\":3987:4014  _legendNFTsMinted.current() */\n      jump\t// in\n    tag_166:\n        /* \"TokenMinter.sol\":3980:4052  uint16(_legendNFTsMinted.current()) < DoAConstants.LEGEND_NFT_SUPPLY_1st */\n      0xffff\n      and\n      lt\n        /* \"TokenMinter.sol\":3951:4052  _is1stPublicRoundUnlocked && uint16(_legendNFTsMinted.current()) < DoAConstants.LEGEND_NFT_SUPPLY_1st */\n    tag_165:\n        /* \"TokenMinter.sol\":3943:4073  require(_is1stPublicRoundUnlocked && uint16(_legendNFTsMinted.current()) < DoAConstants.LEGEND_NFT_SUPPLY_1st, \"Unminted legends\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"TokenMinter.sol\":4091:4116  _is1stPublicRoundUnlocked */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":4091:4188  _is1stPublicRoundUnlocked && uint16(_rareNFTsMinted.current()) < DoAConstants.RARE_NFT_SUPPLY_1st */\n      dup1\n      iszero\n      tag_171\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":933:934  5 */\n      0x05\n        /* \"TokenMinter.sol\":4120:4188  uint16(_rareNFTsMinted.current()) < DoAConstants.RARE_NFT_SUPPLY_1st */\n      0xffff\n      and\n        /* \"TokenMinter.sol\":4127:4152  _rareNFTsMinted.current() */\n      tag_172\n        /* \"TokenMinter.sol\":4127:4142  _rareNFTsMinted */\n      0x08\n        /* \"TokenMinter.sol\":4127:4150  _rareNFTsMinted.current */\n      tag_167\n        /* \"TokenMinter.sol\":4127:4152  _rareNFTsMinted.current() */\n      jump\t// in\n    tag_172:\n        /* \"TokenMinter.sol\":4120:4188  uint16(_rareNFTsMinted.current()) < DoAConstants.RARE_NFT_SUPPLY_1st */\n      0xffff\n      and\n      lt\n        /* \"TokenMinter.sol\":4091:4188  _is1stPublicRoundUnlocked && uint16(_rareNFTsMinted.current()) < DoAConstants.RARE_NFT_SUPPLY_1st */\n    tag_171:\n        /* \"TokenMinter.sol\":4083:4207  require(_is1stPublicRoundUnlocked && uint16(_rareNFTsMinted.current()) < DoAConstants.RARE_NFT_SUPPLY_1st, \"Unminted rares\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"TokenMinter.sol\":4225:4250  _is1stPublicRoundUnlocked */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":4225:4330  _is1stPublicRoundUnlocked && uint16(_uncommonNFTsMinted.current()) < DoAConstants.UNCOMMON_NFT_SUPPLY_1st */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":989:991  25 */\n      0x19\n        /* \"TokenMinter.sol\":4254:4330  uint16(_uncommonNFTsMinted.current()) < DoAConstants.UNCOMMON_NFT_SUPPLY_1st */\n      0xffff\n      and\n        /* \"TokenMinter.sol\":4261:4290  _uncommonNFTsMinted.current() */\n      tag_177\n        /* \"TokenMinter.sol\":4261:4280  _uncommonNFTsMinted */\n      0x09\n        /* \"TokenMinter.sol\":4261:4288  _uncommonNFTsMinted.current */\n      tag_167\n        /* \"TokenMinter.sol\":4261:4290  _uncommonNFTsMinted.current() */\n      jump\t// in\n    tag_177:\n        /* \"TokenMinter.sol\":4254:4330  uint16(_uncommonNFTsMinted.current()) < DoAConstants.UNCOMMON_NFT_SUPPLY_1st */\n      0xffff\n      and\n      lt\n        /* \"TokenMinter.sol\":4225:4330  _is1stPublicRoundUnlocked && uint16(_uncommonNFTsMinted.current()) < DoAConstants.UNCOMMON_NFT_SUPPLY_1st */\n    tag_176:\n        /* \"TokenMinter.sol\":4217:4353  require(_is1stPublicRoundUnlocked && uint16(_uncommonNFTsMinted.current()) < DoAConstants.UNCOMMON_NFT_SUPPLY_1st, \"Unminted uncommons\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"TokenMinter.sol\":4371:4396  _is1stPublicRoundUnlocked */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":4371:4471  _is1stPublicRoundUnlocked && uint16(_commonNFTsMinted.current())< DoAConstants.COMMON_NFT_SUPPLY_1st */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"DoAConstants.sol\":1044:1047  125 */\n      0x7d\n        /* \"TokenMinter.sol\":4400:4471  uint16(_commonNFTsMinted.current())< DoAConstants.COMMON_NFT_SUPPLY_1st */\n      0xffff\n      and\n        /* \"TokenMinter.sol\":4407:4434  _commonNFTsMinted.current() */\n      tag_182\n        /* \"TokenMinter.sol\":4407:4424  _commonNFTsMinted */\n      0x0a\n        /* \"TokenMinter.sol\":4407:4432  _commonNFTsMinted.current */\n      tag_167\n        /* \"TokenMinter.sol\":4407:4434  _commonNFTsMinted.current() */\n      jump\t// in\n    tag_182:\n        /* \"TokenMinter.sol\":4400:4471  uint16(_commonNFTsMinted.current())< DoAConstants.COMMON_NFT_SUPPLY_1st */\n      0xffff\n      and\n      lt\n        /* \"TokenMinter.sol\":4371:4471  _is1stPublicRoundUnlocked && uint16(_commonNFTsMinted.current())< DoAConstants.COMMON_NFT_SUPPLY_1st */\n    tag_181:\n        /* \"TokenMinter.sol\":4363:4492  require(_is1stPublicRoundUnlocked && uint16(_commonNFTsMinted.current())< DoAConstants.COMMON_NFT_SUPPLY_1st, \"Unminted commons\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"TokenMinter.sol\":4531:4535  true */\n      0x01\n        /* \"TokenMinter.sol\":4503:4528  _is2ndPublicRoundUnlocked */\n      0x0b\n      0x02\n        /* \"TokenMinter.sol\":4503:4535  _is2ndPublicRoundUnlocked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenMinter.sol\":4573:4578  false */\n      0x00\n        /* \"TokenMinter.sol\":4545:4570  _is1stPublicRoundUnlocked */\n      0x0b\n      0x01\n        /* \"TokenMinter.sol\":4545:4578  _is1stPublicRoundUnlocked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_186\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_186:\n        /* \"TokenMinter.sol\":3631:4605  function unlock2ndPublicRound() external  whenNotPaused nonReentrant {... */\n      jump\t// out\n        /* \"TokenMinter.sol\":4631:5019  function mintHeros(address toAddr) external  whenNotPaused nonReentrant {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_189\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_191\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_154\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_191:\n        /* \"TokenMinter.sol\":4721:4741  _authorizedContracts */\n      0x05\n        /* \"TokenMinter.sol\":4721:4753  _authorizedContracts[msg.sender] */\n      0x00\n        /* \"TokenMinter.sol\":4742:4752  msg.sender */\n      caller\n        /* \"TokenMinter.sol\":4721:4753  _authorizedContracts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":4713:4765  require(_authorizedContracts[msg.sender], \"No Auth\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_158\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"TokenMinter.sol\":4784:4799  _areHerosMinted */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":4783:4799  !_areHerosMinted */\n      iszero\n        /* \"TokenMinter.sol\":4775:4818  require(!_areHerosMinted, \"Already minted\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"TokenMinter.sol\":4829:4846  uint256 numMinted */\n      0x00\n        /* \"TokenMinter.sol\":4849:4916  _mintNFTs(toAddr, DoAConstants.HERO_NFT_SUPPLY_1st, NFT_CLASS.HERO) */\n      tag_198\n        /* \"TokenMinter.sol\":4859:4865  toAddr */\n      dup3\n        /* \"DoAConstants.sol\":826:828  25 */\n      0x19\n        /* \"TokenMinter.sol\":4849:4916  _mintNFTs(toAddr, DoAConstants.HERO_NFT_SUPPLY_1st, NFT_CLASS.HERO) */\n      0xffff\n      and\n        /* \"TokenMinter.sol\":4901:4915  NFT_CLASS.HERO */\n      0x00\n        /* \"TokenMinter.sol\":4849:4858  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":4849:4916  _mintNFTs(toAddr, DoAConstants.HERO_NFT_SUPPLY_1st, NFT_CLASS.HERO) */\n      jump\t// in\n    tag_198:\n        /* \"TokenMinter.sol\":4829:4916  uint256 numMinted = _mintNFTs(toAddr, DoAConstants.HERO_NFT_SUPPLY_1st, NFT_CLASS.HERO) */\n      swap1\n      pop\n        /* \"DoAConstants.sol\":826:828  25 */\n      0x19\n        /* \"TokenMinter.sol\":4930:4975  numMinted == DoAConstants.HERO_NFT_SUPPLY_1st */\n      0xffff\n      and\n        /* \"TokenMinter.sol\":4930:4939  numMinted */\n      dup2\n        /* \"TokenMinter.sol\":4930:4975  numMinted == DoAConstants.HERO_NFT_SUPPLY_1st */\n      sub\n        /* \"TokenMinter.sol\":4927:5011  if(numMinted == DoAConstants.HERO_NFT_SUPPLY_1st)... */\n      tag_199\n      jumpi\n        /* \"TokenMinter.sol\":5007:5011  true */\n      0x01\n        /* \"TokenMinter.sol\":4989:5004  _areHerosMinted */\n      0x0b\n      0x00\n        /* \"TokenMinter.sol\":4989:5011  _areHerosMinted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenMinter.sol\":4927:5011  if(numMinted == DoAConstants.HERO_NFT_SUPPLY_1st)... */\n    tag_199:\n        /* \"TokenMinter.sol\":4703:5019  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_200:\n        /* \"TokenMinter.sol\":4631:5019  function mintHeros(address toAddr) external  whenNotPaused nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":1144:1183  Counters.Counter public _rareNFTsMinted */\n    tag_60:\n      0x08\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"TokenMinter.sol\":3042:3105  function unpause() public onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"TokenMinter.sol\":3088:3098  _unpause() */\n      tag_205\n        /* \"TokenMinter.sol\":3088:3096  _unpause */\n      tag_206\n        /* \"TokenMinter.sol\":3088:3098  _unpause() */\n      jump\t// in\n    tag_205:\n        /* \"TokenMinter.sol\":3042:3105  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"TokenMinter.sol\":10615:10743  function mintUncommon(address toAddr) external  whenNotPaused  payable {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_208\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_208:\n        /* \"TokenMinter.sol\":10696:10736  _mintNFTs(toAddr, 1, NFT_CLASS.UNCOMMON) */\n      tag_210\n        /* \"TokenMinter.sol\":10706:10712  toAddr */\n      dup2\n        /* \"TokenMinter.sol\":10714:10715  1 */\n      0x01\n        /* \"TokenMinter.sol\":10717:10735  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"TokenMinter.sol\":10696:10705  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":10696:10736  _mintNFTs(toAddr, 1, NFT_CLASS.UNCOMMON) */\n      jump\t// in\n    tag_210:\n      pop\n        /* \"TokenMinter.sol\":10615:10743  function mintUncommon(address toAddr) external  whenNotPaused  payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenMinter.sol\":1428:1465  bool public _is3rdPublicRoundUnlocked */\n    tag_75:\n      0x0b\n      0x03\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenMinter.sol\":1238:1279  Counters.Counter public _commonNFTsMinted */\n    tag_79:\n      0x0a\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"TokenMinter.sol\":3323:3624  function unlock1stPublicRound() external  whenNotPaused nonReentrant {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_218\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_220\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_154\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_220:\n        /* \"TokenMinter.sol\":3410:3430  _authorizedContracts */\n      0x05\n        /* \"TokenMinter.sol\":3410:3442  _authorizedContracts[msg.sender] */\n      0x00\n        /* \"TokenMinter.sol\":3431:3441  msg.sender */\n      caller\n        /* \"TokenMinter.sol\":3410:3442  _authorizedContracts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":3402:3454  require(_authorizedContracts[msg.sender], \"No Auth\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_158\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"TokenMinter.sol\":3473:3498  _is1stPublicRoundUnlocked */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":3472:3498  !_is1stPublicRoundUnlocked */\n      iszero\n        /* \"TokenMinter.sol\":3464:3519  require(!_is1stPublicRoundUnlocked, \"Already unlocked\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_161\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"TokenMinter.sol\":3538:3553  _areHerosMinted */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":3530:3574  require(_areHerosMinted, \"Heros not minted\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_164\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"TokenMinter.sol\":3613:3617  true */\n      0x01\n        /* \"TokenMinter.sol\":3585:3610  _is1stPublicRoundUnlocked */\n      0x0b\n      0x01\n        /* \"TokenMinter.sol\":3585:3617  _is1stPublicRoundUnlocked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_228\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_228:\n        /* \"TokenMinter.sol\":3323:3624  function unlock1stPublicRound() external  whenNotPaused nonReentrant {... */\n      jump\t// out\n        /* \"TokenMinter.sol\":2977:3036  function pause() public onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"TokenMinter.sol\":3021:3029  _pause() */\n      tag_232\n        /* \"TokenMinter.sol\":3021:3027  _pause */\n      tag_233\n        /* \"TokenMinter.sol\":3021:3029  _pause() */\n      jump\t// in\n    tag_232:\n        /* \"TokenMinter.sol\":2977:3036  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"TokenMinter.sol\":10327:10447  function mintRare(address toAddr) external  whenNotPaused  payable {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_235\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_235:\n        /* \"TokenMinter.sol\":10404:10440  _mintNFTs(toAddr, 1, NFT_CLASS.RARE) */\n      tag_237\n        /* \"TokenMinter.sol\":10414:10420  toAddr */\n      dup2\n        /* \"TokenMinter.sol\":10422:10423  1 */\n      0x01\n        /* \"TokenMinter.sol\":10425:10439  NFT_CLASS.RARE */\n      0x02\n        /* \"TokenMinter.sol\":10404:10413  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":10404:10440  _mintNFTs(toAddr, 1, NFT_CLASS.RARE) */\n      jump\t// in\n    tag_237:\n      pop\n        /* \"TokenMinter.sol\":10327:10447  function mintRare(address toAddr) external  whenNotPaused  payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"TokenMinter.sol\":1342:1379  bool public _is1stPublicRoundUnlocked */\n    tag_100:\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenMinter.sol\":2631:2765  function addAuthorizedContract(address contractAddress) public onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"TokenMinter.sol\":2754:2758  true */\n      0x01\n        /* \"TokenMinter.sol\":2714:2734  _authorizedContracts */\n      0x05\n        /* \"TokenMinter.sol\":2714:2751  _authorizedContracts[contractAddress] */\n      0x00\n        /* \"TokenMinter.sol\":2735:2750  contractAddress */\n      dup4\n        /* \"TokenMinter.sol\":2714:2751  _authorizedContracts[contractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"TokenMinter.sol\":2714:2758  _authorizedContracts[contractAddress] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TokenMinter.sol\":2631:2765  function addAuthorizedContract(address contractAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":1189:1232  Counters.Counter public _uncommonNFTsMinted */\n    tag_108:\n      0x09\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"TokenMinter.sol\":10042:10166  function mintLegend(address toAddr) external  whenNotPaused  payable {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_243\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_243:\n        /* \"TokenMinter.sol\":10121:10159  _mintNFTs(toAddr, 1, NFT_CLASS.LEGEND) */\n      tag_245\n        /* \"TokenMinter.sol\":10131:10137  toAddr */\n      dup2\n        /* \"TokenMinter.sol\":10139:10140  1 */\n      0x01\n        /* \"TokenMinter.sol\":10142:10158  NFT_CLASS.LEGEND */\n      dup1\n        /* \"TokenMinter.sol\":10121:10130  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":10121:10159  _mintNFTs(toAddr, 1, NFT_CLASS.LEGEND) */\n      jump\t// in\n    tag_245:\n      pop\n        /* \"TokenMinter.sol\":10042:10166  function mintLegend(address toAddr) external  whenNotPaused  payable {... */\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":10749:10901  function mintCommons(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_247\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_247:\n        /* \"TokenMinter.sol\":10848:10894  _mintNFTs(toAddr, numToMint, NFT_CLASS.COMMON) */\n      tag_249\n        /* \"TokenMinter.sol\":10858:10864  toAddr */\n      dup3\n        /* \"TokenMinter.sol\":10866:10875  numToMint */\n      dup3\n        /* \"TokenMinter.sol\":10877:10893  NFT_CLASS.COMMON */\n      0x04\n        /* \"TokenMinter.sol\":10848:10857  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":10848:10894  _mintNFTs(toAddr, numToMint, NFT_CLASS.COMMON) */\n      jump\t// in\n    tag_249:\n      pop\n        /* \"TokenMinter.sol\":10749:10901  function mintCommons(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":1309:1336  bool public _areHerosMinted */\n    tag_118:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"TokenMinter.sol\":10907:11031  function mintCommon(address toAddr) external  whenNotPaused  payable {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_251\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_251:\n        /* \"TokenMinter.sol\":10986:11024  _mintNFTs(toAddr, 1, NFT_CLASS.COMMON) */\n      tag_253\n        /* \"TokenMinter.sol\":10996:11002  toAddr */\n      dup2\n        /* \"TokenMinter.sol\":11004:11005  1 */\n      0x01\n        /* \"TokenMinter.sol\":11007:11023  NFT_CLASS.COMMON */\n      0x04\n        /* \"TokenMinter.sol\":10986:10995  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":10986:11024  _mintNFTs(toAddr, 1, NFT_CLASS.COMMON) */\n      jump\t// in\n    tag_253:\n      pop\n        /* \"TokenMinter.sol\":10907:11031  function mintCommon(address toAddr) external  whenNotPaused  payable {... */\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":5026:8354  function getMintIndexRange(uint256 numToMint, NFT_CLASS classToMint) public view whenNotPaused returns (uint256 mintStartIndex, uint256 mintEndIndex) {... */\n    tag_127:\n        /* \"TokenMinter.sol\":5130:5152  uint256 mintStartIndex */\n      0x00\n        /* \"TokenMinter.sol\":5154:5174  uint256 mintEndIndex */\n      dup1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_255\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_255:\n        /* \"TokenMinter.sol\":5206:5207  0 */\n      0x00\n        /* \"TokenMinter.sol\":5194:5203  numToMint */\n      dup5\n        /* \"TokenMinter.sol\":5194:5207  numToMint > 0 */\n      gt\n        /* \"TokenMinter.sol\":5186:5223  require(numToMint > 0, \"numToMint 0\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"TokenMinter.sol\":5241:5256  _areHerosMinted */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":5233:5277  require(_areHerosMinted, \"Heros not minted\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_164\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"TokenMinter.sol\":5288:5307  uint16 currentCount */\n      0x00\n        /* \"TokenMinter.sol\":5317:5335  uint16 futureCount */\n      dup1\n        /* \"TokenMinter.sol\":5345:5371  uint256 classNFTSupply_1st */\n      0x00\n        /* \"TokenMinter.sol\":5381:5407  uint256 classNFTSupply_2nd */\n      dup1\n        /* \"TokenMinter.sol\":5417:5443  uint256 classNFTSupply_3rd */\n      0x00\n        /* \"TokenMinter.sol\":5520:5536  NFT_CLASS.LEGEND */\n      0x01\n        /* \"TokenMinter.sol\":5505:5536  classToMint == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_262\n      jumpi\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n    tag_262:\n        /* \"TokenMinter.sol\":5505:5516  classToMint */\n      dup9\n        /* \"TokenMinter.sol\":5505:5536  classToMint == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_265\n      jumpi\n      tag_266\n      tag_264\n      jump\t// in\n    tag_266:\n    tag_265:\n      sub\n        /* \"TokenMinter.sol\":5502:7883  if(classToMint == NFT_CLASS.LEGEND) {... */\n      tag_267\n      jumpi\n        /* \"TokenMinter.sol\":5578:5605  _legendNFTsMinted.current() */\n      tag_268\n        /* \"TokenMinter.sol\":5578:5595  _legendNFTsMinted */\n      0x07\n        /* \"TokenMinter.sol\":5578:5603  _legendNFTsMinted.current */\n      tag_167\n        /* \"TokenMinter.sol\":5578:5605  _legendNFTsMinted.current() */\n      jump\t// in\n    tag_268:\n        /* \"TokenMinter.sol\":5556:5606  currentCount = uint16(_legendNFTsMinted.current()) */\n      swap5\n      pop\n        /* \"TokenMinter.sol\":5660:5669  numToMint */\n      dup9\n        /* \"TokenMinter.sol\":5638:5650  currentCount */\n      dup6\n        /* \"TokenMinter.sol\":5638:5670  currentCount + uint16(numToMint) */\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"TokenMinter.sol\":5624:5670  futureCount = currentCount + uint16(numToMint) */\n      swap4\n      pop\n        /* \"DoAConstants.sol\":881:882  1 */\n      0x01\n        /* \"TokenMinter.sol\":5689:5744  classNFTSupply_1st = DoAConstants.LEGEND_NFT_SUPPLY_1st */\n      0xffff\n      and\n      swap3\n      pop\n        /* \"DoAConstants.sol\":1187:1189  10 */\n      0x0a\n        /* \"TokenMinter.sol\":5762:5817  classNFTSupply_2nd = DoAConstants.LEGEND_NFT_SUPPLY_2nd */\n      0xffff\n      and\n      swap2\n      pop\n        /* \"DoAConstants.sol\":1497:1499  80 */\n      0x50\n        /* \"TokenMinter.sol\":5835:5890  classNFTSupply_3rd = DoAConstants.LEGEND_NFT_SUPPLY_3rd */\n      0xffff\n      and\n      swap1\n      pop\n        /* \"TokenMinter.sol\":5964:5976  currentCount */\n      dup5\n        /* \"DoAConstants.sol\":2208:2210  25 */\n      0x19\n        /* \"TokenMinter.sol\":5926:5976  DoAConstants.LEGEND_NFT_START_INDEX + currentCount */\n      tag_271\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_271:\n        /* \"TokenMinter.sol\":5909:5976  mintStartIndex = DoAConstants.LEGEND_NFT_START_INDEX + currentCount */\n      0xffff\n      and\n      swap7\n      pop\n        /* \"TokenMinter.sol\":6061:6062  1 */\n      0x01\n        /* \"TokenMinter.sol\":6047:6058  futureCount */\n      dup5\n        /* \"DoAConstants.sol\":2208:2210  25 */\n      0x19\n        /* \"TokenMinter.sol\":6009:6058  DoAConstants.LEGEND_NFT_START_INDEX + futureCount */\n      tag_272\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_272:\n        /* \"TokenMinter.sol\":6009:6062  DoAConstants.LEGEND_NFT_START_INDEX + futureCount - 1 */\n      tag_273\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"TokenMinter.sol\":5994:6062  mintEndIndex = DoAConstants.LEGEND_NFT_START_INDEX + futureCount - 1 */\n      0xffff\n      and\n      swap6\n      pop\n        /* \"TokenMinter.sol\":5502:7883  if(classToMint == NFT_CLASS.LEGEND) {... */\n      jump(tag_275)\n    tag_267:\n        /* \"TokenMinter.sol\":6105:6119  NFT_CLASS.RARE */\n      0x02\n        /* \"TokenMinter.sol\":6090:6119  classToMint == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_276\n      jumpi\n      tag_277\n      tag_264\n      jump\t// in\n    tag_277:\n    tag_276:\n        /* \"TokenMinter.sol\":6090:6101  classToMint */\n      dup9\n        /* \"TokenMinter.sol\":6090:6119  classToMint == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_278\n      jumpi\n      tag_279\n      tag_264\n      jump\t// in\n    tag_279:\n    tag_278:\n      sub\n        /* \"TokenMinter.sol\":6087:7883  if(classToMint == NFT_CLASS.RARE) {... */\n      tag_280\n      jumpi\n        /* \"TokenMinter.sol\":6161:6186  _rareNFTsMinted.current() */\n      tag_281\n        /* \"TokenMinter.sol\":6161:6176  _rareNFTsMinted */\n      0x08\n        /* \"TokenMinter.sol\":6161:6184  _rareNFTsMinted.current */\n      tag_167\n        /* \"TokenMinter.sol\":6161:6186  _rareNFTsMinted.current() */\n      jump\t// in\n    tag_281:\n        /* \"TokenMinter.sol\":6139:6187  currentCount = uint16(_rareNFTsMinted.current()) */\n      swap5\n      pop\n        /* \"TokenMinter.sol\":6241:6250  numToMint */\n      dup9\n        /* \"TokenMinter.sol\":6219:6231  currentCount */\n      dup6\n        /* \"TokenMinter.sol\":6219:6251  currentCount + uint16(numToMint) */\n      tag_282\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_282:\n        /* \"TokenMinter.sol\":6205:6251  futureCount = currentCount + uint16(numToMint) */\n      swap4\n      pop\n        /* \"DoAConstants.sol\":933:934  5 */\n      0x05\n        /* \"TokenMinter.sol\":6270:6323  classNFTSupply_1st = DoAConstants.RARE_NFT_SUPPLY_1st */\n      0xffff\n      and\n      swap3\n      pop\n        /* \"DoAConstants.sol\":1240:1242  50 */\n      0x32\n        /* \"TokenMinter.sol\":6341:6394  classNFTSupply_2nd = DoAConstants.RARE_NFT_SUPPLY_2nd */\n      0xffff\n      and\n      swap2\n      pop\n        /* \"DoAConstants.sol\":1550:1553  400 */\n      0x0190\n        /* \"TokenMinter.sol\":6412:6465  classNFTSupply_3rd = DoAConstants.RARE_NFT_SUPPLY_3rd */\n      0xffff\n      and\n      swap1\n      pop\n        /* \"TokenMinter.sol\":6537:6549  currentCount */\n      dup5\n        /* \"DoAConstants.sol\":2262:2265  126 */\n      0x7e\n        /* \"TokenMinter.sol\":6501:6549  DoAConstants.RARE_NFT_START_INDEX + currentCount */\n      tag_283\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_283:\n        /* \"TokenMinter.sol\":6484:6549  mintStartIndex = DoAConstants.RARE_NFT_START_INDEX + currentCount */\n      0xffff\n      and\n      swap7\n      pop\n        /* \"TokenMinter.sol\":6632:6633  1 */\n      0x01\n        /* \"TokenMinter.sol\":6618:6629  futureCount */\n      dup5\n        /* \"DoAConstants.sol\":2262:2265  126 */\n      0x7e\n        /* \"TokenMinter.sol\":6582:6629  DoAConstants.RARE_NFT_START_INDEX + futureCount */\n      tag_284\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_284:\n        /* \"TokenMinter.sol\":6582:6633  DoAConstants.RARE_NFT_START_INDEX + futureCount - 1 */\n      tag_285\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_285:\n        /* \"TokenMinter.sol\":6567:6633  mintEndIndex = DoAConstants.RARE_NFT_START_INDEX + futureCount - 1 */\n      0xffff\n      and\n      swap6\n      pop\n        /* \"TokenMinter.sol\":6087:7883  if(classToMint == NFT_CLASS.RARE) {... */\n      jump(tag_286)\n    tag_280:\n        /* \"TokenMinter.sol\":6676:6694  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"TokenMinter.sol\":6661:6694  classToMint == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_287\n      jumpi\n      tag_288\n      tag_264\n      jump\t// in\n    tag_288:\n    tag_287:\n        /* \"TokenMinter.sol\":6661:6672  classToMint */\n      dup9\n        /* \"TokenMinter.sol\":6661:6694  classToMint == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_289\n      jumpi\n      tag_290\n      tag_264\n      jump\t// in\n    tag_290:\n    tag_289:\n      sub\n        /* \"TokenMinter.sol\":6658:7883  if(classToMint == NFT_CLASS.UNCOMMON) {... */\n      tag_291\n      jumpi\n        /* \"TokenMinter.sol\":6736:6765  _uncommonNFTsMinted.current() */\n      tag_292\n        /* \"TokenMinter.sol\":6736:6755  _uncommonNFTsMinted */\n      0x09\n        /* \"TokenMinter.sol\":6736:6763  _uncommonNFTsMinted.current */\n      tag_167\n        /* \"TokenMinter.sol\":6736:6765  _uncommonNFTsMinted.current() */\n      jump\t// in\n    tag_292:\n        /* \"TokenMinter.sol\":6714:6766  currentCount = uint16(_uncommonNFTsMinted.current()) */\n      swap5\n      pop\n        /* \"TokenMinter.sol\":6820:6829  numToMint */\n      dup9\n        /* \"TokenMinter.sol\":6798:6810  currentCount */\n      dup6\n        /* \"TokenMinter.sol\":6798:6830  currentCount + uint16(numToMint) */\n      tag_293\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_293:\n        /* \"TokenMinter.sol\":6784:6830  futureCount = currentCount + uint16(numToMint) */\n      swap4\n      pop\n        /* \"DoAConstants.sol\":989:991  25 */\n      0x19\n        /* \"TokenMinter.sol\":6849:6906  classNFTSupply_1st = DoAConstants.UNCOMMON_NFT_SUPPLY_1st */\n      0xffff\n      and\n      swap3\n      pop\n        /* \"DoAConstants.sol\":1297:1300  250 */\n      0xfa\n        /* \"TokenMinter.sol\":6924:6981  classNFTSupply_2nd = DoAConstants.UNCOMMON_NFT_SUPPLY_2nd */\n      0xffff\n      and\n      swap2\n      pop\n        /* \"DoAConstants.sol\":1608:1612  2000 */\n      0x07d0\n        /* \"TokenMinter.sol\":6999:7056  classNFTSupply_3rd = DoAConstants.UNCOMMON_NFT_SUPPLY_3rd */\n      0xffff\n      and\n      swap1\n      pop\n        /* \"TokenMinter.sol\":7132:7144  currentCount */\n      dup5\n        /* \"DoAConstants.sol\":2321:2324  627 */\n      0x0273\n        /* \"TokenMinter.sol\":7092:7144  DoAConstants.UNCOMMON_NFT_START_INDEX + currentCount */\n      tag_294\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_294:\n        /* \"TokenMinter.sol\":7075:7144  mintStartIndex = DoAConstants.UNCOMMON_NFT_START_INDEX + currentCount */\n      0xffff\n      and\n      swap7\n      pop\n        /* \"TokenMinter.sol\":7231:7232  1 */\n      0x01\n        /* \"TokenMinter.sol\":7217:7228  futureCount */\n      dup5\n        /* \"DoAConstants.sol\":2321:2324  627 */\n      0x0273\n        /* \"TokenMinter.sol\":7177:7228  DoAConstants.UNCOMMON_NFT_START_INDEX + futureCount */\n      tag_295\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_295:\n        /* \"TokenMinter.sol\":7177:7232  DoAConstants.UNCOMMON_NFT_START_INDEX + futureCount - 1 */\n      tag_296\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_296:\n        /* \"TokenMinter.sol\":7162:7232  mintEndIndex = DoAConstants.UNCOMMON_NFT_START_INDEX + futureCount - 1 */\n      0xffff\n      and\n      swap6\n      pop\n        /* \"TokenMinter.sol\":6658:7883  if(classToMint == NFT_CLASS.UNCOMMON) {... */\n      jump(tag_297)\n    tag_291:\n        /* \"TokenMinter.sol\":7275:7291  NFT_CLASS.COMMON */\n      0x04\n        /* \"TokenMinter.sol\":7260:7291  classToMint == NFT_CLASS.COMMON */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_298\n      jumpi\n      tag_299\n      tag_264\n      jump\t// in\n    tag_299:\n    tag_298:\n        /* \"TokenMinter.sol\":7260:7271  classToMint */\n      dup9\n        /* \"TokenMinter.sol\":7260:7291  classToMint == NFT_CLASS.COMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_300\n      jumpi\n      tag_301\n      tag_264\n      jump\t// in\n    tag_301:\n    tag_300:\n      sub\n        /* \"TokenMinter.sol\":7257:7883  if(classToMint == NFT_CLASS.COMMON) {... */\n      tag_302\n      jumpi\n        /* \"TokenMinter.sol\":7333:7360  _commonNFTsMinted.current() */\n      tag_303\n        /* \"TokenMinter.sol\":7333:7350  _commonNFTsMinted */\n      0x0a\n        /* \"TokenMinter.sol\":7333:7358  _commonNFTsMinted.current */\n      tag_167\n        /* \"TokenMinter.sol\":7333:7360  _commonNFTsMinted.current() */\n      jump\t// in\n    tag_303:\n        /* \"TokenMinter.sol\":7311:7361  currentCount = uint16(_commonNFTsMinted.current()) */\n      swap5\n      pop\n        /* \"TokenMinter.sol\":7415:7424  numToMint */\n      dup9\n        /* \"TokenMinter.sol\":7393:7405  currentCount */\n      dup6\n        /* \"TokenMinter.sol\":7393:7425  currentCount + uint16(numToMint) */\n      tag_304\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_304:\n        /* \"TokenMinter.sol\":7379:7425  futureCount = currentCount + uint16(numToMint) */\n      swap4\n      pop\n        /* \"DoAConstants.sol\":1044:1047  125 */\n      0x7d\n        /* \"TokenMinter.sol\":7444:7499  classNFTSupply_1st = DoAConstants.COMMON_NFT_SUPPLY_1st */\n      0xffff\n      and\n      swap3\n      pop\n        /* \"DoAConstants.sol\":1353:1357  1250 */\n      0x04e2\n        /* \"TokenMinter.sol\":7517:7572  classNFTSupply_2nd = DoAConstants.COMMON_NFT_SUPPLY_2nd */\n      0xffff\n      and\n      swap2\n      pop\n        /* \"DoAConstants.sol\":1665:1669  5770 */\n      0x168a\n        /* \"TokenMinter.sol\":7590:7645  classNFTSupply_3rd = DoAConstants.COMMON_NFT_SUPPLY_3rd */\n      0xffff\n      and\n      swap1\n      pop\n        /* \"TokenMinter.sol\":7719:7731  currentCount */\n      dup5\n        /* \"DoAConstants.sol\":2378:2382  3128 */\n      0x0c38\n        /* \"TokenMinter.sol\":7681:7731  DoAConstants.COMMON_NFT_START_INDEX + currentCount */\n      tag_305\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_305:\n        /* \"TokenMinter.sol\":7664:7731  mintStartIndex = DoAConstants.COMMON_NFT_START_INDEX + currentCount */\n      0xffff\n      and\n      swap7\n      pop\n        /* \"TokenMinter.sol\":7816:7817  1 */\n      0x01\n        /* \"TokenMinter.sol\":7802:7813  futureCount */\n      dup5\n        /* \"DoAConstants.sol\":2378:2382  3128 */\n      0x0c38\n        /* \"TokenMinter.sol\":7764:7813  DoAConstants.COMMON_NFT_START_INDEX + futureCount */\n      tag_306\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_306:\n        /* \"TokenMinter.sol\":7764:7817  DoAConstants.COMMON_NFT_START_INDEX + futureCount - 1 */\n      tag_307\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_307:\n        /* \"TokenMinter.sol\":7749:7817  mintEndIndex = DoAConstants.COMMON_NFT_START_INDEX + futureCount - 1 */\n      0xffff\n      and\n      swap6\n      pop\n        /* \"TokenMinter.sol\":7257:7883  if(classToMint == NFT_CLASS.COMMON) {... */\n      jump(tag_308)\n    tag_302:\n        /* \"TokenMinter.sol\":7860:7883  revert(\"Invalid class\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"TokenMinter.sol\":7257:7883  if(classToMint == NFT_CLASS.COMMON) {... */\n    tag_308:\n        /* \"TokenMinter.sol\":6658:7883  if(classToMint == NFT_CLASS.UNCOMMON) {... */\n    tag_297:\n        /* \"TokenMinter.sol\":6087:7883  if(classToMint == NFT_CLASS.RARE) {... */\n    tag_286:\n        /* \"TokenMinter.sol\":5502:7883  if(classToMint == NFT_CLASS.LEGEND) {... */\n    tag_275:\n        /* \"TokenMinter.sol\":7935:7960  _is1stPublicRoundUnlocked */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":7932:8346  if(_is1stPublicRoundUnlocked) ... */\n      iszero\n      tag_311\n      jumpi\n        /* \"TokenMinter.sol\":7998:8016  classNFTSupply_1st */\n      dup3\n        /* \"TokenMinter.sol\":7983:7994  futureCount */\n      dup5\n        /* \"TokenMinter.sol\":7983:8016  futureCount <= classNFTSupply_1st */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"TokenMinter.sol\":7975:8040  require(futureCount <= classNFTSupply_1st, \"supply insufficient\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"TokenMinter.sol\":7932:8346  if(_is1stPublicRoundUnlocked) ... */\n      jump(tag_315)\n    tag_311:\n        /* \"TokenMinter.sol\":8058:8083  _is2ndPublicRoundUnlocked */\n      0x0b\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":8055:8346  if(_is2ndPublicRoundUnlocked) ... */\n      iszero\n      tag_316\n      jumpi\n        /* \"TokenMinter.sol\":8121:8139  classNFTSupply_2nd */\n      dup2\n        /* \"TokenMinter.sol\":8106:8117  futureCount */\n      dup5\n        /* \"TokenMinter.sol\":8106:8139  futureCount <= classNFTSupply_2nd */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"TokenMinter.sol\":8098:8163  require(futureCount <= classNFTSupply_2nd, \"supply insufficient\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_314\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"TokenMinter.sol\":8055:8346  if(_is2ndPublicRoundUnlocked) ... */\n      jump(tag_319)\n    tag_316:\n        /* \"TokenMinter.sol\":8181:8206  _is3rdPublicRoundUnlocked */\n      0x0b\n      0x03\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":8178:8346  if(_is3rdPublicRoundUnlocked)... */\n      iszero\n      tag_320\n      jumpi\n        /* \"TokenMinter.sol\":8243:8261  classNFTSupply_3rd */\n      dup1\n        /* \"TokenMinter.sol\":8228:8239  futureCount */\n      dup5\n        /* \"TokenMinter.sol\":8228:8261  futureCount <= classNFTSupply_3rd */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"TokenMinter.sol\":8220:8285  require(futureCount <= classNFTSupply_3rd, \"supply insufficient\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap1\n      tag_314\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_321:\n        /* \"TokenMinter.sol\":8178:8346  if(_is3rdPublicRoundUnlocked)... */\n      jump(tag_323)\n    tag_320:\n        /* \"TokenMinter.sol\":8312:8346  revert(\"no public round unlocked\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"TokenMinter.sol\":8178:8346  if(_is3rdPublicRoundUnlocked)... */\n    tag_323:\n        /* \"TokenMinter.sol\":8055:8346  if(_is2ndPublicRoundUnlocked) ... */\n    tag_319:\n        /* \"TokenMinter.sol\":7932:8346  if(_is1stPublicRoundUnlocked) ... */\n    tag_315:\n        /* \"TokenMinter.sol\":5176:8354  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TokenMinter.sol\":5026:8354  function getMintIndexRange(uint256 numToMint, NFT_CLASS classToMint) public view whenNotPaused returns (uint256 mintStartIndex, uint256 mintEndIndex) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":10453:10609  function mintUncommons(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_327\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_327:\n        /* \"TokenMinter.sol\":10554:10602  _mintNFTs(toAddr, numToMint, NFT_CLASS.UNCOMMON) */\n      tag_329\n        /* \"TokenMinter.sol\":10564:10570  toAddr */\n      dup3\n        /* \"TokenMinter.sol\":10572:10581  numToMint */\n      dup3\n        /* \"TokenMinter.sol\":10583:10601  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"TokenMinter.sol\":10554:10563  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":10554:10602  _mintNFTs(toAddr, numToMint, NFT_CLASS.UNCOMMON) */\n      jump\t// in\n    tag_329:\n      pop\n        /* \"TokenMinter.sol\":10453:10609  function mintUncommons(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":1385:1422  bool public _is2ndPublicRoundUnlocked */\n    tag_135:\n      0x0b\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_331\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_333:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"TokenMinter.sol\":10173:10321  function mintRares(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_338\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_338:\n        /* \"TokenMinter.sol\":10270:10314  _mintNFTs(toAddr, numToMint, NFT_CLASS.RARE) */\n      tag_340\n        /* \"TokenMinter.sol\":10280:10286  toAddr */\n      dup3\n        /* \"TokenMinter.sol\":10288:10297  numToMint */\n      dup3\n        /* \"TokenMinter.sol\":10299:10313  NFT_CLASS.RARE */\n      0x02\n        /* \"TokenMinter.sol\":10270:10279  _mintNFTs */\n      tag_149\n        /* \"TokenMinter.sol\":10270:10314  _mintNFTs(toAddr, numToMint, NFT_CLASS.RARE) */\n      jump\t// in\n    tag_340:\n      pop\n        /* \"TokenMinter.sol\":10173:10321  function mintRares(address toAddr, uint256 numToMint) external  whenNotPaused  payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_342\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_70\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"TokenMinter.sol\":8361:9869  function _mintNFTs(address toAddr, uint256 numToMint, NFT_CLASS classToMint) private whenNotPaused  returns (uint256 numMinted){ ... */\n    tag_149:\n        /* \"TokenMinter.sol\":8470:8487  uint256 numMinted */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_347\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_347:\n        /* \"TokenMinter.sol\":8507:8522  _areHerosMinted */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenMinter.sol\":8499:8543  require(_areHerosMinted, \"Heros not minted\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap1\n      tag_164\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_349:\n        /* \"TokenMinter.sol\":8751:8773  uint256 mintStartIndex */\n      0x00\n        /* \"TokenMinter.sol\":8775:8795  uint256 mintEndIndex */\n      dup1\n        /* \"TokenMinter.sol\":8812:8853  getMintIndexRange(numToMint, classToMint) */\n      tag_351\n        /* \"TokenMinter.sol\":8830:8839  numToMint */\n      dup6\n        /* \"TokenMinter.sol\":8841:8852  classToMint */\n      dup6\n        /* \"TokenMinter.sol\":8812:8829  getMintIndexRange */\n      tag_127\n        /* \"TokenMinter.sol\":8812:8853  getMintIndexRange(numToMint, classToMint) */\n      jump\t// in\n    tag_351:\n        /* \"TokenMinter.sol\":8750:8853  (uint256 mintStartIndex, uint256 mintEndIndex) = ... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"TokenMinter.sol\":8865:8891  uint256 actualMintEndIndex */\n      0x00\n        /* \"TokenMinter.sol\":8894:8908  mintStartIndex */\n      dup3\n        /* \"TokenMinter.sol\":8865:8908  uint256 actualMintEndIndex = mintStartIndex */\n      swap1\n      pop\n        /* \"TokenMinter.sol\":8942:8962  uint256 currentIndex */\n      0x00\n        /* \"TokenMinter.sol\":8965:8979  mintStartIndex */\n      dup4\n        /* \"TokenMinter.sol\":8942:8979  uint256 currentIndex = mintStartIndex */\n      swap1\n      pop\n        /* \"TokenMinter.sol\":8938:9700  for(uint256 currentIndex = mintStartIndex; currentIndex <= mintEndIndex; currentIndex++) {... */\n    tag_352:\n        /* \"TokenMinter.sol\":8997:9009  mintEndIndex */\n      dup3\n        /* \"TokenMinter.sol\":8981:8993  currentIndex */\n      dup2\n        /* \"TokenMinter.sol\":8981:9009  currentIndex <= mintEndIndex */\n      gt\n        /* \"TokenMinter.sol\":8938:9700  for(uint256 currentIndex = mintStartIndex; currentIndex <= mintEndIndex; currentIndex++) {... */\n      tag_353\n      jumpi\n        /* \"TokenMinter.sol\":9054:9068  _doaCollection */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenMinter.sol\":9054:9077  _doaCollection.safeMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa1448194\n        /* \"TokenMinter.sol\":9078:9084  toAddr */\n      dup10\n        /* \"TokenMinter.sol\":9086:9098  currentIndex */\n      dup4\n        /* \"TokenMinter.sol\":9054:9099  _doaCollection.safeMint(toAddr, currentIndex) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap3\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_357\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_357:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_359\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_359:\n      pop\n      pop\n      pop\n      pop\n        /* \"TokenMinter.sol\":9113:9128  _memberRegistry */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenMinter.sol\":9113:9138  _memberRegistry.nftMinted */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbe1e1145\n        /* \"TokenMinter.sol\":9139:9145  toAddr */\n      dup10\n        /* \"TokenMinter.sol\":9147:9158  classToMint */\n      dup9\n        /* \"TokenMinter.sol\":9113:9159  _memberRegistry.nftMinted(toAddr, classToMint) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_360\n      swap3\n      swap2\n      swap1\n      tag_361\n      jump\t// in\n    tag_360:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_362:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_364\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_364:\n      pop\n      pop\n      pop\n      pop\n        /* \"TokenMinter.sol\":9195:9207  currentIndex */\n      dup1\n        /* \"TokenMinter.sol\":9174:9207  actualMintEndIndex = currentIndex */\n      swap2\n      pop\n        /* \"TokenMinter.sol\":9283:9299  NFT_CLASS.LEGEND */\n      0x01\n        /* \"TokenMinter.sol\":9268:9299  classToMint == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_365\n      jumpi\n      tag_366\n      tag_264\n      jump\t// in\n    tag_366:\n    tag_365:\n        /* \"TokenMinter.sol\":9268:9279  classToMint */\n      dup7\n        /* \"TokenMinter.sol\":9268:9299  classToMint == NFT_CLASS.LEGEND */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_367\n      jumpi\n      tag_368\n      tag_264\n      jump\t// in\n    tag_368:\n    tag_367:\n      sub\n        /* \"TokenMinter.sol\":9265:9688  if(classToMint == NFT_CLASS.LEGEND)... */\n      tag_369\n      jumpi\n        /* \"TokenMinter.sol\":9317:9346  _legendNFTsMinted.increment() */\n      tag_370\n        /* \"TokenMinter.sol\":9317:9334  _legendNFTsMinted */\n      0x07\n        /* \"TokenMinter.sol\":9317:9344  _legendNFTsMinted.increment */\n      tag_371\n        /* \"TokenMinter.sol\":9317:9346  _legendNFTsMinted.increment() */\n      jump\t// in\n    tag_370:\n        /* \"TokenMinter.sol\":9265:9688  if(classToMint == NFT_CLASS.LEGEND)... */\n      jump(tag_372)\n    tag_369:\n        /* \"TokenMinter.sol\":9383:9397  NFT_CLASS.RARE */\n      0x02\n        /* \"TokenMinter.sol\":9368:9397  classToMint == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_373\n      jumpi\n      tag_374\n      tag_264\n      jump\t// in\n    tag_374:\n    tag_373:\n        /* \"TokenMinter.sol\":9368:9379  classToMint */\n      dup7\n        /* \"TokenMinter.sol\":9368:9397  classToMint == NFT_CLASS.RARE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_375\n      jumpi\n      tag_376\n      tag_264\n      jump\t// in\n    tag_376:\n    tag_375:\n      sub\n        /* \"TokenMinter.sol\":9365:9688  if(classToMint == NFT_CLASS.RARE)... */\n      tag_377\n      jumpi\n        /* \"TokenMinter.sol\":9415:9442  _rareNFTsMinted.increment() */\n      tag_378\n        /* \"TokenMinter.sol\":9415:9430  _rareNFTsMinted */\n      0x08\n        /* \"TokenMinter.sol\":9415:9440  _rareNFTsMinted.increment */\n      tag_371\n        /* \"TokenMinter.sol\":9415:9442  _rareNFTsMinted.increment() */\n      jump\t// in\n    tag_378:\n        /* \"TokenMinter.sol\":9365:9688  if(classToMint == NFT_CLASS.RARE)... */\n      jump(tag_379)\n    tag_377:\n        /* \"TokenMinter.sol\":9479:9497  NFT_CLASS.UNCOMMON */\n      0x03\n        /* \"TokenMinter.sol\":9464:9497  classToMint == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_380\n      jumpi\n      tag_381\n      tag_264\n      jump\t// in\n    tag_381:\n    tag_380:\n        /* \"TokenMinter.sol\":9464:9475  classToMint */\n      dup7\n        /* \"TokenMinter.sol\":9464:9497  classToMint == NFT_CLASS.UNCOMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_382\n      jumpi\n      tag_383\n      tag_264\n      jump\t// in\n    tag_383:\n    tag_382:\n      sub\n        /* \"TokenMinter.sol\":9461:9688  if(classToMint == NFT_CLASS.UNCOMMON)... */\n      tag_384\n      jumpi\n        /* \"TokenMinter.sol\":9515:9546  _uncommonNFTsMinted.increment() */\n      tag_385\n        /* \"TokenMinter.sol\":9515:9534  _uncommonNFTsMinted */\n      0x09\n        /* \"TokenMinter.sol\":9515:9544  _uncommonNFTsMinted.increment */\n      tag_371\n        /* \"TokenMinter.sol\":9515:9546  _uncommonNFTsMinted.increment() */\n      jump\t// in\n    tag_385:\n        /* \"TokenMinter.sol\":9461:9688  if(classToMint == NFT_CLASS.UNCOMMON)... */\n      jump(tag_386)\n    tag_384:\n        /* \"TokenMinter.sol\":9583:9599  NFT_CLASS.COMMON */\n      0x04\n        /* \"TokenMinter.sol\":9568:9599  classToMint == NFT_CLASS.COMMON */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_387\n      jumpi\n      tag_388\n      tag_264\n      jump\t// in\n    tag_388:\n    tag_387:\n        /* \"TokenMinter.sol\":9568:9579  classToMint */\n      dup7\n        /* \"TokenMinter.sol\":9568:9599  classToMint == NFT_CLASS.COMMON */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_389\n      jumpi\n      tag_390\n      tag_264\n      jump\t// in\n    tag_390:\n    tag_389:\n      sub\n        /* \"TokenMinter.sol\":9565:9688  if(classToMint == NFT_CLASS.COMMON)... */\n      tag_391\n      jumpi\n        /* \"TokenMinter.sol\":9617:9646  _commonNFTsMinted.increment() */\n      tag_392\n        /* \"TokenMinter.sol\":9617:9634  _commonNFTsMinted */\n      0x0a\n        /* \"TokenMinter.sol\":9617:9644  _commonNFTsMinted.increment */\n      tag_371\n        /* \"TokenMinter.sol\":9617:9646  _commonNFTsMinted.increment() */\n      jump\t// in\n    tag_392:\n        /* \"TokenMinter.sol\":9565:9688  if(classToMint == NFT_CLASS.COMMON)... */\n      jump(tag_393)\n    tag_391:\n        /* \"TokenMinter.sol\":9665:9688  revert(\"Invalid class\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_394\n      swap1\n      tag_310\n      jump\t// in\n    tag_394:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"TokenMinter.sol\":9565:9688  if(classToMint == NFT_CLASS.COMMON)... */\n    tag_393:\n        /* \"TokenMinter.sol\":9461:9688  if(classToMint == NFT_CLASS.UNCOMMON)... */\n    tag_386:\n        /* \"TokenMinter.sol\":9365:9688  if(classToMint == NFT_CLASS.RARE)... */\n    tag_379:\n        /* \"TokenMinter.sol\":9265:9688  if(classToMint == NFT_CLASS.LEGEND)... */\n    tag_372:\n        /* \"TokenMinter.sol\":9011:9025  currentIndex++ */\n      dup1\n      dup1\n      tag_395\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n      swap2\n      pop\n      pop\n        /* \"TokenMinter.sol\":8938:9700  for(uint256 currentIndex = mintStartIndex; currentIndex <= mintEndIndex; currentIndex++) {... */\n      jump(tag_352)\n    tag_353:\n      pop\n        /* \"TokenMinter.sol\":9861:9862  1 */\n      0x01\n        /* \"TokenMinter.sol\":9844:9858  mintStartIndex */\n      dup4\n        /* \"TokenMinter.sol\":9823:9841  actualMintEndIndex */\n      dup3\n        /* \"TokenMinter.sol\":9823:9858  actualMintEndIndex - mintStartIndex */\n      tag_397\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"TokenMinter.sol\":9823:9862  actualMintEndIndex - mintStartIndex + 1 */\n      tag_399\n      swap2\n      swap1\n      tag_400\n      jump\t// in\n    tag_399:\n        /* \"TokenMinter.sol\":9811:9862  numMinted = actualMintEndIndex - mintStartIndex + 1 */\n      swap4\n      pop\n        /* \"TokenMinter.sol\":8488:9869  { ... */\n      pop\n      pop\n      pop\n        /* \"TokenMinter.sol\":8361:9869  function _mintNFTs(address toAddr, uint256 numToMint, NFT_CLASS classToMint) private whenNotPaused  returns (uint256 numMinted){ ... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap1\n      tag_404\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_402:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_408\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_409\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_410\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_410:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_412\n      swap1\n      tag_413\n      jump\t// in\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_411:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_415\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_416\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      dup1\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_418\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_409\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_419\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_419:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_422\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_424\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_409\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_425\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_425:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_416:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_429\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_70\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_429:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_431\n      swap1\n      tag_432\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_430:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_433:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_434:\n        /* \"#utility.yul\":177:201   */\n      tag_493\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_433\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_41:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_495\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_434\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_436:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_438:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_439:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_501\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_438\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_440:\n        /* \"#utility.yul\":1076:1100   */\n      tag_503\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_439\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_504:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_441:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_506\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_440\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_442:\n        /* \"#utility.yul\":1349:1373   */\n      tag_508\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_433\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_509:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_443:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_511\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_442\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_48:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_514\n      tag_436\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1642:1761   */\n    tag_513:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_515\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_441\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_516\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_443\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_56:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_519\n      tag_436\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":2105:2224   */\n    tag_518:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_520\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_441\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2454   */\n    tag_444:\n        /* \"#utility.yul\":2398:2405   */\n      0x00\n        /* \"#utility.yul\":2441:2446   */\n      dup2\n        /* \"#utility.yul\":2434:2447   */\n      iszero\n        /* \"#utility.yul\":2427:2448   */\n      iszero\n        /* \"#utility.yul\":2416:2448   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2569   */\n    tag_445:\n        /* \"#utility.yul\":2541:2562   */\n      tag_523\n        /* \"#utility.yul\":2556:2561   */\n      dup2\n        /* \"#utility.yul\":2541:2562   */\n      tag_444\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":2536:2539   */\n      dup3\n        /* \"#utility.yul\":2529:2563   */\n      mstore\n        /* \"#utility.yul\":2460:2569   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2575:2785   */\n    tag_72:\n        /* \"#utility.yul\":2662:2666   */\n      0x00\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup3\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2677:2703   */\n      swap1\n      pop\n        /* \"#utility.yul\":2713:2778   */\n      tag_525\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2751:2757   */\n      dup5\n        /* \"#utility.yul\":2713:2778   */\n      tag_445\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2575:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2909   */\n    tag_446:\n        /* \"#utility.yul\":2878:2902   */\n      tag_527\n        /* \"#utility.yul\":2896:2901   */\n      dup2\n        /* \"#utility.yul\":2878:2902   */\n      tag_439\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":2873:2876   */\n      dup3\n        /* \"#utility.yul\":2866:2903   */\n      mstore\n        /* \"#utility.yul\":2791:2909   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3137   */\n    tag_97:\n        /* \"#utility.yul\":3008:3012   */\n      0x00\n        /* \"#utility.yul\":3046:3048   */\n      0x20\n        /* \"#utility.yul\":3035:3044   */\n      dup3\n        /* \"#utility.yul\":3031:3049   */\n      add\n        /* \"#utility.yul\":3023:3049   */\n      swap1\n      pop\n        /* \"#utility.yul\":3059:3130   */\n      tag_529\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3116:3125   */\n      dup4\n        /* \"#utility.yul\":3112:3129   */\n      add\n        /* \"#utility.yul\":3103:3109   */\n      dup5\n        /* \"#utility.yul\":3059:3130   */\n      tag_446\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":2915:3137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3256   */\n    tag_447:\n        /* \"#utility.yul\":3230:3231   */\n      0x05\n        /* \"#utility.yul\":3223:3228   */\n      dup2\n        /* \"#utility.yul\":3220:3232   */\n      lt\n        /* \"#utility.yul\":3210:3250   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":3246:3247   */\n      0x00\n        /* \"#utility.yul\":3243:3244   */\n      dup1\n        /* \"#utility.yul\":3236:3248   */\n      revert\n        /* \"#utility.yul\":3210:3250   */\n    tag_531:\n        /* \"#utility.yul\":3143:3256   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3262:3429   */\n    tag_448:\n        /* \"#utility.yul\":3322:3327   */\n      0x00\n        /* \"#utility.yul\":3360:3366   */\n      dup2\n        /* \"#utility.yul\":3347:3367   */\n      calldataload\n        /* \"#utility.yul\":3338:3367   */\n      swap1\n      pop\n        /* \"#utility.yul\":3376:3423   */\n      tag_533\n        /* \"#utility.yul\":3417:3422   */\n      dup2\n        /* \"#utility.yul\":3376:3423   */\n      tag_447\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3262:3429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3435:3937   */\n    tag_126:\n        /* \"#utility.yul\":3517:3523   */\n      0x00\n        /* \"#utility.yul\":3525:3531   */\n      dup1\n        /* \"#utility.yul\":3574:3576   */\n      0x40\n        /* \"#utility.yul\":3562:3571   */\n      dup4\n        /* \"#utility.yul\":3553:3560   */\n      dup6\n        /* \"#utility.yul\":3549:3572   */\n      sub\n        /* \"#utility.yul\":3545:3577   */\n      slt\n        /* \"#utility.yul\":3542:3661   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":3580:3659   */\n      tag_536\n      tag_436\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":3542:3661   */\n    tag_535:\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3725:3778   */\n      tag_537\n        /* \"#utility.yul\":3770:3777   */\n      dup6\n        /* \"#utility.yul\":3761:3767   */\n      dup3\n        /* \"#utility.yul\":3750:3759   */\n      dup7\n        /* \"#utility.yul\":3746:3768   */\n      add\n        /* \"#utility.yul\":3725:3778   */\n      tag_443\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3715:3778   */\n      swap3\n      pop\n        /* \"#utility.yul\":3671:3788   */\n      pop\n        /* \"#utility.yul\":3827:3829   */\n      0x20\n        /* \"#utility.yul\":3853:3920   */\n      tag_538\n        /* \"#utility.yul\":3912:3919   */\n      dup6\n        /* \"#utility.yul\":3903:3909   */\n      dup3\n        /* \"#utility.yul\":3892:3901   */\n      dup7\n        /* \"#utility.yul\":3888:3910   */\n      add\n        /* \"#utility.yul\":3853:3920   */\n      tag_448\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":3843:3920   */\n      swap2\n      pop\n        /* \"#utility.yul\":3798:3930   */\n      pop\n        /* \"#utility.yul\":3435:3937   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3943:4275   */\n    tag_129:\n        /* \"#utility.yul\":4064:4068   */\n      0x00\n        /* \"#utility.yul\":4102:4104   */\n      0x40\n        /* \"#utility.yul\":4091:4100   */\n      dup3\n        /* \"#utility.yul\":4087:4105   */\n      add\n        /* \"#utility.yul\":4079:4105   */\n      swap1\n      pop\n        /* \"#utility.yul\":4115:4186   */\n      tag_540\n        /* \"#utility.yul\":4183:4184   */\n      0x00\n        /* \"#utility.yul\":4172:4181   */\n      dup4\n        /* \"#utility.yul\":4168:4185   */\n      add\n        /* \"#utility.yul\":4159:4165   */\n      dup6\n        /* \"#utility.yul\":4115:4186   */\n      tag_434\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":4196:4268   */\n      tag_541\n        /* \"#utility.yul\":4264:4266   */\n      0x20\n        /* \"#utility.yul\":4253:4262   */\n      dup4\n        /* \"#utility.yul\":4249:4267   */\n      add\n        /* \"#utility.yul\":4240:4246   */\n      dup5\n        /* \"#utility.yul\":4196:4268   */\n      tag_434\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3943:4275   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4281:4450   */\n    tag_449:\n        /* \"#utility.yul\":4365:4376   */\n      0x00\n        /* \"#utility.yul\":4399:4405   */\n      dup3\n        /* \"#utility.yul\":4394:4397   */\n      dup3\n        /* \"#utility.yul\":4387:4406   */\n      mstore\n        /* \"#utility.yul\":4439:4443   */\n      0x20\n        /* \"#utility.yul\":4434:4437   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      add\n        /* \"#utility.yul\":4415:4444   */\n      swap1\n      pop\n        /* \"#utility.yul\":4281:4450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4456:4613   */\n    tag_450:\n        /* \"#utility.yul\":4596:4605   */\n      0x4e6f204175746800000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4592:4593   */\n      0x00\n        /* \"#utility.yul\":4584:4590   */\n      dup3\n        /* \"#utility.yul\":4580:4594   */\n      add\n        /* \"#utility.yul\":4573:4606   */\n      mstore\n        /* \"#utility.yul\":4456:4613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4984   */\n    tag_451:\n        /* \"#utility.yul\":4761:4764   */\n      0x00\n        /* \"#utility.yul\":4782:4848   */\n      tag_545\n        /* \"#utility.yul\":4846:4847   */\n      0x07\n        /* \"#utility.yul\":4841:4844   */\n      dup4\n        /* \"#utility.yul\":4782:4848   */\n      tag_449\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":4775:4848   */\n      swap2\n      pop\n        /* \"#utility.yul\":4857:4950   */\n      tag_546\n        /* \"#utility.yul\":4946:4949   */\n      dup3\n        /* \"#utility.yul\":4857:4950   */\n      tag_450\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":4975:4977   */\n      0x20\n        /* \"#utility.yul\":4970:4973   */\n      dup3\n        /* \"#utility.yul\":4966:4978   */\n      add\n        /* \"#utility.yul\":4959:4978   */\n      swap1\n      pop\n        /* \"#utility.yul\":4619:4984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4990:5409   */\n    tag_158:\n        /* \"#utility.yul\":5156:5160   */\n      0x00\n        /* \"#utility.yul\":5194:5196   */\n      0x20\n        /* \"#utility.yul\":5183:5192   */\n      dup3\n        /* \"#utility.yul\":5179:5197   */\n      add\n        /* \"#utility.yul\":5171:5197   */\n      swap1\n      pop\n        /* \"#utility.yul\":5243:5252   */\n      dup2\n        /* \"#utility.yul\":5237:5241   */\n      dup2\n        /* \"#utility.yul\":5233:5253   */\n      sub\n        /* \"#utility.yul\":5229:5230   */\n      0x00\n        /* \"#utility.yul\":5218:5227   */\n      dup4\n        /* \"#utility.yul\":5214:5231   */\n      add\n        /* \"#utility.yul\":5207:5254   */\n      mstore\n        /* \"#utility.yul\":5271:5402   */\n      tag_548\n        /* \"#utility.yul\":5397:5401   */\n      dup2\n        /* \"#utility.yul\":5271:5402   */\n      tag_451\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":5263:5402   */\n      swap1\n      pop\n        /* \"#utility.yul\":4990:5409   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5415:5581   */\n    tag_452:\n        /* \"#utility.yul\":5555:5573   */\n      0x416c726561647920756e6c6f636b656400000000000000000000000000000000\n        /* \"#utility.yul\":5551:5552   */\n      0x00\n        /* \"#utility.yul\":5543:5549   */\n      dup3\n        /* \"#utility.yul\":5539:5553   */\n      add\n        /* \"#utility.yul\":5532:5574   */\n      mstore\n        /* \"#utility.yul\":5415:5581   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5587:5953   */\n    tag_453:\n        /* \"#utility.yul\":5729:5732   */\n      0x00\n        /* \"#utility.yul\":5750:5817   */\n      tag_551\n        /* \"#utility.yul\":5814:5816   */\n      0x10\n        /* \"#utility.yul\":5809:5812   */\n      dup4\n        /* \"#utility.yul\":5750:5817   */\n      tag_449\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":5743:5817   */\n      swap2\n      pop\n        /* \"#utility.yul\":5826:5919   */\n      tag_552\n        /* \"#utility.yul\":5915:5918   */\n      dup3\n        /* \"#utility.yul\":5826:5919   */\n      tag_452\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":5944:5946   */\n      0x20\n        /* \"#utility.yul\":5939:5942   */\n      dup3\n        /* \"#utility.yul\":5935:5947   */\n      add\n        /* \"#utility.yul\":5928:5947   */\n      swap1\n      pop\n        /* \"#utility.yul\":5587:5953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5959:6378   */\n    tag_161:\n        /* \"#utility.yul\":6125:6129   */\n      0x00\n        /* \"#utility.yul\":6163:6165   */\n      0x20\n        /* \"#utility.yul\":6152:6161   */\n      dup3\n        /* \"#utility.yul\":6148:6166   */\n      add\n        /* \"#utility.yul\":6140:6166   */\n      swap1\n      pop\n        /* \"#utility.yul\":6212:6221   */\n      dup2\n        /* \"#utility.yul\":6206:6210   */\n      dup2\n        /* \"#utility.yul\":6202:6222   */\n      sub\n        /* \"#utility.yul\":6198:6199   */\n      0x00\n        /* \"#utility.yul\":6187:6196   */\n      dup4\n        /* \"#utility.yul\":6183:6200   */\n      add\n        /* \"#utility.yul\":6176:6223   */\n      mstore\n        /* \"#utility.yul\":6240:6371   */\n      tag_554\n        /* \"#utility.yul\":6366:6370   */\n      dup2\n        /* \"#utility.yul\":6240:6371   */\n      tag_453\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":6232:6371   */\n      swap1\n      pop\n        /* \"#utility.yul\":5959:6378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6384:6550   */\n    tag_454:\n        /* \"#utility.yul\":6524:6542   */\n      0x4865726f73206e6f74206d696e74656400000000000000000000000000000000\n        /* \"#utility.yul\":6520:6521   */\n      0x00\n        /* \"#utility.yul\":6512:6518   */\n      dup3\n        /* \"#utility.yul\":6508:6522   */\n      add\n        /* \"#utility.yul\":6501:6543   */\n      mstore\n        /* \"#utility.yul\":6384:6550   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6556:6922   */\n    tag_455:\n        /* \"#utility.yul\":6698:6701   */\n      0x00\n        /* \"#utility.yul\":6719:6786   */\n      tag_557\n        /* \"#utility.yul\":6783:6785   */\n      0x10\n        /* \"#utility.yul\":6778:6781   */\n      dup4\n        /* \"#utility.yul\":6719:6786   */\n      tag_449\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":6712:6786   */\n      swap2\n      pop\n        /* \"#utility.yul\":6795:6888   */\n      tag_558\n        /* \"#utility.yul\":6884:6887   */\n      dup3\n        /* \"#utility.yul\":6795:6888   */\n      tag_454\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":6913:6915   */\n      0x20\n        /* \"#utility.yul\":6908:6911   */\n      dup3\n        /* \"#utility.yul\":6904:6916   */\n      add\n        /* \"#utility.yul\":6897:6916   */\n      swap1\n      pop\n        /* \"#utility.yul\":6556:6922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6928:7347   */\n    tag_164:\n        /* \"#utility.yul\":7094:7098   */\n      0x00\n        /* \"#utility.yul\":7132:7134   */\n      0x20\n        /* \"#utility.yul\":7121:7130   */\n      dup3\n        /* \"#utility.yul\":7117:7135   */\n      add\n        /* \"#utility.yul\":7109:7135   */\n      swap1\n      pop\n        /* \"#utility.yul\":7181:7190   */\n      dup2\n        /* \"#utility.yul\":7175:7179   */\n      dup2\n        /* \"#utility.yul\":7171:7191   */\n      sub\n        /* \"#utility.yul\":7167:7168   */\n      0x00\n        /* \"#utility.yul\":7156:7165   */\n      dup4\n        /* \"#utility.yul\":7152:7169   */\n      add\n        /* \"#utility.yul\":7145:7192   */\n      mstore\n        /* \"#utility.yul\":7209:7340   */\n      tag_560\n        /* \"#utility.yul\":7335:7339   */\n      dup2\n        /* \"#utility.yul\":7209:7340   */\n      tag_455\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":7201:7340   */\n      swap1\n      pop\n        /* \"#utility.yul\":6928:7347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7353:7519   */\n    tag_456:\n        /* \"#utility.yul\":7493:7511   */\n      0x556e6d696e746564206c6567656e647300000000000000000000000000000000\n        /* \"#utility.yul\":7489:7490   */\n      0x00\n        /* \"#utility.yul\":7481:7487   */\n      dup3\n        /* \"#utility.yul\":7477:7491   */\n      add\n        /* \"#utility.yul\":7470:7512   */\n      mstore\n        /* \"#utility.yul\":7353:7519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7525:7891   */\n    tag_457:\n        /* \"#utility.yul\":7667:7670   */\n      0x00\n        /* \"#utility.yul\":7688:7755   */\n      tag_563\n        /* \"#utility.yul\":7752:7754   */\n      0x10\n        /* \"#utility.yul\":7747:7750   */\n      dup4\n        /* \"#utility.yul\":7688:7755   */\n      tag_449\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":7681:7755   */\n      swap2\n      pop\n        /* \"#utility.yul\":7764:7857   */\n      tag_564\n        /* \"#utility.yul\":7853:7856   */\n      dup3\n        /* \"#utility.yul\":7764:7857   */\n      tag_456\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7882:7884   */\n      0x20\n        /* \"#utility.yul\":7877:7880   */\n      dup3\n        /* \"#utility.yul\":7873:7885   */\n      add\n        /* \"#utility.yul\":7866:7885   */\n      swap1\n      pop\n        /* \"#utility.yul\":7525:7891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7897:8316   */\n    tag_170:\n        /* \"#utility.yul\":8063:8067   */\n      0x00\n        /* \"#utility.yul\":8101:8103   */\n      0x20\n        /* \"#utility.yul\":8090:8099   */\n      dup3\n        /* \"#utility.yul\":8086:8104   */\n      add\n        /* \"#utility.yul\":8078:8104   */\n      swap1\n      pop\n        /* \"#utility.yul\":8150:8159   */\n      dup2\n        /* \"#utility.yul\":8144:8148   */\n      dup2\n        /* \"#utility.yul\":8140:8160   */\n      sub\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8125:8134   */\n      dup4\n        /* \"#utility.yul\":8121:8138   */\n      add\n        /* \"#utility.yul\":8114:8161   */\n      mstore\n        /* \"#utility.yul\":8178:8309   */\n      tag_566\n        /* \"#utility.yul\":8304:8308   */\n      dup2\n        /* \"#utility.yul\":8178:8309   */\n      tag_457\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":8170:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":7897:8316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8322:8486   */\n    tag_458:\n        /* \"#utility.yul\":8462:8478   */\n      0x556e6d696e746564207261726573000000000000000000000000000000000000\n        /* \"#utility.yul\":8458:8459   */\n      0x00\n        /* \"#utility.yul\":8450:8456   */\n      dup3\n        /* \"#utility.yul\":8446:8460   */\n      add\n        /* \"#utility.yul\":8439:8479   */\n      mstore\n        /* \"#utility.yul\":8322:8486   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8492:8858   */\n    tag_459:\n        /* \"#utility.yul\":8634:8637   */\n      0x00\n        /* \"#utility.yul\":8655:8722   */\n      tag_569\n        /* \"#utility.yul\":8719:8721   */\n      0x0e\n        /* \"#utility.yul\":8714:8717   */\n      dup4\n        /* \"#utility.yul\":8655:8722   */\n      tag_449\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":8648:8722   */\n      swap2\n      pop\n        /* \"#utility.yul\":8731:8824   */\n      tag_570\n        /* \"#utility.yul\":8820:8823   */\n      dup3\n        /* \"#utility.yul\":8731:8824   */\n      tag_458\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":8849:8851   */\n      0x20\n        /* \"#utility.yul\":8844:8847   */\n      dup3\n        /* \"#utility.yul\":8840:8852   */\n      add\n        /* \"#utility.yul\":8833:8852   */\n      swap1\n      pop\n        /* \"#utility.yul\":8492:8858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8864:9283   */\n    tag_175:\n        /* \"#utility.yul\":9030:9034   */\n      0x00\n        /* \"#utility.yul\":9068:9070   */\n      0x20\n        /* \"#utility.yul\":9057:9066   */\n      dup3\n        /* \"#utility.yul\":9053:9071   */\n      add\n        /* \"#utility.yul\":9045:9071   */\n      swap1\n      pop\n        /* \"#utility.yul\":9117:9126   */\n      dup2\n        /* \"#utility.yul\":9111:9115   */\n      dup2\n        /* \"#utility.yul\":9107:9127   */\n      sub\n        /* \"#utility.yul\":9103:9104   */\n      0x00\n        /* \"#utility.yul\":9092:9101   */\n      dup4\n        /* \"#utility.yul\":9088:9105   */\n      add\n        /* \"#utility.yul\":9081:9128   */\n      mstore\n        /* \"#utility.yul\":9145:9276   */\n      tag_572\n        /* \"#utility.yul\":9271:9275   */\n      dup2\n        /* \"#utility.yul\":9145:9276   */\n      tag_459\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":9137:9276   */\n      swap1\n      pop\n        /* \"#utility.yul\":8864:9283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9289:9457   */\n    tag_460:\n        /* \"#utility.yul\":9429:9449   */\n      0x556e6d696e74656420756e636f6d6d6f6e730000000000000000000000000000\n        /* \"#utility.yul\":9425:9426   */\n      0x00\n        /* \"#utility.yul\":9417:9423   */\n      dup3\n        /* \"#utility.yul\":9413:9427   */\n      add\n        /* \"#utility.yul\":9406:9450   */\n      mstore\n        /* \"#utility.yul\":9289:9457   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9463:9829   */\n    tag_461:\n        /* \"#utility.yul\":9605:9608   */\n      0x00\n        /* \"#utility.yul\":9626:9693   */\n      tag_575\n        /* \"#utility.yul\":9690:9692   */\n      0x12\n        /* \"#utility.yul\":9685:9688   */\n      dup4\n        /* \"#utility.yul\":9626:9693   */\n      tag_449\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":9619:9693   */\n      swap2\n      pop\n        /* \"#utility.yul\":9702:9795   */\n      tag_576\n        /* \"#utility.yul\":9791:9794   */\n      dup3\n        /* \"#utility.yul\":9702:9795   */\n      tag_460\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":9820:9822   */\n      0x20\n        /* \"#utility.yul\":9815:9818   */\n      dup3\n        /* \"#utility.yul\":9811:9823   */\n      add\n        /* \"#utility.yul\":9804:9823   */\n      swap1\n      pop\n        /* \"#utility.yul\":9463:9829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9835:10254   */\n    tag_180:\n        /* \"#utility.yul\":10001:10005   */\n      0x00\n        /* \"#utility.yul\":10039:10041   */\n      0x20\n        /* \"#utility.yul\":10028:10037   */\n      dup3\n        /* \"#utility.yul\":10024:10042   */\n      add\n        /* \"#utility.yul\":10016:10042   */\n      swap1\n      pop\n        /* \"#utility.yul\":10088:10097   */\n      dup2\n        /* \"#utility.yul\":10082:10086   */\n      dup2\n        /* \"#utility.yul\":10078:10098   */\n      sub\n        /* \"#utility.yul\":10074:10075   */\n      0x00\n        /* \"#utility.yul\":10063:10072   */\n      dup4\n        /* \"#utility.yul\":10059:10076   */\n      add\n        /* \"#utility.yul\":10052:10099   */\n      mstore\n        /* \"#utility.yul\":10116:10247   */\n      tag_578\n        /* \"#utility.yul\":10242:10246   */\n      dup2\n        /* \"#utility.yul\":10116:10247   */\n      tag_461\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":10108:10247   */\n      swap1\n      pop\n        /* \"#utility.yul\":9835:10254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10260:10426   */\n    tag_462:\n        /* \"#utility.yul\":10400:10418   */\n      0x556e6d696e74656420636f6d6d6f6e7300000000000000000000000000000000\n        /* \"#utility.yul\":10396:10397   */\n      0x00\n        /* \"#utility.yul\":10388:10394   */\n      dup3\n        /* \"#utility.yul\":10384:10398   */\n      add\n        /* \"#utility.yul\":10377:10419   */\n      mstore\n        /* \"#utility.yul\":10260:10426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10432:10798   */\n    tag_463:\n        /* \"#utility.yul\":10574:10577   */\n      0x00\n        /* \"#utility.yul\":10595:10662   */\n      tag_581\n        /* \"#utility.yul\":10659:10661   */\n      0x10\n        /* \"#utility.yul\":10654:10657   */\n      dup4\n        /* \"#utility.yul\":10595:10662   */\n      tag_449\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":10588:10662   */\n      swap2\n      pop\n        /* \"#utility.yul\":10671:10764   */\n      tag_582\n        /* \"#utility.yul\":10760:10763   */\n      dup3\n        /* \"#utility.yul\":10671:10764   */\n      tag_462\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":10789:10791   */\n      0x20\n        /* \"#utility.yul\":10784:10787   */\n      dup3\n        /* \"#utility.yul\":10780:10792   */\n      add\n        /* \"#utility.yul\":10773:10792   */\n      swap1\n      pop\n        /* \"#utility.yul\":10432:10798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10804:11223   */\n    tag_185:\n        /* \"#utility.yul\":10970:10974   */\n      0x00\n        /* \"#utility.yul\":11008:11010   */\n      0x20\n        /* \"#utility.yul\":10997:11006   */\n      dup3\n        /* \"#utility.yul\":10993:11011   */\n      add\n        /* \"#utility.yul\":10985:11011   */\n      swap1\n      pop\n        /* \"#utility.yul\":11057:11066   */\n      dup2\n        /* \"#utility.yul\":11051:11055   */\n      dup2\n        /* \"#utility.yul\":11047:11067   */\n      sub\n        /* \"#utility.yul\":11043:11044   */\n      0x00\n        /* \"#utility.yul\":11032:11041   */\n      dup4\n        /* \"#utility.yul\":11028:11045   */\n      add\n        /* \"#utility.yul\":11021:11068   */\n      mstore\n        /* \"#utility.yul\":11085:11216   */\n      tag_584\n        /* \"#utility.yul\":11211:11215   */\n      dup2\n        /* \"#utility.yul\":11085:11216   */\n      tag_463\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":11077:11216   */\n      swap1\n      pop\n        /* \"#utility.yul\":10804:11223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11229:11393   */\n    tag_464:\n        /* \"#utility.yul\":11369:11385   */\n      0x416c7265616479206d696e746564000000000000000000000000000000000000\n        /* \"#utility.yul\":11365:11366   */\n      0x00\n        /* \"#utility.yul\":11357:11363   */\n      dup3\n        /* \"#utility.yul\":11353:11367   */\n      add\n        /* \"#utility.yul\":11346:11386   */\n      mstore\n        /* \"#utility.yul\":11229:11393   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11399:11765   */\n    tag_465:\n        /* \"#utility.yul\":11541:11544   */\n      0x00\n        /* \"#utility.yul\":11562:11629   */\n      tag_587\n        /* \"#utility.yul\":11626:11628   */\n      0x0e\n        /* \"#utility.yul\":11621:11624   */\n      dup4\n        /* \"#utility.yul\":11562:11629   */\n      tag_449\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":11555:11629   */\n      swap2\n      pop\n        /* \"#utility.yul\":11638:11731   */\n      tag_588\n        /* \"#utility.yul\":11727:11730   */\n      dup3\n        /* \"#utility.yul\":11638:11731   */\n      tag_464\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":11756:11758   */\n      0x20\n        /* \"#utility.yul\":11751:11754   */\n      dup3\n        /* \"#utility.yul\":11747:11759   */\n      add\n        /* \"#utility.yul\":11740:11759   */\n      swap1\n      pop\n        /* \"#utility.yul\":11399:11765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11771:12190   */\n    tag_197:\n        /* \"#utility.yul\":11937:11941   */\n      0x00\n        /* \"#utility.yul\":11975:11977   */\n      0x20\n        /* \"#utility.yul\":11964:11973   */\n      dup3\n        /* \"#utility.yul\":11960:11978   */\n      add\n        /* \"#utility.yul\":11952:11978   */\n      swap1\n      pop\n        /* \"#utility.yul\":12024:12033   */\n      dup2\n        /* \"#utility.yul\":12018:12022   */\n      dup2\n        /* \"#utility.yul\":12014:12034   */\n      sub\n        /* \"#utility.yul\":12010:12011   */\n      0x00\n        /* \"#utility.yul\":11999:12008   */\n      dup4\n        /* \"#utility.yul\":11995:12012   */\n      add\n        /* \"#utility.yul\":11988:12035   */\n      mstore\n        /* \"#utility.yul\":12052:12183   */\n      tag_590\n        /* \"#utility.yul\":12178:12182   */\n      dup2\n        /* \"#utility.yul\":12052:12183   */\n      tag_465\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":12044:12183   */\n      swap1\n      pop\n        /* \"#utility.yul\":11771:12190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12196:12357   */\n    tag_466:\n        /* \"#utility.yul\":12336:12349   */\n      0x6e756d546f4d696e742030000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12332:12333   */\n      0x00\n        /* \"#utility.yul\":12324:12330   */\n      dup3\n        /* \"#utility.yul\":12320:12334   */\n      add\n        /* \"#utility.yul\":12313:12350   */\n      mstore\n        /* \"#utility.yul\":12196:12357   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12363:12729   */\n    tag_467:\n        /* \"#utility.yul\":12505:12508   */\n      0x00\n        /* \"#utility.yul\":12526:12593   */\n      tag_593\n        /* \"#utility.yul\":12590:12592   */\n      0x0b\n        /* \"#utility.yul\":12585:12588   */\n      dup4\n        /* \"#utility.yul\":12526:12593   */\n      tag_449\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":12519:12593   */\n      swap2\n      pop\n        /* \"#utility.yul\":12602:12695   */\n      tag_594\n        /* \"#utility.yul\":12691:12694   */\n      dup3\n        /* \"#utility.yul\":12602:12695   */\n      tag_466\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":12720:12722   */\n      0x20\n        /* \"#utility.yul\":12715:12718   */\n      dup3\n        /* \"#utility.yul\":12711:12723   */\n      add\n        /* \"#utility.yul\":12704:12723   */\n      swap1\n      pop\n        /* \"#utility.yul\":12363:12729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12735:13154   */\n    tag_259:\n        /* \"#utility.yul\":12901:12905   */\n      0x00\n        /* \"#utility.yul\":12939:12941   */\n      0x20\n        /* \"#utility.yul\":12928:12937   */\n      dup3\n        /* \"#utility.yul\":12924:12942   */\n      add\n        /* \"#utility.yul\":12916:12942   */\n      swap1\n      pop\n        /* \"#utility.yul\":12988:12997   */\n      dup2\n        /* \"#utility.yul\":12982:12986   */\n      dup2\n        /* \"#utility.yul\":12978:12998   */\n      sub\n        /* \"#utility.yul\":12974:12975   */\n      0x00\n        /* \"#utility.yul\":12963:12972   */\n      dup4\n        /* \"#utility.yul\":12959:12976   */\n      add\n        /* \"#utility.yul\":12952:12999   */\n      mstore\n        /* \"#utility.yul\":13016:13147   */\n      tag_596\n        /* \"#utility.yul\":13142:13146   */\n      dup2\n        /* \"#utility.yul\":13016:13147   */\n      tag_467\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":13008:13147   */\n      swap1\n      pop\n        /* \"#utility.yul\":12735:13154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13160:13340   */\n    tag_264:\n        /* \"#utility.yul\":13208:13285   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13205:13206   */\n      0x00\n        /* \"#utility.yul\":13198:13286   */\n      mstore\n        /* \"#utility.yul\":13305:13309   */\n      0x21\n        /* \"#utility.yul\":13302:13303   */\n      0x04\n        /* \"#utility.yul\":13295:13310   */\n      mstore\n        /* \"#utility.yul\":13329:13333   */\n      0x24\n        /* \"#utility.yul\":13326:13327   */\n      0x00\n        /* \"#utility.yul\":13319:13334   */\n      revert\n        /* \"#utility.yul\":13346:13435   */\n    tag_468:\n        /* \"#utility.yul\":13382:13389   */\n      0x00\n        /* \"#utility.yul\":13422:13428   */\n      0xffff\n        /* \"#utility.yul\":13415:13420   */\n      dup3\n        /* \"#utility.yul\":13411:13429   */\n      and\n        /* \"#utility.yul\":13400:13429   */\n      swap1\n      pop\n        /* \"#utility.yul\":13346:13435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13441:13621   */\n    tag_469:\n        /* \"#utility.yul\":13489:13566   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13486:13487   */\n      0x00\n        /* \"#utility.yul\":13479:13567   */\n      mstore\n        /* \"#utility.yul\":13586:13590   */\n      0x11\n        /* \"#utility.yul\":13583:13584   */\n      0x04\n        /* \"#utility.yul\":13576:13591   */\n      mstore\n        /* \"#utility.yul\":13610:13614   */\n      0x24\n        /* \"#utility.yul\":13607:13608   */\n      0x00\n        /* \"#utility.yul\":13600:13615   */\n      revert\n        /* \"#utility.yul\":13627:13820   */\n    tag_270:\n        /* \"#utility.yul\":13666:13669   */\n      0x00\n        /* \"#utility.yul\":13685:13704   */\n      tag_601\n        /* \"#utility.yul\":13702:13703   */\n      dup3\n        /* \"#utility.yul\":13685:13704   */\n      tag_468\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":13680:13704   */\n      swap2\n      pop\n        /* \"#utility.yul\":13718:13737   */\n      tag_602\n        /* \"#utility.yul\":13735:13736   */\n      dup4\n        /* \"#utility.yul\":13718:13737   */\n      tag_468\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":13713:13737   */\n      swap3\n      pop\n        /* \"#utility.yul\":13760:13761   */\n      dup3\n        /* \"#utility.yul\":13757:13758   */\n      dup3\n        /* \"#utility.yul\":13753:13762   */\n      add\n        /* \"#utility.yul\":13746:13762   */\n      swap1\n      pop\n        /* \"#utility.yul\":13783:13789   */\n      0xffff\n        /* \"#utility.yul\":13778:13781   */\n      dup2\n        /* \"#utility.yul\":13775:13790   */\n      gt\n        /* \"#utility.yul\":13772:13813   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":13793:13811   */\n      tag_604\n      tag_469\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":13772:13813   */\n    tag_603:\n        /* \"#utility.yul\":13627:13820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13826:14022   */\n    tag_274:\n        /* \"#utility.yul\":13865:13869   */\n      0x00\n        /* \"#utility.yul\":13885:13904   */\n      tag_606\n        /* \"#utility.yul\":13902:13903   */\n      dup3\n        /* \"#utility.yul\":13885:13904   */\n      tag_468\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":13880:13904   */\n      swap2\n      pop\n        /* \"#utility.yul\":13918:13937   */\n      tag_607\n        /* \"#utility.yul\":13935:13936   */\n      dup4\n        /* \"#utility.yul\":13918:13937   */\n      tag_468\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":13913:13937   */\n      swap3\n      pop\n        /* \"#utility.yul\":13961:13962   */\n      dup3\n        /* \"#utility.yul\":13958:13959   */\n      dup3\n        /* \"#utility.yul\":13954:13963   */\n      sub\n        /* \"#utility.yul\":13946:13963   */\n      swap1\n      pop\n        /* \"#utility.yul\":13985:13991   */\n      0xffff\n        /* \"#utility.yul\":13979:13983   */\n      dup2\n        /* \"#utility.yul\":13976:13992   */\n      gt\n        /* \"#utility.yul\":13973:14015   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":13995:14013   */\n      tag_609\n      tag_469\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":13973:14015   */\n    tag_608:\n        /* \"#utility.yul\":13826:14022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14028:14191   */\n    tag_470:\n        /* \"#utility.yul\":14168:14183   */\n      0x496e76616c696420636c61737300000000000000000000000000000000000000\n        /* \"#utility.yul\":14164:14165   */\n      0x00\n        /* \"#utility.yul\":14156:14162   */\n      dup3\n        /* \"#utility.yul\":14152:14166   */\n      add\n        /* \"#utility.yul\":14145:14184   */\n      mstore\n        /* \"#utility.yul\":14028:14191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14197:14563   */\n    tag_471:\n        /* \"#utility.yul\":14339:14342   */\n      0x00\n        /* \"#utility.yul\":14360:14427   */\n      tag_612\n        /* \"#utility.yul\":14424:14426   */\n      0x0d\n        /* \"#utility.yul\":14419:14422   */\n      dup4\n        /* \"#utility.yul\":14360:14427   */\n      tag_449\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":14353:14427   */\n      swap2\n      pop\n        /* \"#utility.yul\":14436:14529   */\n      tag_613\n        /* \"#utility.yul\":14525:14528   */\n      dup3\n        /* \"#utility.yul\":14436:14529   */\n      tag_470\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":14554:14556   */\n      0x20\n        /* \"#utility.yul\":14549:14552   */\n      dup3\n        /* \"#utility.yul\":14545:14557   */\n      add\n        /* \"#utility.yul\":14538:14557   */\n      swap1\n      pop\n        /* \"#utility.yul\":14197:14563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14569:14988   */\n    tag_310:\n        /* \"#utility.yul\":14735:14739   */\n      0x00\n        /* \"#utility.yul\":14773:14775   */\n      0x20\n        /* \"#utility.yul\":14762:14771   */\n      dup3\n        /* \"#utility.yul\":14758:14776   */\n      add\n        /* \"#utility.yul\":14750:14776   */\n      swap1\n      pop\n        /* \"#utility.yul\":14822:14831   */\n      dup2\n        /* \"#utility.yul\":14816:14820   */\n      dup2\n        /* \"#utility.yul\":14812:14832   */\n      sub\n        /* \"#utility.yul\":14808:14809   */\n      0x00\n        /* \"#utility.yul\":14797:14806   */\n      dup4\n        /* \"#utility.yul\":14793:14810   */\n      add\n        /* \"#utility.yul\":14786:14833   */\n      mstore\n        /* \"#utility.yul\":14850:14981   */\n      tag_615\n        /* \"#utility.yul\":14976:14980   */\n      dup2\n        /* \"#utility.yul\":14850:14981   */\n      tag_471\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":14842:14981   */\n      swap1\n      pop\n        /* \"#utility.yul\":14569:14988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14994:15163   */\n    tag_472:\n        /* \"#utility.yul\":15134:15155   */\n      0x737570706c7920696e73756666696369656e7400000000000000000000000000\n        /* \"#utility.yul\":15130:15131   */\n      0x00\n        /* \"#utility.yul\":15122:15128   */\n      dup3\n        /* \"#utility.yul\":15118:15132   */\n      add\n        /* \"#utility.yul\":15111:15156   */\n      mstore\n        /* \"#utility.yul\":14994:15163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15169:15535   */\n    tag_473:\n        /* \"#utility.yul\":15311:15314   */\n      0x00\n        /* \"#utility.yul\":15332:15399   */\n      tag_618\n        /* \"#utility.yul\":15396:15398   */\n      0x13\n        /* \"#utility.yul\":15391:15394   */\n      dup4\n        /* \"#utility.yul\":15332:15399   */\n      tag_449\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":15325:15399   */\n      swap2\n      pop\n        /* \"#utility.yul\":15408:15501   */\n      tag_619\n        /* \"#utility.yul\":15497:15500   */\n      dup3\n        /* \"#utility.yul\":15408:15501   */\n      tag_472\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":15526:15528   */\n      0x20\n        /* \"#utility.yul\":15521:15524   */\n      dup3\n        /* \"#utility.yul\":15517:15529   */\n      add\n        /* \"#utility.yul\":15510:15529   */\n      swap1\n      pop\n        /* \"#utility.yul\":15169:15535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15541:15960   */\n    tag_314:\n        /* \"#utility.yul\":15707:15711   */\n      0x00\n        /* \"#utility.yul\":15745:15747   */\n      0x20\n        /* \"#utility.yul\":15734:15743   */\n      dup3\n        /* \"#utility.yul\":15730:15748   */\n      add\n        /* \"#utility.yul\":15722:15748   */\n      swap1\n      pop\n        /* \"#utility.yul\":15794:15803   */\n      dup2\n        /* \"#utility.yul\":15788:15792   */\n      dup2\n        /* \"#utility.yul\":15784:15804   */\n      sub\n        /* \"#utility.yul\":15780:15781   */\n      0x00\n        /* \"#utility.yul\":15769:15778   */\n      dup4\n        /* \"#utility.yul\":15765:15782   */\n      add\n        /* \"#utility.yul\":15758:15805   */\n      mstore\n        /* \"#utility.yul\":15822:15953   */\n      tag_621\n        /* \"#utility.yul\":15948:15952   */\n      dup2\n        /* \"#utility.yul\":15822:15953   */\n      tag_473\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":15814:15953   */\n      swap1\n      pop\n        /* \"#utility.yul\":15541:15960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15966:16140   */\n    tag_474:\n        /* \"#utility.yul\":16106:16132   */\n      0x6e6f207075626c696320726f756e6420756e6c6f636b65640000000000000000\n        /* \"#utility.yul\":16102:16103   */\n      0x00\n        /* \"#utility.yul\":16094:16100   */\n      dup3\n        /* \"#utility.yul\":16090:16104   */\n      add\n        /* \"#utility.yul\":16083:16133   */\n      mstore\n        /* \"#utility.yul\":15966:16140   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16146:16512   */\n    tag_475:\n        /* \"#utility.yul\":16288:16291   */\n      0x00\n        /* \"#utility.yul\":16309:16376   */\n      tag_624\n        /* \"#utility.yul\":16373:16375   */\n      0x18\n        /* \"#utility.yul\":16368:16371   */\n      dup4\n        /* \"#utility.yul\":16309:16376   */\n      tag_449\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":16302:16376   */\n      swap2\n      pop\n        /* \"#utility.yul\":16385:16478   */\n      tag_625\n        /* \"#utility.yul\":16474:16477   */\n      dup3\n        /* \"#utility.yul\":16385:16478   */\n      tag_474\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":16503:16505   */\n      0x20\n        /* \"#utility.yul\":16498:16501   */\n      dup3\n        /* \"#utility.yul\":16494:16506   */\n      add\n        /* \"#utility.yul\":16487:16506   */\n      swap1\n      pop\n        /* \"#utility.yul\":16146:16512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16518:16937   */\n    tag_325:\n        /* \"#utility.yul\":16684:16688   */\n      0x00\n        /* \"#utility.yul\":16722:16724   */\n      0x20\n        /* \"#utility.yul\":16711:16720   */\n      dup3\n        /* \"#utility.yul\":16707:16725   */\n      add\n        /* \"#utility.yul\":16699:16725   */\n      swap1\n      pop\n        /* \"#utility.yul\":16771:16780   */\n      dup2\n        /* \"#utility.yul\":16765:16769   */\n      dup2\n        /* \"#utility.yul\":16761:16781   */\n      sub\n        /* \"#utility.yul\":16757:16758   */\n      0x00\n        /* \"#utility.yul\":16746:16755   */\n      dup4\n        /* \"#utility.yul\":16742:16759   */\n      add\n        /* \"#utility.yul\":16735:16782   */\n      mstore\n        /* \"#utility.yul\":16799:16930   */\n      tag_627\n        /* \"#utility.yul\":16925:16929   */\n      dup2\n        /* \"#utility.yul\":16799:16930   */\n      tag_475\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":16791:16930   */\n      swap1\n      pop\n        /* \"#utility.yul\":16518:16937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16943:17168   */\n    tag_476:\n        /* \"#utility.yul\":17083:17117   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":17079:17080   */\n      0x00\n        /* \"#utility.yul\":17071:17077   */\n      dup3\n        /* \"#utility.yul\":17067:17081   */\n      add\n        /* \"#utility.yul\":17060:17118   */\n      mstore\n        /* \"#utility.yul\":17152:17160   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17147:17149   */\n      0x20\n        /* \"#utility.yul\":17139:17145   */\n      dup3\n        /* \"#utility.yul\":17135:17150   */\n      add\n        /* \"#utility.yul\":17128:17161   */\n      mstore\n        /* \"#utility.yul\":16943:17168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17174:17540   */\n    tag_477:\n        /* \"#utility.yul\":17316:17319   */\n      0x00\n        /* \"#utility.yul\":17337:17404   */\n      tag_630\n        /* \"#utility.yul\":17401:17403   */\n      0x26\n        /* \"#utility.yul\":17396:17399   */\n      dup4\n        /* \"#utility.yul\":17337:17404   */\n      tag_449\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":17330:17404   */\n      swap2\n      pop\n        /* \"#utility.yul\":17413:17506   */\n      tag_631\n        /* \"#utility.yul\":17502:17505   */\n      dup3\n        /* \"#utility.yul\":17413:17506   */\n      tag_476\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":17531:17533   */\n      0x40\n        /* \"#utility.yul\":17526:17529   */\n      dup3\n        /* \"#utility.yul\":17522:17534   */\n      add\n        /* \"#utility.yul\":17515:17534   */\n      swap1\n      pop\n        /* \"#utility.yul\":17174:17540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17546:17965   */\n    tag_335:\n        /* \"#utility.yul\":17712:17716   */\n      0x00\n        /* \"#utility.yul\":17750:17752   */\n      0x20\n        /* \"#utility.yul\":17739:17748   */\n      dup3\n        /* \"#utility.yul\":17735:17753   */\n      add\n        /* \"#utility.yul\":17727:17753   */\n      swap1\n      pop\n        /* \"#utility.yul\":17799:17808   */\n      dup2\n        /* \"#utility.yul\":17793:17797   */\n      dup2\n        /* \"#utility.yul\":17789:17809   */\n      sub\n        /* \"#utility.yul\":17785:17786   */\n      0x00\n        /* \"#utility.yul\":17774:17783   */\n      dup4\n        /* \"#utility.yul\":17770:17787   */\n      add\n        /* \"#utility.yul\":17763:17810   */\n      mstore\n        /* \"#utility.yul\":17827:17958   */\n      tag_633\n        /* \"#utility.yul\":17953:17957   */\n      dup2\n        /* \"#utility.yul\":17827:17958   */\n      tag_477\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":17819:17958   */\n      swap1\n      pop\n        /* \"#utility.yul\":17546:17965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17971:18137   */\n    tag_478:\n        /* \"#utility.yul\":18111:18129   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":18107:18108   */\n      0x00\n        /* \"#utility.yul\":18099:18105   */\n      dup3\n        /* \"#utility.yul\":18095:18109   */\n      add\n        /* \"#utility.yul\":18088:18130   */\n      mstore\n        /* \"#utility.yul\":17971:18137   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18143:18509   */\n    tag_479:\n        /* \"#utility.yul\":18285:18288   */\n      0x00\n        /* \"#utility.yul\":18306:18373   */\n      tag_636\n        /* \"#utility.yul\":18370:18372   */\n      0x10\n        /* \"#utility.yul\":18365:18368   */\n      dup4\n        /* \"#utility.yul\":18306:18373   */\n      tag_449\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":18299:18373   */\n      swap2\n      pop\n        /* \"#utility.yul\":18382:18475   */\n      tag_637\n        /* \"#utility.yul\":18471:18474   */\n      dup3\n        /* \"#utility.yul\":18382:18475   */\n      tag_478\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":18500:18502   */\n      0x20\n        /* \"#utility.yul\":18495:18498   */\n      dup3\n        /* \"#utility.yul\":18491:18503   */\n      add\n        /* \"#utility.yul\":18484:18503   */\n      swap1\n      pop\n        /* \"#utility.yul\":18143:18509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18515:18934   */\n    tag_345:\n        /* \"#utility.yul\":18681:18685   */\n      0x00\n        /* \"#utility.yul\":18719:18721   */\n      0x20\n        /* \"#utility.yul\":18708:18717   */\n      dup3\n        /* \"#utility.yul\":18704:18722   */\n      add\n        /* \"#utility.yul\":18696:18722   */\n      swap1\n      pop\n        /* \"#utility.yul\":18768:18777   */\n      dup2\n        /* \"#utility.yul\":18762:18766   */\n      dup2\n        /* \"#utility.yul\":18758:18778   */\n      sub\n        /* \"#utility.yul\":18754:18755   */\n      0x00\n        /* \"#utility.yul\":18743:18752   */\n      dup4\n        /* \"#utility.yul\":18739:18756   */\n      add\n        /* \"#utility.yul\":18732:18779   */\n      mstore\n        /* \"#utility.yul\":18796:18927   */\n      tag_639\n        /* \"#utility.yul\":18922:18926   */\n      dup2\n        /* \"#utility.yul\":18796:18927   */\n      tag_479\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":18788:18927   */\n      swap1\n      pop\n        /* \"#utility.yul\":18515:18934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18940:19272   */\n    tag_356:\n        /* \"#utility.yul\":19061:19065   */\n      0x00\n        /* \"#utility.yul\":19099:19101   */\n      0x40\n        /* \"#utility.yul\":19088:19097   */\n      dup3\n        /* \"#utility.yul\":19084:19102   */\n      add\n        /* \"#utility.yul\":19076:19102   */\n      swap1\n      pop\n        /* \"#utility.yul\":19112:19183   */\n      tag_641\n        /* \"#utility.yul\":19180:19181   */\n      0x00\n        /* \"#utility.yul\":19169:19178   */\n      dup4\n        /* \"#utility.yul\":19165:19182   */\n      add\n        /* \"#utility.yul\":19156:19162   */\n      dup6\n        /* \"#utility.yul\":19112:19183   */\n      tag_446\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":19193:19265   */\n      tag_642\n        /* \"#utility.yul\":19261:19263   */\n      0x20\n        /* \"#utility.yul\":19250:19259   */\n      dup4\n        /* \"#utility.yul\":19246:19264   */\n      add\n        /* \"#utility.yul\":19237:19243   */\n      dup5\n        /* \"#utility.yul\":19193:19265   */\n      tag_434\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":18940:19272   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19278:19397   */\n    tag_480:\n        /* \"#utility.yul\":19365:19366   */\n      0x05\n        /* \"#utility.yul\":19358:19363   */\n      dup2\n        /* \"#utility.yul\":19355:19367   */\n      lt\n        /* \"#utility.yul\":19345:19391   */\n      tag_644\n      jumpi\n        /* \"#utility.yul\":19371:19389   */\n      tag_645\n      tag_264\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":19345:19391   */\n    tag_644:\n        /* \"#utility.yul\":19278:19397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19403:19542   */\n    tag_481:\n        /* \"#utility.yul\":19454:19461   */\n      0x00\n        /* \"#utility.yul\":19483:19488   */\n      dup2\n        /* \"#utility.yul\":19472:19488   */\n      swap1\n      pop\n        /* \"#utility.yul\":19489:19536   */\n      tag_647\n        /* \"#utility.yul\":19530:19535   */\n      dup3\n        /* \"#utility.yul\":19489:19536   */\n      tag_480\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":19403:19542   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19548:19687   */\n    tag_482:\n        /* \"#utility.yul\":19610:19619   */\n      0x00\n        /* \"#utility.yul\":19643:19681   */\n      tag_649\n        /* \"#utility.yul\":19675:19680   */\n      dup3\n        /* \"#utility.yul\":19643:19681   */\n      tag_481\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":19630:19681   */\n      swap1\n      pop\n        /* \"#utility.yul\":19548:19687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19693:19848   */\n    tag_483:\n        /* \"#utility.yul\":19792:19841   */\n      tag_651\n        /* \"#utility.yul\":19835:19840   */\n      dup2\n        /* \"#utility.yul\":19792:19841   */\n      tag_482\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":19787:19790   */\n      dup3\n        /* \"#utility.yul\":19780:19842   */\n      mstore\n        /* \"#utility.yul\":19693:19848   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19854:20210   */\n    tag_361:\n        /* \"#utility.yul\":19987:19991   */\n      0x00\n        /* \"#utility.yul\":20025:20027   */\n      0x40\n        /* \"#utility.yul\":20014:20023   */\n      dup3\n        /* \"#utility.yul\":20010:20028   */\n      add\n        /* \"#utility.yul\":20002:20028   */\n      swap1\n      pop\n        /* \"#utility.yul\":20038:20109   */\n      tag_653\n        /* \"#utility.yul\":20106:20107   */\n      0x00\n        /* \"#utility.yul\":20095:20104   */\n      dup4\n        /* \"#utility.yul\":20091:20108   */\n      add\n        /* \"#utility.yul\":20082:20088   */\n      dup6\n        /* \"#utility.yul\":20038:20109   */\n      tag_446\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":20119:20203   */\n      tag_654\n        /* \"#utility.yul\":20199:20201   */\n      0x20\n        /* \"#utility.yul\":20188:20197   */\n      dup4\n        /* \"#utility.yul\":20184:20202   */\n      add\n        /* \"#utility.yul\":20175:20181   */\n      dup5\n        /* \"#utility.yul\":20119:20203   */\n      tag_483\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":19854:20210   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20216:20449   */\n    tag_396:\n        /* \"#utility.yul\":20255:20258   */\n      0x00\n        /* \"#utility.yul\":20278:20302   */\n      tag_656\n        /* \"#utility.yul\":20296:20301   */\n      dup3\n        /* \"#utility.yul\":20278:20302   */\n      tag_433\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":20269:20302   */\n      swap2\n      pop\n        /* \"#utility.yul\":20324:20390   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20317:20322   */\n      dup3\n        /* \"#utility.yul\":20314:20391   */\n      sub\n        /* \"#utility.yul\":20311:20414   */\n      tag_657\n      jumpi\n        /* \"#utility.yul\":20394:20412   */\n      tag_658\n      tag_469\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":20311:20414   */\n    tag_657:\n        /* \"#utility.yul\":20441:20442   */\n      0x01\n        /* \"#utility.yul\":20434:20439   */\n      dup3\n        /* \"#utility.yul\":20430:20443   */\n      add\n        /* \"#utility.yul\":20423:20443   */\n      swap1\n      pop\n        /* \"#utility.yul\":20216:20449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20455:20649   */\n    tag_398:\n        /* \"#utility.yul\":20495:20499   */\n      0x00\n        /* \"#utility.yul\":20515:20535   */\n      tag_660\n        /* \"#utility.yul\":20533:20534   */\n      dup3\n        /* \"#utility.yul\":20515:20535   */\n      tag_433\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":20510:20535   */\n      swap2\n      pop\n        /* \"#utility.yul\":20549:20569   */\n      tag_661\n        /* \"#utility.yul\":20567:20568   */\n      dup4\n        /* \"#utility.yul\":20549:20569   */\n      tag_433\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":20544:20569   */\n      swap3\n      pop\n        /* \"#utility.yul\":20593:20594   */\n      dup3\n        /* \"#utility.yul\":20590:20591   */\n      dup3\n        /* \"#utility.yul\":20586:20595   */\n      sub\n        /* \"#utility.yul\":20578:20595   */\n      swap1\n      pop\n        /* \"#utility.yul\":20617:20618   */\n      dup2\n        /* \"#utility.yul\":20611:20615   */\n      dup2\n        /* \"#utility.yul\":20608:20619   */\n      gt\n        /* \"#utility.yul\":20605:20642   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":20622:20640   */\n      tag_663\n      tag_469\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":20605:20642   */\n    tag_662:\n        /* \"#utility.yul\":20455:20649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20655:20846   */\n    tag_400:\n        /* \"#utility.yul\":20695:20698   */\n      0x00\n        /* \"#utility.yul\":20714:20734   */\n      tag_665\n        /* \"#utility.yul\":20732:20733   */\n      dup3\n        /* \"#utility.yul\":20714:20734   */\n      tag_433\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":20709:20734   */\n      swap2\n      pop\n        /* \"#utility.yul\":20748:20768   */\n      tag_666\n        /* \"#utility.yul\":20766:20767   */\n      dup4\n        /* \"#utility.yul\":20748:20768   */\n      tag_433\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":20743:20768   */\n      swap3\n      pop\n        /* \"#utility.yul\":20791:20792   */\n      dup3\n        /* \"#utility.yul\":20788:20789   */\n      dup3\n        /* \"#utility.yul\":20784:20793   */\n      add\n        /* \"#utility.yul\":20777:20793   */\n      swap1\n      pop\n        /* \"#utility.yul\":20812:20815   */\n      dup1\n        /* \"#utility.yul\":20809:20810   */\n      dup3\n        /* \"#utility.yul\":20806:20816   */\n      gt\n        /* \"#utility.yul\":20803:20839   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":20819:20837   */\n      tag_668\n      tag_469\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":20803:20839   */\n    tag_667:\n        /* \"#utility.yul\":20655:20846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20852:21033   */\n    tag_484:\n        /* \"#utility.yul\":20992:21025   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20988:20989   */\n      0x00\n        /* \"#utility.yul\":20980:20986   */\n      dup3\n        /* \"#utility.yul\":20976:20990   */\n      add\n        /* \"#utility.yul\":20969:21026   */\n      mstore\n        /* \"#utility.yul\":20852:21033   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21039:21405   */\n    tag_485:\n        /* \"#utility.yul\":21181:21184   */\n      0x00\n        /* \"#utility.yul\":21202:21269   */\n      tag_671\n        /* \"#utility.yul\":21266:21268   */\n      0x1f\n        /* \"#utility.yul\":21261:21264   */\n      dup4\n        /* \"#utility.yul\":21202:21269   */\n      tag_449\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":21195:21269   */\n      swap2\n      pop\n        /* \"#utility.yul\":21278:21371   */\n      tag_672\n        /* \"#utility.yul\":21367:21370   */\n      dup3\n        /* \"#utility.yul\":21278:21371   */\n      tag_484\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":21396:21398   */\n      0x20\n        /* \"#utility.yul\":21391:21394   */\n      dup3\n        /* \"#utility.yul\":21387:21399   */\n      add\n        /* \"#utility.yul\":21380:21399   */\n      swap1\n      pop\n        /* \"#utility.yul\":21039:21405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21411:21830   */\n    tag_404:\n        /* \"#utility.yul\":21577:21581   */\n      0x00\n        /* \"#utility.yul\":21615:21617   */\n      0x20\n        /* \"#utility.yul\":21604:21613   */\n      dup3\n        /* \"#utility.yul\":21600:21618   */\n      add\n        /* \"#utility.yul\":21592:21618   */\n      swap1\n      pop\n        /* \"#utility.yul\":21664:21673   */\n      dup2\n        /* \"#utility.yul\":21658:21662   */\n      dup2\n        /* \"#utility.yul\":21654:21674   */\n      sub\n        /* \"#utility.yul\":21650:21651   */\n      0x00\n        /* \"#utility.yul\":21639:21648   */\n      dup4\n        /* \"#utility.yul\":21635:21652   */\n      add\n        /* \"#utility.yul\":21628:21675   */\n      mstore\n        /* \"#utility.yul\":21692:21823   */\n      tag_674\n        /* \"#utility.yul\":21818:21822   */\n      dup2\n        /* \"#utility.yul\":21692:21823   */\n      tag_485\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":21684:21823   */\n      swap1\n      pop\n        /* \"#utility.yul\":21411:21830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21836:22018   */\n    tag_486:\n        /* \"#utility.yul\":21976:22010   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":21972:21973   */\n      0x00\n        /* \"#utility.yul\":21964:21970   */\n      dup3\n        /* \"#utility.yul\":21960:21974   */\n      add\n        /* \"#utility.yul\":21953:22011   */\n      mstore\n        /* \"#utility.yul\":21836:22018   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22024:22390   */\n    tag_487:\n        /* \"#utility.yul\":22166:22169   */\n      0x00\n        /* \"#utility.yul\":22187:22254   */\n      tag_677\n        /* \"#utility.yul\":22251:22253   */\n      0x20\n        /* \"#utility.yul\":22246:22249   */\n      dup4\n        /* \"#utility.yul\":22187:22254   */\n      tag_449\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":22180:22254   */\n      swap2\n      pop\n        /* \"#utility.yul\":22263:22356   */\n      tag_678\n        /* \"#utility.yul\":22352:22355   */\n      dup3\n        /* \"#utility.yul\":22263:22356   */\n      tag_486\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":22381:22383   */\n      0x20\n        /* \"#utility.yul\":22376:22379   */\n      dup3\n        /* \"#utility.yul\":22372:22384   */\n      add\n        /* \"#utility.yul\":22365:22384   */\n      swap1\n      pop\n        /* \"#utility.yul\":22024:22390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22396:22815   */\n    tag_413:\n        /* \"#utility.yul\":22562:22566   */\n      0x00\n        /* \"#utility.yul\":22600:22602   */\n      0x20\n        /* \"#utility.yul\":22589:22598   */\n      dup3\n        /* \"#utility.yul\":22585:22603   */\n      add\n        /* \"#utility.yul\":22577:22603   */\n      swap1\n      pop\n        /* \"#utility.yul\":22649:22658   */\n      dup2\n        /* \"#utility.yul\":22643:22647   */\n      dup2\n        /* \"#utility.yul\":22639:22659   */\n      sub\n        /* \"#utility.yul\":22635:22636   */\n      0x00\n        /* \"#utility.yul\":22624:22633   */\n      dup4\n        /* \"#utility.yul\":22620:22637   */\n      add\n        /* \"#utility.yul\":22613:22660   */\n      mstore\n        /* \"#utility.yul\":22677:22808   */\n      tag_680\n        /* \"#utility.yul\":22803:22807   */\n      dup2\n        /* \"#utility.yul\":22677:22808   */\n      tag_487\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":22669:22808   */\n      swap1\n      pop\n        /* \"#utility.yul\":22396:22815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22821:22991   */\n    tag_488:\n        /* \"#utility.yul\":22961:22983   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":22957:22958   */\n      0x00\n        /* \"#utility.yul\":22949:22955   */\n      dup3\n        /* \"#utility.yul\":22945:22959   */\n      add\n        /* \"#utility.yul\":22938:22984   */\n      mstore\n        /* \"#utility.yul\":22821:22991   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22997:23363   */\n    tag_489:\n        /* \"#utility.yul\":23139:23142   */\n      0x00\n        /* \"#utility.yul\":23160:23227   */\n      tag_683\n        /* \"#utility.yul\":23224:23226   */\n      0x14\n        /* \"#utility.yul\":23219:23222   */\n      dup4\n        /* \"#utility.yul\":23160:23227   */\n      tag_449\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":23153:23227   */\n      swap2\n      pop\n        /* \"#utility.yul\":23236:23329   */\n      tag_684\n        /* \"#utility.yul\":23325:23328   */\n      dup3\n        /* \"#utility.yul\":23236:23329   */\n      tag_488\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":23354:23356   */\n      0x20\n        /* \"#utility.yul\":23349:23352   */\n      dup3\n        /* \"#utility.yul\":23345:23357   */\n      add\n        /* \"#utility.yul\":23338:23357   */\n      swap1\n      pop\n        /* \"#utility.yul\":22997:23363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23369:23788   */\n    tag_432:\n        /* \"#utility.yul\":23535:23539   */\n      0x00\n        /* \"#utility.yul\":23573:23575   */\n      0x20\n        /* \"#utility.yul\":23562:23571   */\n      dup3\n        /* \"#utility.yul\":23558:23576   */\n      add\n        /* \"#utility.yul\":23550:23576   */\n      swap1\n      pop\n        /* \"#utility.yul\":23622:23631   */\n      dup2\n        /* \"#utility.yul\":23616:23620   */\n      dup2\n        /* \"#utility.yul\":23612:23632   */\n      sub\n        /* \"#utility.yul\":23608:23609   */\n      0x00\n        /* \"#utility.yul\":23597:23606   */\n      dup4\n        /* \"#utility.yul\":23593:23610   */\n      add\n        /* \"#utility.yul\":23586:23633   */\n      mstore\n        /* \"#utility.yul\":23650:23781   */\n      tag_686\n        /* \"#utility.yul\":23776:23780   */\n      dup2\n        /* \"#utility.yul\":23650:23781   */\n      tag_489\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":23642:23781   */\n      swap1\n      pop\n        /* \"#utility.yul\":23369:23788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122087297737bc07377cdea28d7b69ca2139cb1fb07248ae0a21c497658dc4e5741864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2026": {
									"entryPoint": null,
									"id": 2026,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_239": {
									"entryPoint": null,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_460": {
									"entryPoint": 412,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 420,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:17",
														"type": ""
													}
												],
												"src": "334:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:17",
														"type": ""
													}
												],
												"src": "466:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:17"
															},
															"nodeType": "YulIf",
															"src": "621:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:17",
														"type": ""
													}
												],
												"src": "568:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:17"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:17",
														"type": ""
													}
												],
												"src": "696:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "956:552:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1002:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:32:17"
															},
															"nodeType": "YulIf",
															"src": "966:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "1095:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1139:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1233:129:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1278:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1372:129:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1417:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "910:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "921:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "933:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "941:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "949:6:17",
														"type": ""
													}
												],
												"src": "845:663:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620027ea380380620027ea8339818101604052810190620000379190620002d2565b620000576200004b6200019c60201b60201c565b620001a460201b60201c565b60008060146101000a81548160ff0219169083151502179055506001808190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050506200032e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200029a826200026d565b9050919050565b620002ac816200028d565b8114620002b857600080fd5b50565b600081519050620002cc81620002a1565b92915050565b600080600060608486031215620002ee57620002ed62000268565b5b6000620002fe86828701620002bb565b93505060206200031186828701620002bb565b92505060406200032486828701620002bb565b9150509250925092565b6124ac806200033e6000396000f3fe6080604052600436106101b75760003560e01c80638d36f8f4116100ec578063c8d4fc601161008a578063f17a677711610064578063f17a677714610515578063f2c5d79714610531578063f2fde38b1461055c578063f78f680a14610585576101b7565b8063c8d4fc6014610490578063d47e107e146104bb578063d87b320b146104d7576101b7565b806398eaa4a7116100c657806398eaa4a7146104045780639f158a781461042d578063a837230714610458578063bad688c614610474576101b7565b80638d36f8f4146103925780638da5cb5b146103ae578063953a6ca8146103d9576101b7565b8063508f0628116101595780636f785cdf116101335780636f785cdf14610322578063715018a61461034d5780637e7f57f2146103645780638456cb591461037b576101b7565b8063508f0628146102b05780635c975abb146102cc5780635eee43f0146102f7576101b7565b806328d3bd1b1161019557806328d3bd1b1461022e578063329cc83f146102455780633a1491271461026e5780633f4ba83a14610299576101b7565b8063087bd107146101bc5780631592fb2a146101e757806320a0c03414610212575b600080fd5b3480156101c857600080fd5b506101d16105a1565b6040516101de91906118ec565b60405180910390f35b3480156101f357600080fd5b506101fc6105ad565b60405161020991906118ec565b60405180910390f35b61022c60048036038101906102279190611996565b6105b9565b005b34801561023a57600080fd5b506102436105d2565b005b34801561025157600080fd5b5061026c600480360381019061026791906119d6565b6108fd565b005b34801561027a57600080fd5b50610283610a32565b60405161029091906118ec565b60405180910390f35b3480156102a557600080fd5b506102ae610a3e565b005b6102ca60048036038101906102c591906119d6565b610a50565b005b3480156102d857600080fd5b506102e1610a69565b6040516102ee9190611a1e565b60405180910390f35b34801561030357600080fd5b5061030c610a7f565b6040516103199190611a1e565b60405180910390f35b34801561032e57600080fd5b50610337610a92565b60405161034491906118ec565b60405180910390f35b34801561035957600080fd5b50610362610a9e565b005b34801561037057600080fd5b50610379610ab2565b005b34801561038757600080fd5b50610390610c12565b005b6103ac60048036038101906103a791906119d6565b610c24565b005b3480156103ba57600080fd5b506103c3610c3d565b6040516103d09190611a48565b60405180910390f35b3480156103e557600080fd5b506103ee610c66565b6040516103fb9190611a1e565b60405180910390f35b34801561041057600080fd5b5061042b600480360381019061042691906119d6565b610c79565b005b34801561043957600080fd5b50610442610cdc565b60405161044f91906118ec565b60405180910390f35b610472600480360381019061046d91906119d6565b610ce8565b005b61048e60048036038101906104899190611996565b610d00565b005b34801561049c57600080fd5b506104a5610d19565b6040516104b29190611a1e565b60405180910390f35b6104d560048036038101906104d091906119d6565b610d2c565b005b3480156104e357600080fd5b506104fe60048036038101906104f99190611a88565b610d45565b60405161050c929190611ac8565b60405180910390f35b61052f600480360381019061052a9190611996565b6111ef565b005b34801561053d57600080fd5b50610546611208565b6040516105539190611a1e565b60405180910390f35b34801561056857600080fd5b50610583600480360381019061057e91906119d6565b61121b565b005b61059f600480360381019061059a9190611996565b61129e565b005b60068060000154905081565b60078060000154905081565b6105c16112b7565b6105cd82826001611301565b505050565b6105da6112b7565b6105e26115ff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611b4e565b60405180910390fd5b600b60029054906101000a900460ff16156106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590611bba565b60405180910390fd5b600b60009054906101000a900460ff1661070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490611c26565b60405180910390fd5b600b60019054906101000a900460ff16801561073a5750600161ffff16610734600761164e565b61ffff16105b610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077090611c92565b60405180910390fd5b600b60019054906101000a900460ff1680156107a65750600561ffff166107a0600861164e565b61ffff16105b6107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90611cfe565b60405180910390fd5b600b60019054906101000a900460ff1680156108125750601961ffff1661080c600961164e565b61ffff16105b610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890611d6a565b60405180910390fd5b600b60019054906101000a900460ff16801561087e5750607d61ffff16610878600a61164e565b61ffff16105b6108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b490611dd6565b60405180910390fd5b6001600b60026101000a81548160ff0219169083151502179055506000600b60016101000a81548160ff0219169083151502179055506108fb61165c565b565b6109056112b7565b61090d6115ff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611b4e565b60405180910390fd5b600b60009054906101000a900460ff16156109e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e090611e42565b60405180910390fd5b60006109fc82601961ffff166000611301565b9050601961ffff168103610a26576001600b60006101000a81548160ff0219169083151502179055505b50610a2f61165c565b50565b60088060000154905081565b610a46611665565b610a4e6116e3565b565b610a586112b7565b610a658160016003611301565b5050565b60008060149054906101000a900460ff16905090565b600b60039054906101000a900460ff1681565b600a8060000154905081565b610aa6611665565b610ab06000611745565b565b610aba6112b7565b610ac26115ff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4590611b4e565b60405180910390fd5b600b60019054906101000a900460ff1615610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9590611bba565b60405180910390fd5b600b60009054906101000a900460ff16610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be490611c26565b60405180910390fd5b6001600b60016101000a81548160ff021916908315150217905550610c1061165c565b565b610c1a611665565b610c22611809565b565b610c2c6112b7565b610c398160016002611301565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b60019054906101000a900460ff1681565b610c81611665565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60098060000154905081565b610cf06112b7565b610cfc81600180611301565b5050565b610d086112b7565b610d1482826004611301565b505050565b600b60009054906101000a900460ff1681565b610d346112b7565b610d418160016004611301565b5050565b600080610d506112b7565b60008411610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a90611eae565b60405180910390fd5b600b60009054906101000a900460ff16610de2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd990611c26565b60405180910390fd5b600080600080600060016004811115610dfe57610dfd611ece565b5b886004811115610e1157610e10611ece565b5b03610e7f57610e20600761164e565b94508885610e2e9190611f3a565b9350600161ffff169250600a61ffff169150605061ffff169050846019610e559190611f3a565b61ffff1696506001846019610e6a9190611f3a565b610e749190611f70565b61ffff169550611083565b60026004811115610e9357610e92611ece565b5b886004811115610ea657610ea5611ece565b5b03610f1557610eb5600861164e565b94508885610ec39190611f3a565b9350600561ffff169250603261ffff16915061019061ffff16905084607e610eeb9190611f3a565b61ffff169650600184607e610f009190611f3a565b610f0a9190611f70565b61ffff169550611082565b60036004811115610f2957610f28611ece565b5b886004811115610f3c57610f3b611ece565b5b03610fad57610f4b600961164e565b94508885610f599190611f3a565b9350601961ffff16925060fa61ffff1691506107d061ffff16905084610273610f829190611f3a565b61ffff169650600184610273610f989190611f3a565b610fa29190611f70565b61ffff169550611081565b600480811115610fc057610fbf611ece565b5b886004811115610fd357610fd2611ece565b5b0361104557610fe2600a61164e565b94508885610ff09190611f3a565b9350607d61ffff1692506104e261ffff16915061168a61ffff16905084610c3861101a9190611f3a565b61ffff169650600184610c386110309190611f3a565b61103a9190611f70565b61ffff169550611080565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107790611ff2565b60405180910390fd5b5b5b5b600b60019054906101000a900460ff16156110e457828461ffff1611156110df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d69061205e565b60405180910390fd5b6111e3565b600b60029054906101000a900460ff161561114557818461ffff161115611140576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111379061205e565b60405180910390fd5b6111e2565b600b60039054906101000a900460ff16156111a657808461ffff1611156111a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111989061205e565b60405180910390fd5b6111e1565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d8906120ca565b60405180910390fd5b5b5b50505050509250929050565b6111f76112b7565b61120382826003611301565b505050565b600b60029054906101000a900460ff1681565b611223611665565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611292576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112899061215c565b60405180910390fd5b61129b81611745565b50565b6112a66112b7565b6112b282826002611301565b505050565b6112bf610a69565b156112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f6906121c8565b60405180910390fd5b565b600061130b6112b7565b600b60009054906101000a900460ff1661135a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135190611c26565b60405180910390fd5b6000806113678585610d45565b91509150600082905060008390505b8281116115da57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819489836040518363ffffffff1660e01b81526004016113da9291906121e8565b600060405180830381600087803b1580156113f457600080fd5b505af1158015611408573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be1e114589886040518363ffffffff1660e01b8152600401611469929190612259565b600060405180830381600087803b15801561148357600080fd5b505af1158015611497573d6000803e3d6000fd5b50505050809150600160048111156114b2576114b1611ece565b5b8660048111156114c5576114c4611ece565b5b036114d9576114d4600761186c565b6115c7565b600260048111156114ed576114ec611ece565b5b866004811115611500576114ff611ece565b5b036115145761150f600861186c565b6115c6565b6003600481111561152857611527611ece565b5b86600481111561153b5761153a611ece565b5b0361154f5761154a600961186c565b6115c5565b60048081111561156257611561611ece565b5b86600481111561157557611574611ece565b5b0361158957611584600a61186c565b6115c4565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bb90611ff2565b60405180910390fd5b5b5b5b80806115d290612282565b915050611376565b50600183826115e991906122ca565b6115f391906122fe565b93505050509392505050565b600260015403611644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163b9061237e565b60405180910390fd5b6002600181905550565b600081600001549050919050565b60018081905550565b61166d611882565b73ffffffffffffffffffffffffffffffffffffffff1661168b610c3d565b73ffffffffffffffffffffffffffffffffffffffff16146116e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d8906123ea565b60405180910390fd5b565b6116eb61188a565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61172e611882565b60405161173b9190611a48565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118116112b7565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611855611882565b6040516118629190611a48565b60405180910390a1565b6001816000016000828254019250508190555050565b600033905090565b611892610a69565b6118d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c890612456565b60405180910390fd5b565b6000819050919050565b6118e6816118d3565b82525050565b600060208201905061190160008301846118dd565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119378261190c565b9050919050565b6119478161192c565b811461195257600080fd5b50565b6000813590506119648161193e565b92915050565b611973816118d3565b811461197e57600080fd5b50565b6000813590506119908161196a565b92915050565b600080604083850312156119ad576119ac611907565b5b60006119bb85828601611955565b92505060206119cc85828601611981565b9150509250929050565b6000602082840312156119ec576119eb611907565b5b60006119fa84828501611955565b91505092915050565b60008115159050919050565b611a1881611a03565b82525050565b6000602082019050611a336000830184611a0f565b92915050565b611a428161192c565b82525050565b6000602082019050611a5d6000830184611a39565b92915050565b60058110611a7057600080fd5b50565b600081359050611a8281611a63565b92915050565b60008060408385031215611a9f57611a9e611907565b5b6000611aad85828601611981565b9250506020611abe85828601611a73565b9150509250929050565b6000604082019050611add60008301856118dd565b611aea60208301846118dd565b9392505050565b600082825260208201905092915050565b7f4e6f204175746800000000000000000000000000000000000000000000000000600082015250565b6000611b38600783611af1565b9150611b4382611b02565b602082019050919050565b60006020820190508181036000830152611b6781611b2b565b9050919050565b7f416c726561647920756e6c6f636b656400000000000000000000000000000000600082015250565b6000611ba4601083611af1565b9150611baf82611b6e565b602082019050919050565b60006020820190508181036000830152611bd381611b97565b9050919050565b7f4865726f73206e6f74206d696e74656400000000000000000000000000000000600082015250565b6000611c10601083611af1565b9150611c1b82611bda565b602082019050919050565b60006020820190508181036000830152611c3f81611c03565b9050919050565b7f556e6d696e746564206c6567656e647300000000000000000000000000000000600082015250565b6000611c7c601083611af1565b9150611c8782611c46565b602082019050919050565b60006020820190508181036000830152611cab81611c6f565b9050919050565b7f556e6d696e746564207261726573000000000000000000000000000000000000600082015250565b6000611ce8600e83611af1565b9150611cf382611cb2565b602082019050919050565b60006020820190508181036000830152611d1781611cdb565b9050919050565b7f556e6d696e74656420756e636f6d6d6f6e730000000000000000000000000000600082015250565b6000611d54601283611af1565b9150611d5f82611d1e565b602082019050919050565b60006020820190508181036000830152611d8381611d47565b9050919050565b7f556e6d696e74656420636f6d6d6f6e7300000000000000000000000000000000600082015250565b6000611dc0601083611af1565b9150611dcb82611d8a565b602082019050919050565b60006020820190508181036000830152611def81611db3565b9050919050565b7f416c7265616479206d696e746564000000000000000000000000000000000000600082015250565b6000611e2c600e83611af1565b9150611e3782611df6565b602082019050919050565b60006020820190508181036000830152611e5b81611e1f565b9050919050565b7f6e756d546f4d696e742030000000000000000000000000000000000000000000600082015250565b6000611e98600b83611af1565b9150611ea382611e62565b602082019050919050565b60006020820190508181036000830152611ec781611e8b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600061ffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f4582611efd565b9150611f5083611efd565b9250828201905061ffff811115611f6a57611f69611f0b565b5b92915050565b6000611f7b82611efd565b9150611f8683611efd565b9250828203905061ffff811115611fa057611f9f611f0b565b5b92915050565b7f496e76616c696420636c61737300000000000000000000000000000000000000600082015250565b6000611fdc600d83611af1565b9150611fe782611fa6565b602082019050919050565b6000602082019050818103600083015261200b81611fcf565b9050919050565b7f737570706c7920696e73756666696369656e7400000000000000000000000000600082015250565b6000612048601383611af1565b915061205382612012565b602082019050919050565b600060208201905081810360008301526120778161203b565b9050919050565b7f6e6f207075626c696320726f756e6420756e6c6f636b65640000000000000000600082015250565b60006120b4601883611af1565b91506120bf8261207e565b602082019050919050565b600060208201905081810360008301526120e3816120a7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612146602683611af1565b9150612151826120ea565b604082019050919050565b6000602082019050818103600083015261217581612139565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006121b2601083611af1565b91506121bd8261217c565b602082019050919050565b600060208201905081810360008301526121e1816121a5565b9050919050565b60006040820190506121fd6000830185611a39565b61220a60208301846118dd565b9392505050565b6005811061222257612221611ece565b5b50565b600081905061223382612211565b919050565b600061224382612225565b9050919050565b61225381612238565b82525050565b600060408201905061226e6000830185611a39565b61227b602083018461224a565b9392505050565b600061228d826118d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122bf576122be611f0b565b5b600182019050919050565b60006122d5826118d3565b91506122e0836118d3565b92508282039050818111156122f8576122f7611f0b565b5b92915050565b6000612309826118d3565b9150612314836118d3565b925082820190508082111561232c5761232b611f0b565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612368601f83611af1565b915061237382612332565b602082019050919050565b600060208201905081810360008301526123978161235b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006123d4602083611af1565b91506123df8261239e565b602082019050919050565b60006020820190508181036000830152612403816123c7565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000612440601483611af1565b915061244b8261240a565b602082019050919050565b6000602082019050818103600083015261246f81612433565b905091905056fea264697066735822122087297737bc07377cdea28d7b69ca2139cb1fb07248ae0a21c497658dc4e5741864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x27EA CODESIZE SUB DUP1 PUSH3 0x27EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2D2 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x19C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x32E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29A DUP3 PUSH3 0x26D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2AC DUP2 PUSH3 0x28D JUMP JUMPDEST DUP2 EQ PUSH3 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2CC DUP2 PUSH3 0x2A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2EE JUMPI PUSH3 0x2ED PUSH3 0x268 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2FE DUP7 DUP3 DUP8 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x311 DUP7 DUP3 DUP8 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x324 DUP7 DUP3 DUP8 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x24AC DUP1 PUSH3 0x33E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D36F8F4 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xC8D4FC60 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF17A6777 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF17A6777 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xF2C5D797 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0xF78F680A EQ PUSH2 0x585 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0xC8D4FC60 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xD47E107E EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xD87B320B EQ PUSH2 0x4D7 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x98EAA4A7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x98EAA4A7 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x9F158A78 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xA8372307 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xBAD688C6 EQ PUSH2 0x474 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x8D36F8F4 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x953A6CA8 EQ PUSH2 0x3D9 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x508F0628 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6F785CDF GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6F785CDF EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x7E7F57F2 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x37B JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x508F0628 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x5EEE43F0 EQ PUSH2 0x2F7 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x28D3BD1B GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x28D3BD1B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x329CC83F EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x3A149127 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x299 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x87BD107 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x1592FB2A EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x20A0C034 EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x5B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x5D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0xA9E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH2 0xAB2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0xC12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EE PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A5 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50C SWAP3 SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x546 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x121B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x5CD DUP3 DUP3 PUSH1 0x1 PUSH2 0x1301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x73A JUMPI POP PUSH1 0x1 PUSH2 0xFFFF AND PUSH2 0x734 PUSH1 0x7 PUSH2 0x164E JUMP JUMPDEST PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x770 SWAP1 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x7A6 JUMPI POP PUSH1 0x5 PUSH2 0xFFFF AND PUSH2 0x7A0 PUSH1 0x8 PUSH2 0x164E JUMP JUMPDEST PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP1 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x812 JUMPI POP PUSH1 0x19 PUSH2 0xFFFF AND PUSH2 0x80C PUSH1 0x9 PUSH2 0x164E JUMP JUMPDEST PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x848 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x87E JUMPI POP PUSH1 0x7D PUSH2 0xFFFF AND PUSH2 0x878 PUSH1 0xA PUSH2 0x164E JUMP JUMPDEST PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B4 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8FB PUSH2 0x165C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x905 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x90D PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x990 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E0 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9FC DUP3 PUSH1 0x19 PUSH2 0xFFFF AND PUSH1 0x0 PUSH2 0x1301 JUMP JUMPDEST SWAP1 POP PUSH1 0x19 PUSH2 0xFFFF AND DUP2 SUB PUSH2 0xA26 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP PUSH2 0xA2F PUSH2 0x165C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xA46 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xA4E PUSH2 0x16E3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA58 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xA65 DUP2 PUSH1 0x1 PUSH1 0x3 PUSH2 0x1301 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xAA6 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xAB0 PUSH1 0x0 PUSH2 0x1745 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xABA PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xAC2 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB45 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE4 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC10 PUSH2 0x165C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC1A PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xC22 PUSH2 0x1809 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC2C PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xC39 DUP2 PUSH1 0x1 PUSH1 0x2 PUSH2 0x1301 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC81 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xCF0 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH1 0x1 DUP1 PUSH2 0x1301 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD08 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xD14 DUP3 DUP3 PUSH1 0x4 PUSH2 0x1301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xD34 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH1 0x1 PUSH1 0x4 PUSH2 0x1301 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD50 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD9 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDFE JUMPI PUSH2 0xDFD PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE11 JUMPI PUSH2 0xE10 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xE7F JUMPI PUSH2 0xE20 PUSH1 0x7 PUSH2 0x164E JUMP JUMPDEST SWAP5 POP DUP9 DUP6 PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST SWAP4 POP PUSH1 0x1 PUSH2 0xFFFF AND SWAP3 POP PUSH1 0xA PUSH2 0xFFFF AND SWAP2 POP PUSH1 0x50 PUSH2 0xFFFF AND SWAP1 POP DUP5 PUSH1 0x19 PUSH2 0xE55 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFFFF AND SWAP7 POP PUSH1 0x1 DUP5 PUSH1 0x19 PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xE74 SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP6 POP PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE93 JUMPI PUSH2 0xE92 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA5 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xF15 JUMPI PUSH2 0xEB5 PUSH1 0x8 PUSH2 0x164E JUMP JUMPDEST SWAP5 POP DUP9 DUP6 PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST SWAP4 POP PUSH1 0x5 PUSH2 0xFFFF AND SWAP3 POP PUSH1 0x32 PUSH2 0xFFFF AND SWAP2 POP PUSH2 0x190 PUSH2 0xFFFF AND SWAP1 POP DUP5 PUSH1 0x7E PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFFFF AND SWAP7 POP PUSH1 0x1 DUP5 PUSH1 0x7E PUSH2 0xF00 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xF0A SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP6 POP PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF29 JUMPI PUSH2 0xF28 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF3C JUMPI PUSH2 0xF3B PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xFAD JUMPI PUSH2 0xF4B PUSH1 0x9 PUSH2 0x164E JUMP JUMPDEST SWAP5 POP DUP9 DUP6 PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST SWAP4 POP PUSH1 0x19 PUSH2 0xFFFF AND SWAP3 POP PUSH1 0xFA PUSH2 0xFFFF AND SWAP2 POP PUSH2 0x7D0 PUSH2 0xFFFF AND SWAP1 POP DUP5 PUSH2 0x273 PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFFFF AND SWAP7 POP PUSH1 0x1 DUP5 PUSH2 0x273 PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP6 POP PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1045 JUMPI PUSH2 0xFE2 PUSH1 0xA PUSH2 0x164E JUMP JUMPDEST SWAP5 POP DUP9 DUP6 PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST SWAP4 POP PUSH1 0x7D PUSH2 0xFFFF AND SWAP3 POP PUSH2 0x4E2 PUSH2 0xFFFF AND SWAP2 POP PUSH2 0x168A PUSH2 0xFFFF AND SWAP1 POP DUP5 PUSH2 0xC38 PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFFFF AND SWAP7 POP PUSH1 0x1 DUP5 PUSH2 0xC38 PUSH2 0x1030 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x103A SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP6 POP PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1077 SWAP1 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10E4 JUMPI DUP3 DUP5 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D6 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1145 JUMPI DUP2 DUP5 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x1140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1137 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11A6 JUMPI DUP1 DUP5 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1198 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP1 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F7 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x1203 DUP3 DUP3 PUSH1 0x3 PUSH2 0x1301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1223 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129B DUP2 PUSH2 0x1745 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x12A6 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x12B2 DUP3 DUP3 PUSH1 0x2 PUSH2 0x1301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12BF PUSH2 0xA69 JUMP JUMPDEST ISZERO PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F6 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130B PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x135A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1351 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1367 DUP6 DUP6 PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x15DA JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP10 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DA SWAP3 SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1408 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBE1E1145 DUP10 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1469 SWAP3 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1497 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 SWAP2 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP7 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14C5 JUMPI PUSH2 0x14C4 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14D9 JUMPI PUSH2 0x14D4 PUSH1 0x7 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14ED JUMPI PUSH2 0x14EC PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP7 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1514 JUMPI PUSH2 0x150F PUSH1 0x8 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP7 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x153B JUMPI PUSH2 0x153A PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x154F JUMPI PUSH2 0x154A PUSH1 0x9 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x1562 JUMPI PUSH2 0x1561 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP7 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1575 JUMPI PUSH2 0x1574 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1589 JUMPI PUSH2 0x1584 PUSH1 0xA PUSH2 0x186C JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP1 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x15D2 SWAP1 PUSH2 0x2282 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0x1 DUP4 DUP3 PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x22FE JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1644 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163B SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x166D PUSH2 0x1882 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168B PUSH2 0xC3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D8 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x16EB PUSH2 0x188A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x172E PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173B SWAP2 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1811 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1855 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1862 SWAP2 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1892 PUSH2 0xA69 JUMP JUMPDEST PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C8 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E6 DUP2 PUSH2 0x18D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1901 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1937 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP2 EQ PUSH2 0x1952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1964 DUP2 PUSH2 0x193E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1973 DUP2 PUSH2 0x18D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x197E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1990 DUP2 PUSH2 0x196A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AC PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BB DUP6 DUP3 DUP7 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CC DUP6 DUP3 DUP7 ADD PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP5 DUP3 DUP6 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x1A03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A42 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A82 DUP2 PUSH2 0x1A63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AAD DUP6 DUP3 DUP7 ADD PUSH2 0x1981 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ABE DUP6 DUP3 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1ADD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x18DD JUMP JUMPDEST PUSH2 0x1AEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F204175746800000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B38 PUSH1 0x7 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B43 DUP3 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B67 DUP2 PUSH2 0x1B2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920756E6C6F636B656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA4 PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAF DUP3 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD3 DUP2 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4865726F73206E6F74206D696E74656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C10 PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1B DUP3 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C3F DUP2 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6D696E746564206C6567656E647300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C87 DUP3 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CAB DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6D696E746564207261726573000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE8 PUSH1 0xE DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF3 DUP3 PUSH2 0x1CB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D17 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6D696E74656420756E636F6D6D6F6E730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D54 PUSH1 0x12 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5F DUP3 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D83 DUP2 PUSH2 0x1D47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6D696E74656420636F6D6D6F6E7300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC0 PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCB DUP3 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEF DUP2 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479206D696E746564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2C PUSH1 0xE DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E37 DUP3 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E5B DUP2 PUSH2 0x1E1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E756D546F4D696E742030000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E98 PUSH1 0xB DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA3 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC7 DUP2 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F45 DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F50 DUP4 PUSH2 0x1EFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x1F6A JUMPI PUSH2 0x1F69 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7B DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F86 DUP4 PUSH2 0x1EFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x1FA0 JUMPI PUSH2 0x1F9F PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636C61737300000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDC PUSH1 0xD DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE7 DUP3 PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x200B DUP2 PUSH2 0x1FCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x737570706C7920696E73756666696369656E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2048 PUSH1 0x13 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2053 DUP3 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2077 DUP2 PUSH2 0x203B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F207075626C696320726F756E6420756E6C6F636B65640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B4 PUSH1 0x18 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BF DUP3 PUSH2 0x207E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E3 DUP2 PUSH2 0x20A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2146 PUSH1 0x26 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2151 DUP3 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2175 DUP2 PUSH2 0x2139 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B2 PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x21BD DUP3 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21E1 DUP2 PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x220A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x2222 JUMPI PUSH2 0x2221 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2233 DUP3 PUSH2 0x2211 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2243 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x2238 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x226E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x227B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x224A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228D DUP3 PUSH2 0x18D3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22BF JUMPI PUSH2 0x22BE PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D5 DUP3 PUSH2 0x18D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP4 PUSH2 0x18D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22F8 JUMPI PUSH2 0x22F7 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2309 DUP3 PUSH2 0x18D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2314 DUP4 PUSH2 0x18D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x232C JUMPI PUSH2 0x232B PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2368 PUSH1 0x1F DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2373 DUP3 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2397 DUP2 PUSH2 0x235B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D4 PUSH1 0x20 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DF DUP3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2403 DUP2 PUSH2 0x23C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2440 PUSH1 0x14 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x244B DUP3 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x246F DUP2 PUSH2 0x2433 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x29 PUSH24 0x37BC07377CDEA28D7B69CA2139CB1FB07248AE0A21C49765 DUP14 0xC4 0xE5 PUSH21 0x1864736F6C63430008130033000000000000000000 ",
							"sourceMap": "486:10752:12:-:0;;;2256:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:2;1821:7;:22;;;;2397:20:12;2365:14;;:53;;;;;;;;;;;;;;;;;;2450:15;2428:9;;:38;;;;;;;;;;;;;;;;;;2510:21;2476:15;;:56;;;;;;;;;;;;;;;;;;2578:4;2543:20;:32;2564:10;2543:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;2256:368;;;486:10752;;640:96:6;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;486:10752:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_areHerosMinted_1985": {
									"entryPoint": 3353,
									"id": 1985,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 5733,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_commonNFTsMinted_1983": {
									"entryPoint": 2706,
									"id": 1983,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_heroNFTsMinted_1971": {
									"entryPoint": 1441,
									"id": 1971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_is1stPublicRoundUnlocked_1987": {
									"entryPoint": 3174,
									"id": 1987,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_is2ndPublicRoundUnlocked_1989": {
									"entryPoint": 4616,
									"id": 1989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_is3rdPublicRoundUnlocked_1991": {
									"entryPoint": 2687,
									"id": 1991,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_legendNFTsMinted_1974": {
									"entryPoint": 1453,
									"id": 1974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mintNFTs_2639": {
									"entryPoint": 4865,
									"id": 2639,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_460": {
									"entryPoint": 6274,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_273": {
									"entryPoint": 5724,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_265": {
									"entryPoint": 5631,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_203": {
									"entryPoint": 6153,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_rareNFTsMinted_1977": {
									"entryPoint": 2610,
									"id": 1977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 4791,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_187": {
									"entryPoint": 6282,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 5957,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_uncommonNFTsMinted_1980": {
									"entryPoint": 3292,
									"id": 1980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_unpause_219": {
									"entryPoint": 5859,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addAuthorizedContract_2040": {
									"entryPoint": 3193,
									"id": 2040,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_488": {
									"entryPoint": 5710,
									"id": 488,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMintIndexRange_2524": {
									"entryPoint": 3397,
									"id": 2524,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@increment_502": {
									"entryPoint": 6252,
									"id": 502,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintCommon_2767": {
									"entryPoint": 3372,
									"id": 2767,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintCommons_2752": {
									"entryPoint": 3328,
									"id": 2752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintHeros_2227": {
									"entryPoint": 2301,
									"id": 2227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintLegend_2671": {
									"entryPoint": 3304,
									"id": 2671,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintLegends_2656": {
									"entryPoint": 1465,
									"id": 2656,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintRare_2703": {
									"entryPoint": 3108,
									"id": 2703,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintRares_2688": {
									"entryPoint": 4766,
									"id": 2688,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintUncommon_2735": {
									"entryPoint": 2640,
									"id": 2735,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintUncommons_2720": {
									"entryPoint": 4591,
									"id": 2720,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 3133,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2049": {
									"entryPoint": 3090,
									"id": 2049,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": 2665,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2718,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4635,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unlock1stPublicRound_2089": {
									"entryPoint": 2738,
									"id": 2089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unlock2ndPublicRound_2184": {
									"entryPoint": 1490,
									"id": 2184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_2058": {
									"entryPoint": 2622,
									"id": 2058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 6771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_enum$_NFT_CLASS_$1604__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": 8793,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8680,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6856,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint16": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint16": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_NFT_CLASS_$1604_to_t_uint8": {
									"entryPoint": 8760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f": {
									"entryPoint": 6914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 8572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23": {
									"entryPoint": 7346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d": {
									"entryPoint": 7562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b": {
									"entryPoint": 8102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a": {
									"entryPoint": 8318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 8721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_NFT_CLASS_$1604": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23791:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:17",
														"type": ""
													}
												],
												"src": "7:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:17",
														"type": ""
													}
												],
												"src": "90:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:17",
														"type": ""
													}
												],
												"src": "214:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:17",
														"type": ""
													}
												],
												"src": "442:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:17",
														"type": ""
													}
												],
												"src": "769:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:17",
														"type": ""
													}
												],
												"src": "901:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:17"
															},
															"nodeType": "YulIf",
															"src": "1056:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:17",
														"type": ""
													}
												],
												"src": "1003:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:17",
														"type": ""
													}
												],
												"src": "1131:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1319:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:43:17"
															},
															"nodeType": "YulIf",
															"src": "1329:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:17",
														"type": ""
													}
												],
												"src": "1276:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1466:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1434:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1442:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1450:5:17",
														"type": ""
													}
												],
												"src": "1404:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1632:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1678:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:32:17"
															},
															"nodeType": "YulIf",
															"src": "1642:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "1771:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1815:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1898:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1943:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1594:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1605:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1617:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1625:6:17",
														"type": ""
													}
												],
												"src": "1549:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:17"
															},
															"nodeType": "YulIf",
															"src": "2105:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "2234:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2076:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2088:6:17",
														"type": ""
													}
												],
												"src": "2029:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2406:48:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2416:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2441:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2434:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2434:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2416:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2388:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2398:7:17",
														"type": ""
													}
												],
												"src": "2364:90:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2519:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2556:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2541:14:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2541:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2529:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2507:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2514:3:17",
														"type": ""
													}
												],
												"src": "2460:109:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2667:118:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2677:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2677:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2713:37:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2713:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2639:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2651:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2662:4:17",
														"type": ""
													}
												],
												"src": "2575:210:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2873:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2878:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2878:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2866:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2866:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2844:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2851:3:17",
														"type": ""
													}
												],
												"src": "2791:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3013:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3023:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3035:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3046:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3031:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3023:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3103:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3116:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3127:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3112:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3059:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3059:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2985:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2997:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3008:4:17",
														"type": ""
													}
												],
												"src": "2915:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3200:56:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3234:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3243:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3246:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3236:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3236:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3236:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3223:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3230:1:17",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3220:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3220:12:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:20:17"
															},
															"nodeType": "YulIf",
															"src": "3210:40:17"
														}
													]
												},
												"name": "validator_revert_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3193:5:17",
														"type": ""
													}
												],
												"src": "3143:113:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3328:101:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3338:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3360:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3347:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3338:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3417:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_NFT_CLASS_$1604",
																	"nodeType": "YulIdentifier",
																	"src": "3376:40:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3376:47:17"
														}
													]
												},
												"name": "abi_decode_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3306:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3314:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3322:5:17",
														"type": ""
													}
												],
												"src": "3262:167:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3532:405:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3578:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3580:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3580:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3580:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3562:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3549:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3574:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:32:17"
															},
															"nodeType": "YulIf",
															"src": "3542:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3671:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3686:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3690:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3715:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3750:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3761:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3746:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3746:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3770:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3725:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3725:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3715:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3798:132:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3813:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3827:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3817:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3843:77:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3892:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3903:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3888:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3888:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3912:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_NFT_CLASS_$1604",
																			"nodeType": "YulIdentifier",
																			"src": "3853:34:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3853:67:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3843:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3494:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3505:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3517:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3525:6:17",
														"type": ""
													}
												],
												"src": "3435:502:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4069:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4079:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4091:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4102:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4079:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4159:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4172:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4183:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4115:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4115:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4115:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4240:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4253:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4264:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4249:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4249:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4196:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4033:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4045:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4053:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4064:4:17",
														"type": ""
													}
												],
												"src": "3943:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4377:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4394:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4399:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4415:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4434:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4439:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4430:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4415:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4349:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4354:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4365:11:17",
														"type": ""
													}
												],
												"src": "4281:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4562:51:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4584:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4592:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4580:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4580:14:17"
																	},
																	{
																		"hexValue": "4e6f2041757468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4596:9:17",
																		"type": "",
																		"value": "No Auth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4573:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4573:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4573:33:17"
														}
													]
												},
												"name": "store_literal_in_memory_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4554:6:17",
														"type": ""
													}
												],
												"src": "4456:157:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4765:219:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4775:73:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4841:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4846:1:17",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4782:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:66:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4946:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f",
																	"nodeType": "YulIdentifier",
																	"src": "4857:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4857:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4959:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4970:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4975:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4966:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4966:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4959:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4753:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4761:3:17",
														"type": ""
													}
												],
												"src": "4619:365:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5171:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5183:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5194:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5179:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5179:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5171:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5218:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5229:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5214:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5214:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5237:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5233:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5263:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5397:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5271:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5263:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5141:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5156:4:17",
														"type": ""
													}
												],
												"src": "4990:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5521:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5543:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5551:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5539:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5539:14:17"
																	},
																	{
																		"hexValue": "416c726561647920756e6c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5555:18:17",
																		"type": "",
																		"value": "Already unlocked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5532:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5532:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5513:6:17",
														"type": ""
													}
												],
												"src": "5415:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5733:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5743:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5809:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5814:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5750:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702",
																	"nodeType": "YulIdentifier",
																	"src": "5826:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5826:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5826:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5928:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5939:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5935:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5935:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5928:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5721:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5729:3:17",
														"type": ""
													}
												],
												"src": "5587:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6130:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6140:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6152:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6148:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6148:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6140:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6187:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6198:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6183:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6183:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6206:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6212:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6176:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6176:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6176:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6232:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6366:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6240:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6232:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6110:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6125:4:17",
														"type": ""
													}
												],
												"src": "5959:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6490:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6512:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6520:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6508:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6508:14:17"
																	},
																	{
																		"hexValue": "4865726f73206e6f74206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6524:18:17",
																		"type": "",
																		"value": "Heros not minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6501:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6501:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6501:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6482:6:17",
														"type": ""
													}
												],
												"src": "6384:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6702:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6712:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6778:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6783:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6719:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6719:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6712:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6884:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																	"nodeType": "YulIdentifier",
																	"src": "6795:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6795:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6795:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6897:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6908:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6904:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6904:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6690:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6698:3:17",
														"type": ""
													}
												],
												"src": "6556:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7099:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7109:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7121:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7132:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7117:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7117:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7109:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7156:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7167:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7152:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7152:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7175:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7181:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7171:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7171:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7145:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7145:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7145:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7201:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7335:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7209:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7209:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7201:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7079:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7094:4:17",
														"type": ""
													}
												],
												"src": "6928:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7459:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7481:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7489:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7477:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7477:14:17"
																	},
																	{
																		"hexValue": "556e6d696e746564206c6567656e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7493:18:17",
																		"type": "",
																		"value": "Unminted legends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7470:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7470:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7451:6:17",
														"type": ""
													}
												],
												"src": "7353:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7671:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7681:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7747:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7752:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7688:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7688:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7853:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c",
																	"nodeType": "YulIdentifier",
																	"src": "7764:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7764:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7764:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7866:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7877:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7882:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7873:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7873:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7866:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7659:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7667:3:17",
														"type": ""
													}
												],
												"src": "7525:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8068:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8078:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8090:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8101:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8086:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8078:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8125:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8136:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8121:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8144:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8150:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8140:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8140:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8114:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8114:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8114:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8170:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8304:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8178:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8170:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8048:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8063:4:17",
														"type": ""
													}
												],
												"src": "7897:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8428:58:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8450:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8458:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8446:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8446:14:17"
																	},
																	{
																		"hexValue": "556e6d696e746564207261726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8462:16:17",
																		"type": "",
																		"value": "Unminted rares"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8439:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8439:40:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8439:40:17"
														}
													]
												},
												"name": "store_literal_in_memory_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8420:6:17",
														"type": ""
													}
												],
												"src": "8322:164:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8638:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8648:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8714:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8719:2:17",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8655:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8655:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8648:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8820:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23",
																	"nodeType": "YulIdentifier",
																	"src": "8731:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8731:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8731:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8833:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8844:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8849:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8840:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8840:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8833:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8626:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8634:3:17",
														"type": ""
													}
												],
												"src": "8492:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9035:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9045:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9057:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9068:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9053:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9053:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9045:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9092:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9103:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9088:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9088:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9111:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9107:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9107:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9081:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9081:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9081:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9137:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9271:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9145:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9145:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9137:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9015:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9030:4:17",
														"type": ""
													}
												],
												"src": "8864:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9395:62:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9417:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9425:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9413:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9413:14:17"
																	},
																	{
																		"hexValue": "556e6d696e74656420756e636f6d6d6f6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9429:20:17",
																		"type": "",
																		"value": "Unminted uncommons"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9406:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9406:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9406:44:17"
														}
													]
												},
												"name": "store_literal_in_memory_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9387:6:17",
														"type": ""
													}
												],
												"src": "9289:168:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9609:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9619:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9685:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9690:2:17",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9626:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9626:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9619:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9791:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6",
																	"nodeType": "YulIdentifier",
																	"src": "9702:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9702:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9702:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9804:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9815:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9820:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9811:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9804:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9597:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9605:3:17",
														"type": ""
													}
												],
												"src": "9463:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10006:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10016:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10028:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10039:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10024:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10024:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10016:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10063:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10074:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10059:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10059:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10082:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10088:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10078:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10078:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10052:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10052:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10052:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10108:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10242:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10116:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10116:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10108:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9986:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10001:4:17",
														"type": ""
													}
												],
												"src": "9835:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10366:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10388:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10396:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10384:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10384:14:17"
																	},
																	{
																		"hexValue": "556e6d696e74656420636f6d6d6f6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10400:18:17",
																		"type": "",
																		"value": "Unminted commons"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10377:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10377:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10377:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10358:6:17",
														"type": ""
													}
												],
												"src": "10260:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10578:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10588:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10654:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10595:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10595:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10588:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10760:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d",
																	"nodeType": "YulIdentifier",
																	"src": "10671:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10671:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10671:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10773:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10784:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10789:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10780:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10780:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10773:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10566:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10574:3:17",
														"type": ""
													}
												],
												"src": "10432:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10975:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10985:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10997:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11008:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10993:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10993:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10985:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11032:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11043:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11028:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11028:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11051:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11057:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11047:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11047:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11021:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11021:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11021:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11077:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11211:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11085:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11077:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10955:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10970:4:17",
														"type": ""
													}
												],
												"src": "10804:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11335:58:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11357:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11365:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11353:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11353:14:17"
																	},
																	{
																		"hexValue": "416c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11369:16:17",
																		"type": "",
																		"value": "Already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11346:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11346:40:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11346:40:17"
														}
													]
												},
												"name": "store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11327:6:17",
														"type": ""
													}
												],
												"src": "11229:164:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11545:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11555:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11621:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11626:2:17",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11562:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11562:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11555:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11727:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
																	"nodeType": "YulIdentifier",
																	"src": "11638:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11638:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11638:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11740:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11751:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11756:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11747:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11747:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11740:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11533:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11541:3:17",
														"type": ""
													}
												],
												"src": "11399:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11942:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11952:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11964:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11975:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11960:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11960:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11952:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11999:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12010:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11995:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11995:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12018:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12024:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12014:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12014:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11988:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11988:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11988:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12044:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12178:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12052:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12052:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12044:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11922:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11937:4:17",
														"type": ""
													}
												],
												"src": "11771:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12302:55:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12324:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12332:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12320:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12320:14:17"
																	},
																	{
																		"hexValue": "6e756d546f4d696e742030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12336:13:17",
																		"type": "",
																		"value": "numToMint 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12313:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12313:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12313:37:17"
														}
													]
												},
												"name": "store_literal_in_memory_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12294:6:17",
														"type": ""
													}
												],
												"src": "12196:161:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12509:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12519:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12585:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12590:2:17",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12526:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12526:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12519:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12691:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea",
																	"nodeType": "YulIdentifier",
																	"src": "12602:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12602:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12602:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12704:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12715:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12720:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12711:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12711:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12704:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12497:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12505:3:17",
														"type": ""
													}
												],
												"src": "12363:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12906:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12916:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12928:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12939:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12924:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12924:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12916:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12963:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12974:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12959:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12959:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12982:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12988:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12978:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12978:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12952:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12952:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12952:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13008:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13142:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13016:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13016:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13008:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12886:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12901:4:17",
														"type": ""
													}
												],
												"src": "12735:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13188:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13205:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13208:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13198:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13198:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13198:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13302:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13305:4:17",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13295:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13295:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13295:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13326:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13329:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13319:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13319:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13319:15:17"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "13160:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13390:45:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13400:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13415:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13422:6:17",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13411:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13411:18:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13400:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13372:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13382:7:17",
														"type": ""
													}
												],
												"src": "13346:89:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13469:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13486:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13479:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13479:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13479:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13583:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13586:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13576:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13576:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13576:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13607:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13610:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13600:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13600:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13600:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13441:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13670:150:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13680:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13702:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "13685:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13685:19:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13680:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13713:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13735:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "13718:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13718:19:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13713:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13746:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13757:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13760:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13753:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13753:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13746:3:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13791:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13793:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13793:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13793:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "13778:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13783:6:17",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13775:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:15:17"
															},
															"nodeType": "YulIf",
															"src": "13772:41:17"
														}
													]
												},
												"name": "checked_add_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13657:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13660:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13666:3:17",
														"type": ""
													}
												],
												"src": "13627:193:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13870:152:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13880:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13902:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "13885:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13885:19:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13880:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13913:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13935:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "13918:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13918:19:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13913:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13946:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13958:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13961:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13954:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13954:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13946:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13993:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13995:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13995:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13995:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13979:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13985:6:17",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13976:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13976:16:17"
															},
															"nodeType": "YulIf",
															"src": "13973:42:17"
														}
													]
												},
												"name": "checked_sub_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13856:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13859:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13865:4:17",
														"type": ""
													}
												],
												"src": "13826:196:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14134:57:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14156:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14164:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14152:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14152:14:17"
																	},
																	{
																		"hexValue": "496e76616c696420636c617373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14168:15:17",
																		"type": "",
																		"value": "Invalid class"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14145:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14145:39:17"
														}
													]
												},
												"name": "store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14126:6:17",
														"type": ""
													}
												],
												"src": "14028:163:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14343:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14353:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14419:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14424:2:17",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14360:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14360:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14353:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14525:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																	"nodeType": "YulIdentifier",
																	"src": "14436:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14436:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14436:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14538:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14549:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14554:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14545:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14545:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14538:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14331:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14339:3:17",
														"type": ""
													}
												],
												"src": "14197:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14740:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14750:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14762:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14773:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14758:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14758:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14750:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14797:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14808:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14793:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14793:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14816:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14822:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14812:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14812:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14786:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14786:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14786:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14842:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14976:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14850:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14850:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14842:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14720:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14735:4:17",
														"type": ""
													}
												],
												"src": "14569:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15100:63:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15122:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15130:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15118:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15118:14:17"
																	},
																	{
																		"hexValue": "737570706c7920696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15134:21:17",
																		"type": "",
																		"value": "supply insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15111:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15111:45:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15111:45:17"
														}
													]
												},
												"name": "store_literal_in_memory_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15092:6:17",
														"type": ""
													}
												],
												"src": "14994:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15315:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15325:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15391:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15396:2:17",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15332:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15332:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15325:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15497:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622",
																	"nodeType": "YulIdentifier",
																	"src": "15408:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15408:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15510:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15521:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15526:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15517:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15517:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15510:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15303:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15311:3:17",
														"type": ""
													}
												],
												"src": "15169:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15712:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15722:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15734:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15745:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15730:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15730:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15722:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15769:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15780:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15765:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15765:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15788:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15794:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15784:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15784:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15758:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15758:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15758:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15814:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15948:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15822:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15822:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15814:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15692:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15707:4:17",
														"type": ""
													}
												],
												"src": "15541:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16072:68:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16094:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16102:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16090:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16090:14:17"
																	},
																	{
																		"hexValue": "6e6f207075626c696320726f756e6420756e6c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16106:26:17",
																		"type": "",
																		"value": "no public round unlocked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16083:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16083:50:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16083:50:17"
														}
													]
												},
												"name": "store_literal_in_memory_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16064:6:17",
														"type": ""
													}
												],
												"src": "15966:174:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16292:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16302:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16368:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16373:2:17",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16309:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16309:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16302:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16474:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a",
																	"nodeType": "YulIdentifier",
																	"src": "16385:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16385:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16385:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16487:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16498:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16503:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16494:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16494:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16487:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16280:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16288:3:17",
														"type": ""
													}
												],
												"src": "16146:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16689:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16699:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16711:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16722:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16707:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16707:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16699:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16746:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16757:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16742:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16742:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16765:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16771:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16761:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16761:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16735:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16735:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16735:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16791:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16925:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16799:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16799:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16791:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16669:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16684:4:17",
														"type": ""
													}
												],
												"src": "16518:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17049:119:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17071:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17079:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17067:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17067:14:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17083:34:17",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17060:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17060:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17060:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17139:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17147:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17135:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17135:15:17"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17152:8:17",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17128:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17128:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17128:33:17"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17041:6:17",
														"type": ""
													}
												],
												"src": "16943:225:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17320:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17330:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17396:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17401:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17337:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17337:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17330:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17502:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "17413:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17413:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17413:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17515:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17526:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17531:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17522:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17522:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17515:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17308:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17316:3:17",
														"type": ""
													}
												],
												"src": "17174:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17717:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17727:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17739:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17750:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17735:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17735:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17727:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17774:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17785:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17770:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17770:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17793:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17799:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17789:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17789:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17763:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17763:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17763:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17819:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17953:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17827:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17827:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17819:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17697:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17712:4:17",
														"type": ""
													}
												],
												"src": "17546:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18077:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18099:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18107:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18095:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18095:14:17"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18111:18:17",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18088:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18088:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18088:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18069:6:17",
														"type": ""
													}
												],
												"src": "17971:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18289:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18299:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18365:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18370:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18306:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18306:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18299:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18471:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "18382:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18382:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18382:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18484:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18495:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18500:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18491:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18491:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18484:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18277:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18285:3:17",
														"type": ""
													}
												],
												"src": "18143:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18686:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18696:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18708:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18719:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18704:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18704:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18696:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18743:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18754:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18739:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18739:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18762:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18768:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18758:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18758:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18732:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18732:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18732:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18788:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18922:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18796:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18796:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18788:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18666:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18681:4:17",
														"type": ""
													}
												],
												"src": "18515:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19066:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19076:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19088:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19099:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19084:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19084:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19076:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19156:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19169:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19180:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19165:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19165:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19112:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19112:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19112:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19237:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19250:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19261:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19246:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19246:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19193:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19193:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19193:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19030:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19042:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19050:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19061:4:17",
														"type": ""
													}
												],
												"src": "18940:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19335:62:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19369:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "19371:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19371:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19371:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19358:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19365:1:17",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "19355:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19355:12:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19348:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19348:20:17"
															},
															"nodeType": "YulIf",
															"src": "19345:46:17"
														}
													]
												},
												"name": "validator_assert_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19328:5:17",
														"type": ""
													}
												],
												"src": "19278:119:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19462:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19472:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19483:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19472:7:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19530:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_NFT_CLASS_$1604",
																	"nodeType": "YulIdentifier",
																	"src": "19489:40:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19489:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19489:47:17"
														}
													]
												},
												"name": "cleanup_t_enum$_NFT_CLASS_$1604",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19444:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19454:7:17",
														"type": ""
													}
												],
												"src": "19403:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19620:67:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19630:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19675:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_NFT_CLASS_$1604",
																	"nodeType": "YulIdentifier",
																	"src": "19643:31:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19643:38:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19630:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_NFT_CLASS_$1604_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19600:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19610:9:17",
														"type": ""
													}
												],
												"src": "19548:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19770:78:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19787:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19835:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_NFT_CLASS_$1604_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "19792:42:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19792:49:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19780:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19780:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19780:62:17"
														}
													]
												},
												"name": "abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19758:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19765:3:17",
														"type": ""
													}
												],
												"src": "19693:155:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19992:218:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20002:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20014:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20025:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20010:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20010:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20002:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20082:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20095:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20106:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20091:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20091:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20038:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20038:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20038:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20175:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20188:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20199:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20184:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20184:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20119:55:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20119:84:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20119:84:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_enum$_NFT_CLASS_$1604__to_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19956:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19968:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19976:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19987:4:17",
														"type": ""
													}
												],
												"src": "19854:356:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20259:190:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20269:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20296:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20278:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20278:24:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20269:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20392:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20394:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20394:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20394:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20317:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20324:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20314:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20314:77:17"
															},
															"nodeType": "YulIf",
															"src": "20311:103:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20423:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20434:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20441:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20430:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20430:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20423:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20245:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20255:3:17",
														"type": ""
													}
												],
												"src": "20216:233:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20500:149:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20510:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20533:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20515:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20515:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20510:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20544:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20567:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20549:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20549:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20544:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20578:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20590:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20593:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20586:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20586:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20578:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20620:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20622:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20622:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20622:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "20611:4:17"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20617:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20608:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20608:11:17"
															},
															"nodeType": "YulIf",
															"src": "20605:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20486:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20489:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20495:4:17",
														"type": ""
													}
												],
												"src": "20455:194:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20699:147:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20709:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20732:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20714:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20714:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20709:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20743:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20766:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20748:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20748:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20743:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20777:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20788:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20791:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20784:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20784:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20777:3:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20817:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20819:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20819:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20819:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20809:1:17"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "20812:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20806:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20806:10:17"
															},
															"nodeType": "YulIf",
															"src": "20803:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20686:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20689:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20695:3:17",
														"type": ""
													}
												],
												"src": "20655:191:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20958:75:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20980:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20988:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20976:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20976:14:17"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20992:33:17",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20969:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20969:57:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20969:57:17"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20950:6:17",
														"type": ""
													}
												],
												"src": "20852:181:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21185:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21195:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21261:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21266:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21202:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21202:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21195:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21367:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "21278:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21278:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21278:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21380:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21391:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21396:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21387:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21387:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21380:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21173:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21181:3:17",
														"type": ""
													}
												],
												"src": "21039:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21582:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21592:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21604:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21615:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21600:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21600:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21592:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21639:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21650:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21635:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21635:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21658:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21664:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21654:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21654:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21628:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21628:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21628:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21684:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21818:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21692:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21692:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21684:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21562:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21577:4:17",
														"type": ""
													}
												],
												"src": "21411:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21942:76:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21964:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21972:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21960:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21960:14:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21976:34:17",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21953:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21953:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21953:58:17"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21934:6:17",
														"type": ""
													}
												],
												"src": "21836:182:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22170:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22180:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22246:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22251:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22187:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22187:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22180:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22352:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "22263:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22263:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22263:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22365:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22376:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22381:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22372:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22372:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22365:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22158:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22166:3:17",
														"type": ""
													}
												],
												"src": "22024:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22567:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22577:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22589:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22600:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22585:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22585:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22577:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22624:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22635:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22620:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22620:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22643:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22649:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22639:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22639:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22613:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22613:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22613:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22669:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22803:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22677:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22677:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22669:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22547:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22562:4:17",
														"type": ""
													}
												],
												"src": "22396:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22927:64:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22949:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22957:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22945:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22945:14:17"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22961:22:17",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22938:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22938:46:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22938:46:17"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22919:6:17",
														"type": ""
													}
												],
												"src": "22821:170:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23143:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23153:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23219:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23224:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23160:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23160:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23153:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23325:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "23236:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23236:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23236:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23338:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23349:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23354:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23345:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23345:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23338:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23131:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23139:3:17",
														"type": ""
													}
												],
												"src": "22997:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23540:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23550:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23562:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23573:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23558:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23558:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23550:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23597:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23608:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23593:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23593:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23616:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23622:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23612:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23612:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23586:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23586:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23586:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23642:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23776:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23650:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23650:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23642:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23520:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23535:4:17",
														"type": ""
													}
												],
												"src": "23369:419:17"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_NFT_CLASS_$1604(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_NFT_CLASS_$1604(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_NFT_CLASS_$1604(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_NFT_CLASS_$1604(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_NFT_CLASS_$1604(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Auth\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already unlocked\")\n\n    }\n\n    function abi_encode_t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43(memPtr) {\n\n        mstore(add(memPtr, 0), \"Heros not minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unminted legends\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unminted rares\")\n\n    }\n\n    function abi_encode_t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unminted uncommons\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unminted commons\")\n\n    }\n\n    function abi_encode_t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"numToMint 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint16(x, y) -> sum {\n        x := cleanup_t_uint16(x)\n        y := cleanup_t_uint16(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint16(x, y) -> diff {\n        x := cleanup_t_uint16(x)\n        y := cleanup_t_uint16(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid class\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622(memPtr) {\n\n        mstore(add(memPtr, 0), \"supply insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a(memPtr) {\n\n        mstore(add(memPtr, 0), \"no public round unlocked\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_assert_t_enum$_NFT_CLASS_$1604(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_NFT_CLASS_$1604(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_NFT_CLASS_$1604(value)\n    }\n\n    function convert_t_enum$_NFT_CLASS_$1604_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_NFT_CLASS_$1604(value)\n    }\n\n    function abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_NFT_CLASS_$1604_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_enum$_NFT_CLASS_$1604__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_NFT_CLASS_$1604_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101b75760003560e01c80638d36f8f4116100ec578063c8d4fc601161008a578063f17a677711610064578063f17a677714610515578063f2c5d79714610531578063f2fde38b1461055c578063f78f680a14610585576101b7565b8063c8d4fc6014610490578063d47e107e146104bb578063d87b320b146104d7576101b7565b806398eaa4a7116100c657806398eaa4a7146104045780639f158a781461042d578063a837230714610458578063bad688c614610474576101b7565b80638d36f8f4146103925780638da5cb5b146103ae578063953a6ca8146103d9576101b7565b8063508f0628116101595780636f785cdf116101335780636f785cdf14610322578063715018a61461034d5780637e7f57f2146103645780638456cb591461037b576101b7565b8063508f0628146102b05780635c975abb146102cc5780635eee43f0146102f7576101b7565b806328d3bd1b1161019557806328d3bd1b1461022e578063329cc83f146102455780633a1491271461026e5780633f4ba83a14610299576101b7565b8063087bd107146101bc5780631592fb2a146101e757806320a0c03414610212575b600080fd5b3480156101c857600080fd5b506101d16105a1565b6040516101de91906118ec565b60405180910390f35b3480156101f357600080fd5b506101fc6105ad565b60405161020991906118ec565b60405180910390f35b61022c60048036038101906102279190611996565b6105b9565b005b34801561023a57600080fd5b506102436105d2565b005b34801561025157600080fd5b5061026c600480360381019061026791906119d6565b6108fd565b005b34801561027a57600080fd5b50610283610a32565b60405161029091906118ec565b60405180910390f35b3480156102a557600080fd5b506102ae610a3e565b005b6102ca60048036038101906102c591906119d6565b610a50565b005b3480156102d857600080fd5b506102e1610a69565b6040516102ee9190611a1e565b60405180910390f35b34801561030357600080fd5b5061030c610a7f565b6040516103199190611a1e565b60405180910390f35b34801561032e57600080fd5b50610337610a92565b60405161034491906118ec565b60405180910390f35b34801561035957600080fd5b50610362610a9e565b005b34801561037057600080fd5b50610379610ab2565b005b34801561038757600080fd5b50610390610c12565b005b6103ac60048036038101906103a791906119d6565b610c24565b005b3480156103ba57600080fd5b506103c3610c3d565b6040516103d09190611a48565b60405180910390f35b3480156103e557600080fd5b506103ee610c66565b6040516103fb9190611a1e565b60405180910390f35b34801561041057600080fd5b5061042b600480360381019061042691906119d6565b610c79565b005b34801561043957600080fd5b50610442610cdc565b60405161044f91906118ec565b60405180910390f35b610472600480360381019061046d91906119d6565b610ce8565b005b61048e60048036038101906104899190611996565b610d00565b005b34801561049c57600080fd5b506104a5610d19565b6040516104b29190611a1e565b60405180910390f35b6104d560048036038101906104d091906119d6565b610d2c565b005b3480156104e357600080fd5b506104fe60048036038101906104f99190611a88565b610d45565b60405161050c929190611ac8565b60405180910390f35b61052f600480360381019061052a9190611996565b6111ef565b005b34801561053d57600080fd5b50610546611208565b6040516105539190611a1e565b60405180910390f35b34801561056857600080fd5b50610583600480360381019061057e91906119d6565b61121b565b005b61059f600480360381019061059a9190611996565b61129e565b005b60068060000154905081565b60078060000154905081565b6105c16112b7565b6105cd82826001611301565b505050565b6105da6112b7565b6105e26115ff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611b4e565b60405180910390fd5b600b60029054906101000a900460ff16156106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590611bba565b60405180910390fd5b600b60009054906101000a900460ff1661070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490611c26565b60405180910390fd5b600b60019054906101000a900460ff16801561073a5750600161ffff16610734600761164e565b61ffff16105b610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077090611c92565b60405180910390fd5b600b60019054906101000a900460ff1680156107a65750600561ffff166107a0600861164e565b61ffff16105b6107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90611cfe565b60405180910390fd5b600b60019054906101000a900460ff1680156108125750601961ffff1661080c600961164e565b61ffff16105b610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890611d6a565b60405180910390fd5b600b60019054906101000a900460ff16801561087e5750607d61ffff16610878600a61164e565b61ffff16105b6108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b490611dd6565b60405180910390fd5b6001600b60026101000a81548160ff0219169083151502179055506000600b60016101000a81548160ff0219169083151502179055506108fb61165c565b565b6109056112b7565b61090d6115ff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611b4e565b60405180910390fd5b600b60009054906101000a900460ff16156109e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e090611e42565b60405180910390fd5b60006109fc82601961ffff166000611301565b9050601961ffff168103610a26576001600b60006101000a81548160ff0219169083151502179055505b50610a2f61165c565b50565b60088060000154905081565b610a46611665565b610a4e6116e3565b565b610a586112b7565b610a658160016003611301565b5050565b60008060149054906101000a900460ff16905090565b600b60039054906101000a900460ff1681565b600a8060000154905081565b610aa6611665565b610ab06000611745565b565b610aba6112b7565b610ac26115ff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4590611b4e565b60405180910390fd5b600b60019054906101000a900460ff1615610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9590611bba565b60405180910390fd5b600b60009054906101000a900460ff16610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be490611c26565b60405180910390fd5b6001600b60016101000a81548160ff021916908315150217905550610c1061165c565b565b610c1a611665565b610c22611809565b565b610c2c6112b7565b610c398160016002611301565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b60019054906101000a900460ff1681565b610c81611665565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60098060000154905081565b610cf06112b7565b610cfc81600180611301565b5050565b610d086112b7565b610d1482826004611301565b505050565b600b60009054906101000a900460ff1681565b610d346112b7565b610d418160016004611301565b5050565b600080610d506112b7565b60008411610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a90611eae565b60405180910390fd5b600b60009054906101000a900460ff16610de2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd990611c26565b60405180910390fd5b600080600080600060016004811115610dfe57610dfd611ece565b5b886004811115610e1157610e10611ece565b5b03610e7f57610e20600761164e565b94508885610e2e9190611f3a565b9350600161ffff169250600a61ffff169150605061ffff169050846019610e559190611f3a565b61ffff1696506001846019610e6a9190611f3a565b610e749190611f70565b61ffff169550611083565b60026004811115610e9357610e92611ece565b5b886004811115610ea657610ea5611ece565b5b03610f1557610eb5600861164e565b94508885610ec39190611f3a565b9350600561ffff169250603261ffff16915061019061ffff16905084607e610eeb9190611f3a565b61ffff169650600184607e610f009190611f3a565b610f0a9190611f70565b61ffff169550611082565b60036004811115610f2957610f28611ece565b5b886004811115610f3c57610f3b611ece565b5b03610fad57610f4b600961164e565b94508885610f599190611f3a565b9350601961ffff16925060fa61ffff1691506107d061ffff16905084610273610f829190611f3a565b61ffff169650600184610273610f989190611f3a565b610fa29190611f70565b61ffff169550611081565b600480811115610fc057610fbf611ece565b5b886004811115610fd357610fd2611ece565b5b0361104557610fe2600a61164e565b94508885610ff09190611f3a565b9350607d61ffff1692506104e261ffff16915061168a61ffff16905084610c3861101a9190611f3a565b61ffff169650600184610c386110309190611f3a565b61103a9190611f70565b61ffff169550611080565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107790611ff2565b60405180910390fd5b5b5b5b600b60019054906101000a900460ff16156110e457828461ffff1611156110df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d69061205e565b60405180910390fd5b6111e3565b600b60029054906101000a900460ff161561114557818461ffff161115611140576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111379061205e565b60405180910390fd5b6111e2565b600b60039054906101000a900460ff16156111a657808461ffff1611156111a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111989061205e565b60405180910390fd5b6111e1565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d8906120ca565b60405180910390fd5b5b5b50505050509250929050565b6111f76112b7565b61120382826003611301565b505050565b600b60029054906101000a900460ff1681565b611223611665565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611292576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112899061215c565b60405180910390fd5b61129b81611745565b50565b6112a66112b7565b6112b282826002611301565b505050565b6112bf610a69565b156112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f6906121c8565b60405180910390fd5b565b600061130b6112b7565b600b60009054906101000a900460ff1661135a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135190611c26565b60405180910390fd5b6000806113678585610d45565b91509150600082905060008390505b8281116115da57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819489836040518363ffffffff1660e01b81526004016113da9291906121e8565b600060405180830381600087803b1580156113f457600080fd5b505af1158015611408573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be1e114589886040518363ffffffff1660e01b8152600401611469929190612259565b600060405180830381600087803b15801561148357600080fd5b505af1158015611497573d6000803e3d6000fd5b50505050809150600160048111156114b2576114b1611ece565b5b8660048111156114c5576114c4611ece565b5b036114d9576114d4600761186c565b6115c7565b600260048111156114ed576114ec611ece565b5b866004811115611500576114ff611ece565b5b036115145761150f600861186c565b6115c6565b6003600481111561152857611527611ece565b5b86600481111561153b5761153a611ece565b5b0361154f5761154a600961186c565b6115c5565b60048081111561156257611561611ece565b5b86600481111561157557611574611ece565b5b0361158957611584600a61186c565b6115c4565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bb90611ff2565b60405180910390fd5b5b5b5b80806115d290612282565b915050611376565b50600183826115e991906122ca565b6115f391906122fe565b93505050509392505050565b600260015403611644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163b9061237e565b60405180910390fd5b6002600181905550565b600081600001549050919050565b60018081905550565b61166d611882565b73ffffffffffffffffffffffffffffffffffffffff1661168b610c3d565b73ffffffffffffffffffffffffffffffffffffffff16146116e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d8906123ea565b60405180910390fd5b565b6116eb61188a565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61172e611882565b60405161173b9190611a48565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118116112b7565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611855611882565b6040516118629190611a48565b60405180910390a1565b6001816000016000828254019250508190555050565b600033905090565b611892610a69565b6118d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c890612456565b60405180910390fd5b565b6000819050919050565b6118e6816118d3565b82525050565b600060208201905061190160008301846118dd565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119378261190c565b9050919050565b6119478161192c565b811461195257600080fd5b50565b6000813590506119648161193e565b92915050565b611973816118d3565b811461197e57600080fd5b50565b6000813590506119908161196a565b92915050565b600080604083850312156119ad576119ac611907565b5b60006119bb85828601611955565b92505060206119cc85828601611981565b9150509250929050565b6000602082840312156119ec576119eb611907565b5b60006119fa84828501611955565b91505092915050565b60008115159050919050565b611a1881611a03565b82525050565b6000602082019050611a336000830184611a0f565b92915050565b611a428161192c565b82525050565b6000602082019050611a5d6000830184611a39565b92915050565b60058110611a7057600080fd5b50565b600081359050611a8281611a63565b92915050565b60008060408385031215611a9f57611a9e611907565b5b6000611aad85828601611981565b9250506020611abe85828601611a73565b9150509250929050565b6000604082019050611add60008301856118dd565b611aea60208301846118dd565b9392505050565b600082825260208201905092915050565b7f4e6f204175746800000000000000000000000000000000000000000000000000600082015250565b6000611b38600783611af1565b9150611b4382611b02565b602082019050919050565b60006020820190508181036000830152611b6781611b2b565b9050919050565b7f416c726561647920756e6c6f636b656400000000000000000000000000000000600082015250565b6000611ba4601083611af1565b9150611baf82611b6e565b602082019050919050565b60006020820190508181036000830152611bd381611b97565b9050919050565b7f4865726f73206e6f74206d696e74656400000000000000000000000000000000600082015250565b6000611c10601083611af1565b9150611c1b82611bda565b602082019050919050565b60006020820190508181036000830152611c3f81611c03565b9050919050565b7f556e6d696e746564206c6567656e647300000000000000000000000000000000600082015250565b6000611c7c601083611af1565b9150611c8782611c46565b602082019050919050565b60006020820190508181036000830152611cab81611c6f565b9050919050565b7f556e6d696e746564207261726573000000000000000000000000000000000000600082015250565b6000611ce8600e83611af1565b9150611cf382611cb2565b602082019050919050565b60006020820190508181036000830152611d1781611cdb565b9050919050565b7f556e6d696e74656420756e636f6d6d6f6e730000000000000000000000000000600082015250565b6000611d54601283611af1565b9150611d5f82611d1e565b602082019050919050565b60006020820190508181036000830152611d8381611d47565b9050919050565b7f556e6d696e74656420636f6d6d6f6e7300000000000000000000000000000000600082015250565b6000611dc0601083611af1565b9150611dcb82611d8a565b602082019050919050565b60006020820190508181036000830152611def81611db3565b9050919050565b7f416c7265616479206d696e746564000000000000000000000000000000000000600082015250565b6000611e2c600e83611af1565b9150611e3782611df6565b602082019050919050565b60006020820190508181036000830152611e5b81611e1f565b9050919050565b7f6e756d546f4d696e742030000000000000000000000000000000000000000000600082015250565b6000611e98600b83611af1565b9150611ea382611e62565b602082019050919050565b60006020820190508181036000830152611ec781611e8b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600061ffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f4582611efd565b9150611f5083611efd565b9250828201905061ffff811115611f6a57611f69611f0b565b5b92915050565b6000611f7b82611efd565b9150611f8683611efd565b9250828203905061ffff811115611fa057611f9f611f0b565b5b92915050565b7f496e76616c696420636c61737300000000000000000000000000000000000000600082015250565b6000611fdc600d83611af1565b9150611fe782611fa6565b602082019050919050565b6000602082019050818103600083015261200b81611fcf565b9050919050565b7f737570706c7920696e73756666696369656e7400000000000000000000000000600082015250565b6000612048601383611af1565b915061205382612012565b602082019050919050565b600060208201905081810360008301526120778161203b565b9050919050565b7f6e6f207075626c696320726f756e6420756e6c6f636b65640000000000000000600082015250565b60006120b4601883611af1565b91506120bf8261207e565b602082019050919050565b600060208201905081810360008301526120e3816120a7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612146602683611af1565b9150612151826120ea565b604082019050919050565b6000602082019050818103600083015261217581612139565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006121b2601083611af1565b91506121bd8261217c565b602082019050919050565b600060208201905081810360008301526121e1816121a5565b9050919050565b60006040820190506121fd6000830185611a39565b61220a60208301846118dd565b9392505050565b6005811061222257612221611ece565b5b50565b600081905061223382612211565b919050565b600061224382612225565b9050919050565b61225381612238565b82525050565b600060408201905061226e6000830185611a39565b61227b602083018461224a565b9392505050565b600061228d826118d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122bf576122be611f0b565b5b600182019050919050565b60006122d5826118d3565b91506122e0836118d3565b92508282039050818111156122f8576122f7611f0b565b5b92915050565b6000612309826118d3565b9150612314836118d3565b925082820190508082111561232c5761232b611f0b565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612368601f83611af1565b915061237382612332565b602082019050919050565b600060208201905081810360008301526123978161235b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006123d4602083611af1565b91506123df8261239e565b602082019050919050565b60006020820190508181036000830152612403816123c7565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000612440601483611af1565b915061244b8261240a565b602082019050919050565b6000602082019050818103600083015261246f81612433565b905091905056fea264697066735822122087297737bc07377cdea28d7b69ca2139cb1fb07248ae0a21c497658dc4e5741864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D36F8F4 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xC8D4FC60 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF17A6777 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF17A6777 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xF2C5D797 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0xF78F680A EQ PUSH2 0x585 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0xC8D4FC60 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xD47E107E EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xD87B320B EQ PUSH2 0x4D7 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x98EAA4A7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x98EAA4A7 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x9F158A78 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xA8372307 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xBAD688C6 EQ PUSH2 0x474 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x8D36F8F4 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x953A6CA8 EQ PUSH2 0x3D9 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x508F0628 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6F785CDF GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6F785CDF EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x7E7F57F2 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x37B JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x508F0628 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x5EEE43F0 EQ PUSH2 0x2F7 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x28D3BD1B GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x28D3BD1B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x329CC83F EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x3A149127 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x299 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x87BD107 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x1592FB2A EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x20A0C034 EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x5B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x5D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0xA9E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH2 0xAB2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH2 0xC12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EE PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A5 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50C SWAP3 SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x546 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x121B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x5CD DUP3 DUP3 PUSH1 0x1 PUSH2 0x1301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x73A JUMPI POP PUSH1 0x1 PUSH2 0xFFFF AND PUSH2 0x734 PUSH1 0x7 PUSH2 0x164E JUMP JUMPDEST PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x770 SWAP1 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x7A6 JUMPI POP PUSH1 0x5 PUSH2 0xFFFF AND PUSH2 0x7A0 PUSH1 0x8 PUSH2 0x164E JUMP JUMPDEST PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP1 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x812 JUMPI POP PUSH1 0x19 PUSH2 0xFFFF AND PUSH2 0x80C PUSH1 0x9 PUSH2 0x164E JUMP JUMPDEST PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x848 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x87E JUMPI POP PUSH1 0x7D PUSH2 0xFFFF AND PUSH2 0x878 PUSH1 0xA PUSH2 0x164E JUMP JUMPDEST PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x8BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B4 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8FB PUSH2 0x165C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x905 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x90D PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x990 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E0 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9FC DUP3 PUSH1 0x19 PUSH2 0xFFFF AND PUSH1 0x0 PUSH2 0x1301 JUMP JUMPDEST SWAP1 POP PUSH1 0x19 PUSH2 0xFFFF AND DUP2 SUB PUSH2 0xA26 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP PUSH2 0xA2F PUSH2 0x165C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xA46 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xA4E PUSH2 0x16E3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA58 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xA65 DUP2 PUSH1 0x1 PUSH1 0x3 PUSH2 0x1301 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xAA6 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xAB0 PUSH1 0x0 PUSH2 0x1745 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xABA PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xAC2 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB45 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE4 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC10 PUSH2 0x165C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC1A PUSH2 0x1665 JUMP JUMPDEST PUSH2 0xC22 PUSH2 0x1809 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC2C PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xC39 DUP2 PUSH1 0x1 PUSH1 0x2 PUSH2 0x1301 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC81 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xCF0 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH1 0x1 DUP1 PUSH2 0x1301 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD08 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xD14 DUP3 DUP3 PUSH1 0x4 PUSH2 0x1301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xD34 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH1 0x1 PUSH1 0x4 PUSH2 0x1301 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD50 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD9 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDFE JUMPI PUSH2 0xDFD PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE11 JUMPI PUSH2 0xE10 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xE7F JUMPI PUSH2 0xE20 PUSH1 0x7 PUSH2 0x164E JUMP JUMPDEST SWAP5 POP DUP9 DUP6 PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST SWAP4 POP PUSH1 0x1 PUSH2 0xFFFF AND SWAP3 POP PUSH1 0xA PUSH2 0xFFFF AND SWAP2 POP PUSH1 0x50 PUSH2 0xFFFF AND SWAP1 POP DUP5 PUSH1 0x19 PUSH2 0xE55 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFFFF AND SWAP7 POP PUSH1 0x1 DUP5 PUSH1 0x19 PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xE74 SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP6 POP PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE93 JUMPI PUSH2 0xE92 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA5 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xF15 JUMPI PUSH2 0xEB5 PUSH1 0x8 PUSH2 0x164E JUMP JUMPDEST SWAP5 POP DUP9 DUP6 PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST SWAP4 POP PUSH1 0x5 PUSH2 0xFFFF AND SWAP3 POP PUSH1 0x32 PUSH2 0xFFFF AND SWAP2 POP PUSH2 0x190 PUSH2 0xFFFF AND SWAP1 POP DUP5 PUSH1 0x7E PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFFFF AND SWAP7 POP PUSH1 0x1 DUP5 PUSH1 0x7E PUSH2 0xF00 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xF0A SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP6 POP PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF29 JUMPI PUSH2 0xF28 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF3C JUMPI PUSH2 0xF3B PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xFAD JUMPI PUSH2 0xF4B PUSH1 0x9 PUSH2 0x164E JUMP JUMPDEST SWAP5 POP DUP9 DUP6 PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST SWAP4 POP PUSH1 0x19 PUSH2 0xFFFF AND SWAP3 POP PUSH1 0xFA PUSH2 0xFFFF AND SWAP2 POP PUSH2 0x7D0 PUSH2 0xFFFF AND SWAP1 POP DUP5 PUSH2 0x273 PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFFFF AND SWAP7 POP PUSH1 0x1 DUP5 PUSH2 0x273 PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP6 POP PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1045 JUMPI PUSH2 0xFE2 PUSH1 0xA PUSH2 0x164E JUMP JUMPDEST SWAP5 POP DUP9 DUP6 PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST SWAP4 POP PUSH1 0x7D PUSH2 0xFFFF AND SWAP3 POP PUSH2 0x4E2 PUSH2 0xFFFF AND SWAP2 POP PUSH2 0x168A PUSH2 0xFFFF AND SWAP1 POP DUP5 PUSH2 0xC38 PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0xFFFF AND SWAP7 POP PUSH1 0x1 DUP5 PUSH2 0xC38 PUSH2 0x1030 SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x103A SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP6 POP PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1077 SWAP1 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10E4 JUMPI DUP3 DUP5 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x10DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D6 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1145 JUMPI DUP2 DUP5 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x1140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1137 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11A6 JUMPI DUP1 DUP5 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1198 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP1 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F7 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x1203 DUP3 DUP3 PUSH1 0x3 PUSH2 0x1301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1223 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129B DUP2 PUSH2 0x1745 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x12A6 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x12B2 DUP3 DUP3 PUSH1 0x2 PUSH2 0x1301 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12BF PUSH2 0xA69 JUMP JUMPDEST ISZERO PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F6 SWAP1 PUSH2 0x21C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130B PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x135A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1351 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1367 DUP6 DUP6 PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x15DA JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP10 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DA SWAP3 SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1408 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBE1E1145 DUP10 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1469 SWAP3 SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1497 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 SWAP2 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP7 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14C5 JUMPI PUSH2 0x14C4 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14D9 JUMPI PUSH2 0x14D4 PUSH1 0x7 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14ED JUMPI PUSH2 0x14EC PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP7 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1514 JUMPI PUSH2 0x150F PUSH1 0x8 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP7 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x153B JUMPI PUSH2 0x153A PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x154F JUMPI PUSH2 0x154A PUSH1 0x9 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x1562 JUMPI PUSH2 0x1561 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST DUP7 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1575 JUMPI PUSH2 0x1574 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1589 JUMPI PUSH2 0x1584 PUSH1 0xA PUSH2 0x186C JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP1 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x15D2 SWAP1 PUSH2 0x2282 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0x1 DUP4 DUP3 PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x22FE JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1644 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163B SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x166D PUSH2 0x1882 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168B PUSH2 0xC3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D8 SWAP1 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x16EB PUSH2 0x188A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x172E PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173B SWAP2 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1811 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1855 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1862 SWAP2 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1892 PUSH2 0xA69 JUMP JUMPDEST PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C8 SWAP1 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E6 DUP2 PUSH2 0x18D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1901 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1937 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP2 EQ PUSH2 0x1952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1964 DUP2 PUSH2 0x193E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1973 DUP2 PUSH2 0x18D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x197E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1990 DUP2 PUSH2 0x196A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AC PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BB DUP6 DUP3 DUP7 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CC DUP6 DUP3 DUP7 ADD PUSH2 0x1981 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP5 DUP3 DUP6 ADD PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x1A03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A42 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A82 DUP2 PUSH2 0x1A63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AAD DUP6 DUP3 DUP7 ADD PUSH2 0x1981 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ABE DUP6 DUP3 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1ADD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x18DD JUMP JUMPDEST PUSH2 0x1AEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F204175746800000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B38 PUSH1 0x7 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B43 DUP3 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B67 DUP2 PUSH2 0x1B2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920756E6C6F636B656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA4 PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAF DUP3 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD3 DUP2 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4865726F73206E6F74206D696E74656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C10 PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1B DUP3 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C3F DUP2 PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6D696E746564206C6567656E647300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C87 DUP3 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CAB DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6D696E746564207261726573000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE8 PUSH1 0xE DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF3 DUP3 PUSH2 0x1CB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D17 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6D696E74656420756E636F6D6D6F6E730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D54 PUSH1 0x12 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5F DUP3 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D83 DUP2 PUSH2 0x1D47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E6D696E74656420636F6D6D6F6E7300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC0 PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCB DUP3 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEF DUP2 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479206D696E746564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2C PUSH1 0xE DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E37 DUP3 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E5B DUP2 PUSH2 0x1E1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E756D546F4D696E742030000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E98 PUSH1 0xB DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA3 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC7 DUP2 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F45 DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F50 DUP4 PUSH2 0x1EFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x1F6A JUMPI PUSH2 0x1F69 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7B DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F86 DUP4 PUSH2 0x1EFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x1FA0 JUMPI PUSH2 0x1F9F PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636C61737300000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDC PUSH1 0xD DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE7 DUP3 PUSH2 0x1FA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x200B DUP2 PUSH2 0x1FCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x737570706C7920696E73756666696369656E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2048 PUSH1 0x13 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2053 DUP3 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2077 DUP2 PUSH2 0x203B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F207075626C696320726F756E6420756E6C6F636B65640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B4 PUSH1 0x18 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BF DUP3 PUSH2 0x207E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E3 DUP2 PUSH2 0x20A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2146 PUSH1 0x26 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2151 DUP3 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2175 DUP2 PUSH2 0x2139 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B2 PUSH1 0x10 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x21BD DUP3 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21E1 DUP2 PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x220A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x2222 JUMPI PUSH2 0x2221 PUSH2 0x1ECE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2233 DUP3 PUSH2 0x2211 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2243 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x2238 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x226E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x227B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x224A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228D DUP3 PUSH2 0x18D3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22BF JUMPI PUSH2 0x22BE PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D5 DUP3 PUSH2 0x18D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP4 PUSH2 0x18D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22F8 JUMPI PUSH2 0x22F7 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2309 DUP3 PUSH2 0x18D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2314 DUP4 PUSH2 0x18D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x232C JUMPI PUSH2 0x232B PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2368 PUSH1 0x1F DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2373 DUP3 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2397 DUP2 PUSH2 0x235B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D4 PUSH1 0x20 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DF DUP3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2403 DUP2 PUSH2 0x23C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2440 PUSH1 0x14 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x244B DUP3 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x246F DUP2 PUSH2 0x2433 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x29 PUSH24 0x37BC07377CDEA28D7B69CA2139CB1FB07248AE0A21C49765 DUP14 0xC4 0xE5 PUSH21 0x1864736F6C63430008130033000000000000000000 ",
							"sourceMap": "486:10752:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1097:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9876:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3631:974;;;;;;;;;;;;;:::i;:::-;;4631:388;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1144:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3042:63;;;;;;;;;;;;;:::i;:::-;;10615:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1428:37:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1238:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;3323:301:12;;;;;;;;;;;;;:::i;:::-;;2977:59;;;;;;;;;;;;;:::i;:::-;;10327:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1342:37:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2631:134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1189:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10042:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10749:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1309:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10907:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5026:3328;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;10453:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1385:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10173:148:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1052:39;;;;;;;;;:::o;1097:41::-;;;;;;;;;:::o;9876:151::-;1239:19:1;:17;:19::i;:::-;9974:46:12::1;9984:6;9992:9;10003:16;9974:9;:46::i;:::-;;9876:151:::0;;:::o;3631:974::-;1239:19:1;:17;:19::i;:::-;2261:21:2::1;:19;:21::i;:::-;3718:20:12::2;:32;3739:10;3718:32;;;;;;;;;;;;;;;;;;;;;;;;;3710:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3781:25;;;;;;;;;;;3780:26;3772:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3897:15;;;;;;;;;;;3889:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3951:25;;;;;;;;;;;:101;;;;;881:1:11;3980:72:12;;3987:27;:17;:25;:27::i;:::-;3980:72;;;3951:101;3943:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;4091:25;;;;;;;;;;;:97;;;;;933:1:11;4120:68:12;;4127:25;:15;:23;:25::i;:::-;4120:68;;;4091:97;4083:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;4225:25;;;;;;;;;;;:105;;;;;989:2:11;4254:76:12;;4261:29;:19;:27;:29::i;:::-;4254:76;;;4225:105;4217:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;4371:25;;;;;;;;;;;:100;;;;;1044:3:11;4400:71:12;;4407:27;:17;:25;:27::i;:::-;4400:71;;;4371:100;4363:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;4531:4;4503:25;;:32;;;;;;;;;;;;;;;;;;4573:5;4545:25;;:33;;;;;;;;;;;;;;;;;;2303:20:2::1;:18;:20::i;:::-;3631:974:12:o:0;4631:388::-;1239:19:1;:17;:19::i;:::-;2261:21:2::1;:19;:21::i;:::-;4721:20:12::2;:32;4742:10;4721:32;;;;;;;;;;;;;;;;;;;;;;;;;4713:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4784:15;;;;;;;;;;;4783:16;4775:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;4829:17;4849:67;4859:6;826:2:11;4849:67:12;;4901:14;4849:9;:67::i;:::-;4829:87;;826:2:11;4930:45:12;;:9;:45:::0;4927:84:::2;;5007:4;4989:15;;:22;;;;;;;;;;;;;;;;;;4927:84;4703:316;2303:20:2::1;:18;:20::i;:::-;4631:388:12::0;:::o;1144:39::-;;;;;;;;;:::o;3042:63::-;1094:13:0;:11;:13::i;:::-;3088:10:12::1;:8;:10::i;:::-;3042:63::o:0;10615:128::-;1239:19:1;:17;:19::i;:::-;10696:40:12::1;10706:6;10714:1;10717:18;10696:9;:40::i;:::-;;10615:128:::0;:::o;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;1428:37:12:-;;;;;;;;;;;;;:::o;1238:41::-;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3323:301:12:-;1239:19:1;:17;:19::i;:::-;2261:21:2::1;:19;:21::i;:::-;3410:20:12::2;:32;3431:10;3410:32;;;;;;;;;;;;;;;;;;;;;;;;;3402:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3473:25;;;;;;;;;;;3472:26;3464:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3538:15;;;;;;;;;;;3530:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3613:4;3585:25;;:32;;;;;;;;;;;;;;;;;;2303:20:2::1;:18;:20::i;:::-;3323:301:12:o:0;2977:59::-;1094:13:0;:11;:13::i;:::-;3021:8:12::1;:6;:8::i;:::-;2977:59::o:0;10327:120::-;1239:19:1;:17;:19::i;:::-;10404:36:12::1;10414:6;10422:1;10425:14;10404:9;:36::i;:::-;;10327:120:::0;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1342:37:12:-;;;;;;;;;;;;;:::o;2631:134::-;1094:13:0;:11;:13::i;:::-;2754:4:12::1;2714:20;:37;2735:15;2714:37;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;2631:134:::0;:::o;1189:43::-;;;;;;;;;:::o;10042:124::-;1239:19:1;:17;:19::i;:::-;10121:38:12::1;10131:6;10139:1;10142:16:::0;10121:9:::1;:38::i;:::-;;10042:124:::0;:::o;10749:152::-;1239:19:1;:17;:19::i;:::-;10848:46:12::1;10858:6;10866:9;10877:16;10848:9;:46::i;:::-;;10749:152:::0;;:::o;1309:27::-;;;;;;;;;;;;;:::o;10907:124::-;1239:19:1;:17;:19::i;:::-;10986:38:12::1;10996:6;11004:1;11007:16;10986:9;:38::i;:::-;;10907:124:::0;:::o;5026:3328::-;5130:22;5154:20;1239:19:1;:17;:19::i;:::-;5206:1:12::1;5194:9;:13;5186:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:15;;;;;;;;;;;5233:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;5288:19;5317:18:::0;5345:26:::1;5381::::0;5417::::1;5520:16;5505:31;;;;;;;;:::i;:::-;;:11;:31;;;;;;;;:::i;:::-;;::::0;5502:2381:::1;;5578:27;:17;:25;:27::i;:::-;5556:50;;5660:9;5638:12;:32;;;;:::i;:::-;5624:46;;881:1:11;5689:55:12;;;;1187:2:11;5762:55:12;;;;1497:2:11;5835:55:12;;;;5964:12;2208:2:11;5926:50:12;;;;:::i;:::-;5909:67;;;;6061:1;6047:11;2208:2:11;6009:49:12;;;;:::i;:::-;:53;;;;:::i;:::-;5994:68;;;;5502:2381;;;6105:14;6090:29;;;;;;;;:::i;:::-;;:11;:29;;;;;;;;:::i;:::-;;::::0;6087:1796:::1;;6161:25;:15;:23;:25::i;:::-;6139:48;;6241:9;6219:12;:32;;;;:::i;:::-;6205:46;;933:1:11;6270:53:12;;;;1240:2:11;6341:53:12;;;;1550:3:11;6412:53:12;;;;6537:12;2262:3:11;6501:48:12;;;;:::i;:::-;6484:65;;;;6632:1;6618:11;2262:3:11;6582:47:12;;;;:::i;:::-;:51;;;;:::i;:::-;6567:66;;;;6087:1796;;;6676:18;6661:33;;;;;;;;:::i;:::-;;:11;:33;;;;;;;;:::i;:::-;;::::0;6658:1225:::1;;6736:29;:19;:27;:29::i;:::-;6714:52;;6820:9;6798:12;:32;;;;:::i;:::-;6784:46;;989:2:11;6849:57:12;;;;1297:3:11;6924:57:12;;;;1608:4:11;6999:57:12;;;;7132:12;2321:3:11;7092:52:12;;;;:::i;:::-;7075:69;;;;7231:1;7217:11;2321:3:11;7177:51:12;;;;:::i;:::-;:55;;;;:::i;:::-;7162:70;;;;6658:1225;;;7275:16;7260:31:::0;::::1;;;;;;;:::i;:::-;;:11;:31;;;;;;;;:::i;:::-;;::::0;7257:626:::1;;7333:27;:17;:25;:27::i;:::-;7311:50;;7415:9;7393:12;:32;;;;:::i;:::-;7379:46;;1044:3:11;7444:55:12;;;;1353:4:11;7517:55:12;;;;1665:4:11;7590:55:12;;;;7719:12;2378:4:11;7681:50:12;;;;:::i;:::-;7664:67;;;;7816:1;7802:11;2378:4:11;7764:49:12;;;;:::i;:::-;:53;;;;:::i;:::-;7749:68;;;;7257:626;;;7860:23;;;;;;;;;;:::i;:::-;;;;;;;;7257:626;6658:1225;6087:1796;5502:2381;7935:25;;;;;;;;;;;7932:414;;;7998:18;7983:11;:33;;;;7975:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7932:414;;;8058:25;;;;;;;;;;;8055:291;;;8121:18;8106:11;:33;;;;8098:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8055:291;;;8181:25;;;;;;;;;;;8178:168;;;8243:18;8228:11;:33;;;;8220:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8178:168;;;8312:34;;;;;;;;;;:::i;:::-;;;;;;;;8178:168;8055:291;7932:414;5176:3178;;;;;5026:3328:::0;;;;;:::o;10453:156::-;1239:19:1;:17;:19::i;:::-;10554:48:12::1;10564:6;10572:9;10583:18;10554:9;:48::i;:::-;;10453:156:::0;;:::o;1385:37::-;;;;;;;;;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;10173:148:12:-;1239:19:1;:17;:19::i;:::-;10270:44:12::1;10280:6;10288:9;10299:14;10270:9;:44::i;:::-;;10173:148:::0;;:::o;1767:106:1:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;8361:1508:12:-;8470:17;1239:19:1;:17;:19::i;:::-;8507:15:12::1;;;;;;;;;;;8499:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;8751:22;8775:20:::0;8812:41:::1;8830:9;8841:11;8812:17;:41::i;:::-;8750:103;;;;8865:26;8894:14;8865:43;;8942:20;8965:14;8942:37;;8938:762;8997:12;8981;:28;8938:762;;9054:14;;;;;;;;;;;:23;;;9078:6;9086:12;9054:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9113:15;;;;;;;;;;;:25;;;9139:6;9147:11;9113:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9195:12;9174:33;;9283:16;9268:31;;;;;;;;:::i;:::-;;:11;:31;;;;;;;;:::i;:::-;;::::0;9265:423:::1;;9317:29;:17;:27;:29::i;:::-;9265:423;;;9383:14;9368:29;;;;;;;;:::i;:::-;;:11;:29;;;;;;;;:::i;:::-;;::::0;9365:323:::1;;9415:27;:15;:25;:27::i;:::-;9365:323;;;9479:18;9464:33;;;;;;;;:::i;:::-;;:11;:33;;;;;;;;:::i;:::-;;::::0;9461:227:::1;;9515:31;:19;:29;:31::i;:::-;9461:227;;;9583:16;9568:31:::0;::::1;;;;;;;:::i;:::-;;:11;:31;;;;;;;;:::i;:::-;;::::0;9565:123:::1;;9617:29;:17;:27;:29::i;:::-;9565:123;;;9665:23;;;;;;;;;;:::i;:::-;;;;;;;;9565:123;9461:227;9365:323;9265:423;9011:14;;;;;:::i;:::-;;;;8938:762;;;;9861:1;9844:14;9823:18;:35;;;;:::i;:::-;:39;;;;:::i;:::-;9811:51;;8488:1381;;;8361:1508:::0;;;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;827:112:7:-;892:7;918;:14;;;911:21;;827:112;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:117:1:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;945:123:7:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;1945:106:1:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;7:77:17:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:90::-;2398:7;2441:5;2434:13;2427:21;2416:32;;2364:90;;;:::o;2460:109::-;2541:21;2556:5;2541:21;:::i;:::-;2536:3;2529:34;2460:109;;:::o;2575:210::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2713:65;2775:1;2764:9;2760:17;2751:6;2713:65;:::i;:::-;2575:210;;;;:::o;2791:118::-;2878:24;2896:5;2878:24;:::i;:::-;2873:3;2866:37;2791:118;;:::o;2915:222::-;3008:4;3046:2;3035:9;3031:18;3023:26;;3059:71;3127:1;3116:9;3112:17;3103:6;3059:71;:::i;:::-;2915:222;;;;:::o;3143:113::-;3230:1;3223:5;3220:12;3210:40;;3246:1;3243;3236:12;3210:40;3143:113;:::o;3262:167::-;3322:5;3360:6;3347:20;3338:29;;3376:47;3417:5;3376:47;:::i;:::-;3262:167;;;;:::o;3435:502::-;3517:6;3525;3574:2;3562:9;3553:7;3549:23;3545:32;3542:119;;;3580:79;;:::i;:::-;3542:119;3700:1;3725:53;3770:7;3761:6;3750:9;3746:22;3725:53;:::i;:::-;3715:63;;3671:117;3827:2;3853:67;3912:7;3903:6;3892:9;3888:22;3853:67;:::i;:::-;3843:77;;3798:132;3435:502;;;;;:::o;3943:332::-;4064:4;4102:2;4091:9;4087:18;4079:26;;4115:71;4183:1;4172:9;4168:17;4159:6;4115:71;:::i;:::-;4196:72;4264:2;4253:9;4249:18;4240:6;4196:72;:::i;:::-;3943:332;;;;;:::o;4281:169::-;4365:11;4399:6;4394:3;4387:19;4439:4;4434:3;4430:14;4415:29;;4281:169;;;;:::o;4456:157::-;4596:9;4592:1;4584:6;4580:14;4573:33;4456:157;:::o;4619:365::-;4761:3;4782:66;4846:1;4841:3;4782:66;:::i;:::-;4775:73;;4857:93;4946:3;4857:93;:::i;:::-;4975:2;4970:3;4966:12;4959:19;;4619:365;;;:::o;4990:419::-;5156:4;5194:2;5183:9;5179:18;5171:26;;5243:9;5237:4;5233:20;5229:1;5218:9;5214:17;5207:47;5271:131;5397:4;5271:131;:::i;:::-;5263:139;;4990:419;;;:::o;5415:166::-;5555:18;5551:1;5543:6;5539:14;5532:42;5415:166;:::o;5587:366::-;5729:3;5750:67;5814:2;5809:3;5750:67;:::i;:::-;5743:74;;5826:93;5915:3;5826:93;:::i;:::-;5944:2;5939:3;5935:12;5928:19;;5587:366;;;:::o;5959:419::-;6125:4;6163:2;6152:9;6148:18;6140:26;;6212:9;6206:4;6202:20;6198:1;6187:9;6183:17;6176:47;6240:131;6366:4;6240:131;:::i;:::-;6232:139;;5959:419;;;:::o;6384:166::-;6524:18;6520:1;6512:6;6508:14;6501:42;6384:166;:::o;6556:366::-;6698:3;6719:67;6783:2;6778:3;6719:67;:::i;:::-;6712:74;;6795:93;6884:3;6795:93;:::i;:::-;6913:2;6908:3;6904:12;6897:19;;6556:366;;;:::o;6928:419::-;7094:4;7132:2;7121:9;7117:18;7109:26;;7181:9;7175:4;7171:20;7167:1;7156:9;7152:17;7145:47;7209:131;7335:4;7209:131;:::i;:::-;7201:139;;6928:419;;;:::o;7353:166::-;7493:18;7489:1;7481:6;7477:14;7470:42;7353:166;:::o;7525:366::-;7667:3;7688:67;7752:2;7747:3;7688:67;:::i;:::-;7681:74;;7764:93;7853:3;7764:93;:::i;:::-;7882:2;7877:3;7873:12;7866:19;;7525:366;;;:::o;7897:419::-;8063:4;8101:2;8090:9;8086:18;8078:26;;8150:9;8144:4;8140:20;8136:1;8125:9;8121:17;8114:47;8178:131;8304:4;8178:131;:::i;:::-;8170:139;;7897:419;;;:::o;8322:164::-;8462:16;8458:1;8450:6;8446:14;8439:40;8322:164;:::o;8492:366::-;8634:3;8655:67;8719:2;8714:3;8655:67;:::i;:::-;8648:74;;8731:93;8820:3;8731:93;:::i;:::-;8849:2;8844:3;8840:12;8833:19;;8492:366;;;:::o;8864:419::-;9030:4;9068:2;9057:9;9053:18;9045:26;;9117:9;9111:4;9107:20;9103:1;9092:9;9088:17;9081:47;9145:131;9271:4;9145:131;:::i;:::-;9137:139;;8864:419;;;:::o;9289:168::-;9429:20;9425:1;9417:6;9413:14;9406:44;9289:168;:::o;9463:366::-;9605:3;9626:67;9690:2;9685:3;9626:67;:::i;:::-;9619:74;;9702:93;9791:3;9702:93;:::i;:::-;9820:2;9815:3;9811:12;9804:19;;9463:366;;;:::o;9835:419::-;10001:4;10039:2;10028:9;10024:18;10016:26;;10088:9;10082:4;10078:20;10074:1;10063:9;10059:17;10052:47;10116:131;10242:4;10116:131;:::i;:::-;10108:139;;9835:419;;;:::o;10260:166::-;10400:18;10396:1;10388:6;10384:14;10377:42;10260:166;:::o;10432:366::-;10574:3;10595:67;10659:2;10654:3;10595:67;:::i;:::-;10588:74;;10671:93;10760:3;10671:93;:::i;:::-;10789:2;10784:3;10780:12;10773:19;;10432:366;;;:::o;10804:419::-;10970:4;11008:2;10997:9;10993:18;10985:26;;11057:9;11051:4;11047:20;11043:1;11032:9;11028:17;11021:47;11085:131;11211:4;11085:131;:::i;:::-;11077:139;;10804:419;;;:::o;11229:164::-;11369:16;11365:1;11357:6;11353:14;11346:40;11229:164;:::o;11399:366::-;11541:3;11562:67;11626:2;11621:3;11562:67;:::i;:::-;11555:74;;11638:93;11727:3;11638:93;:::i;:::-;11756:2;11751:3;11747:12;11740:19;;11399:366;;;:::o;11771:419::-;11937:4;11975:2;11964:9;11960:18;11952:26;;12024:9;12018:4;12014:20;12010:1;11999:9;11995:17;11988:47;12052:131;12178:4;12052:131;:::i;:::-;12044:139;;11771:419;;;:::o;12196:161::-;12336:13;12332:1;12324:6;12320:14;12313:37;12196:161;:::o;12363:366::-;12505:3;12526:67;12590:2;12585:3;12526:67;:::i;:::-;12519:74;;12602:93;12691:3;12602:93;:::i;:::-;12720:2;12715:3;12711:12;12704:19;;12363:366;;;:::o;12735:419::-;12901:4;12939:2;12928:9;12924:18;12916:26;;12988:9;12982:4;12978:20;12974:1;12963:9;12959:17;12952:47;13016:131;13142:4;13016:131;:::i;:::-;13008:139;;12735:419;;;:::o;13160:180::-;13208:77;13205:1;13198:88;13305:4;13302:1;13295:15;13329:4;13326:1;13319:15;13346:89;13382:7;13422:6;13415:5;13411:18;13400:29;;13346:89;;;:::o;13441:180::-;13489:77;13486:1;13479:88;13586:4;13583:1;13576:15;13610:4;13607:1;13600:15;13627:193;13666:3;13685:19;13702:1;13685:19;:::i;:::-;13680:24;;13718:19;13735:1;13718:19;:::i;:::-;13713:24;;13760:1;13757;13753:9;13746:16;;13783:6;13778:3;13775:15;13772:41;;;13793:18;;:::i;:::-;13772:41;13627:193;;;;:::o;13826:196::-;13865:4;13885:19;13902:1;13885:19;:::i;:::-;13880:24;;13918:19;13935:1;13918:19;:::i;:::-;13913:24;;13961:1;13958;13954:9;13946:17;;13985:6;13979:4;13976:16;13973:42;;;13995:18;;:::i;:::-;13973:42;13826:196;;;;:::o;14028:163::-;14168:15;14164:1;14156:6;14152:14;14145:39;14028:163;:::o;14197:366::-;14339:3;14360:67;14424:2;14419:3;14360:67;:::i;:::-;14353:74;;14436:93;14525:3;14436:93;:::i;:::-;14554:2;14549:3;14545:12;14538:19;;14197:366;;;:::o;14569:419::-;14735:4;14773:2;14762:9;14758:18;14750:26;;14822:9;14816:4;14812:20;14808:1;14797:9;14793:17;14786:47;14850:131;14976:4;14850:131;:::i;:::-;14842:139;;14569:419;;;:::o;14994:169::-;15134:21;15130:1;15122:6;15118:14;15111:45;14994:169;:::o;15169:366::-;15311:3;15332:67;15396:2;15391:3;15332:67;:::i;:::-;15325:74;;15408:93;15497:3;15408:93;:::i;:::-;15526:2;15521:3;15517:12;15510:19;;15169:366;;;:::o;15541:419::-;15707:4;15745:2;15734:9;15730:18;15722:26;;15794:9;15788:4;15784:20;15780:1;15769:9;15765:17;15758:47;15822:131;15948:4;15822:131;:::i;:::-;15814:139;;15541:419;;;:::o;15966:174::-;16106:26;16102:1;16094:6;16090:14;16083:50;15966:174;:::o;16146:366::-;16288:3;16309:67;16373:2;16368:3;16309:67;:::i;:::-;16302:74;;16385:93;16474:3;16385:93;:::i;:::-;16503:2;16498:3;16494:12;16487:19;;16146:366;;;:::o;16518:419::-;16684:4;16722:2;16711:9;16707:18;16699:26;;16771:9;16765:4;16761:20;16757:1;16746:9;16742:17;16735:47;16799:131;16925:4;16799:131;:::i;:::-;16791:139;;16518:419;;;:::o;16943:225::-;17083:34;17079:1;17071:6;17067:14;17060:58;17152:8;17147:2;17139:6;17135:15;17128:33;16943:225;:::o;17174:366::-;17316:3;17337:67;17401:2;17396:3;17337:67;:::i;:::-;17330:74;;17413:93;17502:3;17413:93;:::i;:::-;17531:2;17526:3;17522:12;17515:19;;17174:366;;;:::o;17546:419::-;17712:4;17750:2;17739:9;17735:18;17727:26;;17799:9;17793:4;17789:20;17785:1;17774:9;17770:17;17763:47;17827:131;17953:4;17827:131;:::i;:::-;17819:139;;17546:419;;;:::o;17971:166::-;18111:18;18107:1;18099:6;18095:14;18088:42;17971:166;:::o;18143:366::-;18285:3;18306:67;18370:2;18365:3;18306:67;:::i;:::-;18299:74;;18382:93;18471:3;18382:93;:::i;:::-;18500:2;18495:3;18491:12;18484:19;;18143:366;;;:::o;18515:419::-;18681:4;18719:2;18708:9;18704:18;18696:26;;18768:9;18762:4;18758:20;18754:1;18743:9;18739:17;18732:47;18796:131;18922:4;18796:131;:::i;:::-;18788:139;;18515:419;;;:::o;18940:332::-;19061:4;19099:2;19088:9;19084:18;19076:26;;19112:71;19180:1;19169:9;19165:17;19156:6;19112:71;:::i;:::-;19193:72;19261:2;19250:9;19246:18;19237:6;19193:72;:::i;:::-;18940:332;;;;;:::o;19278:119::-;19365:1;19358:5;19355:12;19345:46;;19371:18;;:::i;:::-;19345:46;19278:119;:::o;19403:139::-;19454:7;19483:5;19472:16;;19489:47;19530:5;19489:47;:::i;:::-;19403:139;;;:::o;19548:::-;19610:9;19643:38;19675:5;19643:38;:::i;:::-;19630:51;;19548:139;;;:::o;19693:155::-;19792:49;19835:5;19792:49;:::i;:::-;19787:3;19780:62;19693:155;;:::o;19854:356::-;19987:4;20025:2;20014:9;20010:18;20002:26;;20038:71;20106:1;20095:9;20091:17;20082:6;20038:71;:::i;:::-;20119:84;20199:2;20188:9;20184:18;20175:6;20119:84;:::i;:::-;19854:356;;;;;:::o;20216:233::-;20255:3;20278:24;20296:5;20278:24;:::i;:::-;20269:33;;20324:66;20317:5;20314:77;20311:103;;20394:18;;:::i;:::-;20311:103;20441:1;20434:5;20430:13;20423:20;;20216:233;;;:::o;20455:194::-;20495:4;20515:20;20533:1;20515:20;:::i;:::-;20510:25;;20549:20;20567:1;20549:20;:::i;:::-;20544:25;;20593:1;20590;20586:9;20578:17;;20617:1;20611:4;20608:11;20605:37;;;20622:18;;:::i;:::-;20605:37;20455:194;;;;:::o;20655:191::-;20695:3;20714:20;20732:1;20714:20;:::i;:::-;20709:25;;20748:20;20766:1;20748:20;:::i;:::-;20743:25;;20791:1;20788;20784:9;20777:16;;20812:3;20809:1;20806:10;20803:36;;;20819:18;;:::i;:::-;20803:36;20655:191;;;;:::o;20852:181::-;20992:33;20988:1;20980:6;20976:14;20969:57;20852:181;:::o;21039:366::-;21181:3;21202:67;21266:2;21261:3;21202:67;:::i;:::-;21195:74;;21278:93;21367:3;21278:93;:::i;:::-;21396:2;21391:3;21387:12;21380:19;;21039:366;;;:::o;21411:419::-;21577:4;21615:2;21604:9;21600:18;21592:26;;21664:9;21658:4;21654:20;21650:1;21639:9;21635:17;21628:47;21692:131;21818:4;21692:131;:::i;:::-;21684:139;;21411:419;;;:::o;21836:182::-;21976:34;21972:1;21964:6;21960:14;21953:58;21836:182;:::o;22024:366::-;22166:3;22187:67;22251:2;22246:3;22187:67;:::i;:::-;22180:74;;22263:93;22352:3;22263:93;:::i;:::-;22381:2;22376:3;22372:12;22365:19;;22024:366;;;:::o;22396:419::-;22562:4;22600:2;22589:9;22585:18;22577:26;;22649:9;22643:4;22639:20;22635:1;22624:9;22620:17;22613:47;22677:131;22803:4;22677:131;:::i;:::-;22669:139;;22396:419;;;:::o;22821:170::-;22961:22;22957:1;22949:6;22945:14;22938:46;22821:170;:::o;22997:366::-;23139:3;23160:67;23224:2;23219:3;23160:67;:::i;:::-;23153:74;;23236:93;23325:3;23236:93;:::i;:::-;23354:2;23349:3;23345:12;23338:19;;22997:366;;;:::o;23369:419::-;23535:4;23573:2;23562:9;23558:18;23550:26;;23622:9;23616:4;23612:20;23608:1;23597:9;23593:17;23586:47;23650:131;23776:4;23650:131;:::i;:::-;23642:139;;23369:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1877600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_areHerosMinted()": "2516",
								"_commonNFTsMinted()": "2488",
								"_heroNFTsMinted()": "2490",
								"_is1stPublicRoundUnlocked()": "2611",
								"_is2ndPublicRoundUnlocked()": "2587",
								"_is3rdPublicRoundUnlocked()": "2611",
								"_legendNFTsMinted()": "2512",
								"_rareNFTsMinted()": "2533",
								"_uncommonNFTsMinted()": "2510",
								"addAuthorizedContract(address)": "27121",
								"getMintIndexRange(uint256,uint8)": "infinite",
								"mintCommon(address)": "infinite",
								"mintCommons(address,uint256)": "infinite",
								"mintHeros(address)": "infinite",
								"mintLegend(address)": "infinite",
								"mintLegends(address,uint256)": "infinite",
								"mintRare(address)": "infinite",
								"mintRares(address,uint256)": "infinite",
								"mintUncommon(address)": "infinite",
								"mintUncommons(address,uint256)": "infinite",
								"owner()": "2590",
								"pause()": "infinite",
								"paused()": "2597",
								"renounceOwnership()": "30465",
								"transferOwnership(address)": "30832",
								"unlock1stPublicRound()": "62715",
								"unlock2ndPublicRound()": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_mintNFTs(address,uint256,enum NFT_CLASS)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 486,
									"end": 11238,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2256,
									"end": 2624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2397,
									"end": 2417,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2379,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2365,
									"end": 2379,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2418,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2465,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2437,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2428,
									"end": 2437,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2510,
									"end": 2531,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2491,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2476,
									"end": 2491,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2532,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2578,
									"end": 2582,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2543,
									"end": 2563,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2564,
									"end": 2574,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2575,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2582,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2624,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 11238,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087297737bc07377cdea28d7b69ca2139cb1fb07248ae0a21c497658dc4e5741864736f6c63430008130033",
									".code": [
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "8D36F8F4"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "C8D4FC60"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "F17A6777"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "F17A6777"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "F2C5D797"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "F78F680A"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "C8D4FC60"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "D47E107E"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "D87B320B"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "98EAA4A7"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "98EAA4A7"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "9F158A78"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "A8372307"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "BAD688C6"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "8D36F8F4"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "953A6CA8"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "508F0628"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "6F785CDF"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "6F785CDF"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "7E7F57F2"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "508F0628"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "5EEE43F0"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "28D3BD1B"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "28D3BD1B"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "329CC83F"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "3A149127"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "87BD107"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "1592FB2A"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "20A0C034"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 486,
											"end": 11238,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1052,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1052,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1097,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1097,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 9876,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 9876,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 3631,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 4631,
											"end": 5019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 4631,
											"end": 5019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1144,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1144,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3042,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 10615,
											"end": 10743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 10615,
											"end": 10743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1428,
											"end": 1465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1428,
											"end": 1465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1238,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1238,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3323,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2977,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 10327,
											"end": 10447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 10327,
											"end": 10447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1342,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2631,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2631,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1189,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1189,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 10042,
											"end": 10166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 10042,
											"end": 10166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 10749,
											"end": 10901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 10749,
											"end": 10901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1309,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1309,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 10907,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 10907,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 5026,
											"end": 8354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 5026,
											"end": 8354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 5026,
											"end": 8354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 10453,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 10453,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1385,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1385,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 10173,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 10173,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 9984,
											"end": 9990,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10003,
											"end": 10019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9974,
											"end": 9983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 9974,
											"end": 10020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 9974,
											"end": 10020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 10020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 10027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 3631,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3749,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3718,
											"end": 3750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 3710,
											"end": 3762,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 3710,
											"end": 3762,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3781,
											"end": 3806,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3780,
											"end": 3806,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3772,
											"end": 3827,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 3772,
											"end": 3827,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3897,
											"end": 3912,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 3889,
											"end": 3933,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3889,
											"end": 3933,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3951,
											"end": 3976,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4052,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4052,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 3951,
											"end": 4052,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4052,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 881,
											"end": 882,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3980,
											"end": 4052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 3980,
											"end": 4052,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4014,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3987,
											"end": 4004,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3987,
											"end": 4012,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 3987,
											"end": 4014,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4014,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3987,
											"end": 4014,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3980,
											"end": 4052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 3980,
											"end": 4052,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3980,
											"end": 4052,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4052,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 3951,
											"end": 4052,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 3943,
											"end": 4073,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3943,
											"end": 4073,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4091,
											"end": 4116,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4188,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4188,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4188,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 4091,
											"end": 4188,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4188,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 933,
											"end": 934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4120,
											"end": 4188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4120,
											"end": 4188,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4152,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 4127,
											"end": 4142,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4127,
											"end": 4150,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 4127,
											"end": 4152,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4152,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 4127,
											"end": 4152,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4120,
											"end": 4188,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4188,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4188,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 4091,
											"end": 4188,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 4083,
											"end": 4207,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 4083,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4225,
											"end": 4250,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4330,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4330,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4330,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 4225,
											"end": 4330,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4330,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 989,
											"end": 991,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 4254,
											"end": 4330,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4254,
											"end": 4330,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4290,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 4261,
											"end": 4280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4261,
											"end": 4288,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 4261,
											"end": 4290,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4290,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 4261,
											"end": 4290,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4254,
											"end": 4330,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4254,
											"end": 4330,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4254,
											"end": 4330,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4330,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 4225,
											"end": 4330,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 4217,
											"end": 4353,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 4217,
											"end": 4353,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4371,
											"end": 4396,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4471,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4471,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4371,
											"end": 4471,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4471,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1044,
											"end": 1047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "7D"
										},
										{
											"begin": 4400,
											"end": 4471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4400,
											"end": 4471,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4407,
											"end": 4434,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4407,
											"end": 4424,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 4407,
											"end": 4432,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 4407,
											"end": 4434,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4407,
											"end": 4434,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4407,
											"end": 4434,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4400,
											"end": 4471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4400,
											"end": 4471,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4400,
											"end": 4471,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4471,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4371,
											"end": 4471,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 4363,
											"end": 4492,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 4363,
											"end": 4492,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4531,
											"end": 4535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4503,
											"end": 4528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4503,
											"end": 4528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4535,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4573,
											"end": 4578,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4545,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 4605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4752,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4721,
											"end": 4753,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 4713,
											"end": 4765,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 4713,
											"end": 4765,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4784,
											"end": 4799,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4799,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 4775,
											"end": 4818,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4775,
											"end": 4818,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4829,
											"end": 4846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 4859,
											"end": 4865,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 826,
											"end": 828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 4849,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4849,
											"end": 4916,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4901,
											"end": 4915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4858,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 4849,
											"end": 4916,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4849,
											"end": 4916,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 4849,
											"end": 4916,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4829,
											"end": 4916,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4829,
											"end": 4916,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 826,
											"end": 828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 4930,
											"end": 4975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4930,
											"end": 4975,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4939,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4975,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4927,
											"end": 5011,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 4927,
											"end": 5011,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5007,
											"end": 5011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4989,
											"end": 5004,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4989,
											"end": 5004,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5011,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4927,
											"end": 5011,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 4927,
											"end": 5011,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4703,
											"end": 5019,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 5019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 3088,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 3088,
											"end": 3098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3088,
											"end": 3098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 3088,
											"end": 3098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10696,
											"end": 10736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 10706,
											"end": 10712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10717,
											"end": 10735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 10696,
											"end": 10705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10696,
											"end": 10736,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10696,
											"end": 10736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 10696,
											"end": 10736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10696,
											"end": 10736,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3323,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3430,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3441,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3410,
											"end": 3442,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 3402,
											"end": 3454,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3402,
											"end": 3454,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3498,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3498,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3464,
											"end": 3519,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3464,
											"end": 3519,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3538,
											"end": 3553,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 3530,
											"end": 3574,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3530,
											"end": 3574,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3585,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 3585,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3617,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2977,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3021,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3021,
											"end": 3029,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3021,
											"end": 3029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3021,
											"end": 3029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 10414,
											"end": 10420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10422,
											"end": 10423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10425,
											"end": 10439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10404,
											"end": 10413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10404,
											"end": 10440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10404,
											"end": 10440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 10404,
											"end": 10440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10404,
											"end": 10440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 10131,
											"end": 10137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10139,
											"end": 10140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10142,
											"end": 10158,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10121,
											"end": 10130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10121,
											"end": 10159,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10121,
											"end": 10159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 10121,
											"end": 10159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10121,
											"end": 10159,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 10858,
											"end": 10864,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10866,
											"end": 10875,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10877,
											"end": 10893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10848,
											"end": 10857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10848,
											"end": 10894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10848,
											"end": 10894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 10848,
											"end": 10894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10848,
											"end": 10894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 10996,
											"end": 11002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11004,
											"end": 11005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11007,
											"end": 11023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10986,
											"end": 10995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10986,
											"end": 11024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10986,
											"end": 11024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 10986,
											"end": 11024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10986,
											"end": 11024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5130,
											"end": 5152,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5174,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5203,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5207,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5186,
											"end": 5223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5241,
											"end": 5256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 5233,
											"end": 5277,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5233,
											"end": 5277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5407,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5417,
											"end": 5443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 5505,
											"end": 5536,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5516,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 5505,
											"end": 5536,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5505,
											"end": 5536,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5536,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5502,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5578,
											"end": 5605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 5578,
											"end": 5595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5578,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5578,
											"end": 5605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5578,
											"end": 5605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 5578,
											"end": 5605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5556,
											"end": 5606,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5556,
											"end": 5606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5669,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5650,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 5638,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 5638,
											"end": 5670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 5638,
											"end": 5670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5624,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5624,
											"end": 5670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 881,
											"end": 882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5689,
											"end": 5744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 5689,
											"end": 5744,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5744,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5762,
											"end": 5817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 5762,
											"end": 5817,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5817,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5835,
											"end": 5890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 5835,
											"end": 5890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5835,
											"end": 5890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5835,
											"end": 5890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5964,
											"end": 5976,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 5926,
											"end": 5976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5926,
											"end": 5976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 5926,
											"end": 5976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5926,
											"end": 5976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5909,
											"end": 5976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 5909,
											"end": 5976,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5909,
											"end": 5976,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 5909,
											"end": 5976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6061,
											"end": 6062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6047,
											"end": 6058,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 6009,
											"end": 6058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 6009,
											"end": 6058,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 6009,
											"end": 6058,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 6009,
											"end": 6058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 6009,
											"end": 6062,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6009,
											"end": 6062,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 6009,
											"end": 6062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5994,
											"end": 6062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 5994,
											"end": 6062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5994,
											"end": 6062,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5994,
											"end": 6062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 5502,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5502,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 6090,
											"end": 6119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6101,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 6090,
											"end": 6119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6090,
											"end": 6119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6119,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6087,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6161,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6161,
											"end": 6176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 6161,
											"end": 6184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 6161,
											"end": 6186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6161,
											"end": 6186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6161,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6241,
											"end": 6250,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6219,
											"end": 6231,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6219,
											"end": 6251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 6219,
											"end": 6251,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6219,
											"end": 6251,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6219,
											"end": 6251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 6219,
											"end": 6251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6219,
											"end": 6251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 6219,
											"end": 6251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6251,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6251,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 933,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6270,
											"end": 6323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 6270,
											"end": 6323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6270,
											"end": 6323,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6270,
											"end": 6323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 6341,
											"end": 6394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 6341,
											"end": 6394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6394,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6394,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1550,
											"end": 1553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 6412,
											"end": 6465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 6412,
											"end": 6465,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6412,
											"end": 6465,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6412,
											"end": 6465,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6537,
											"end": 6549,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2262,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7E"
										},
										{
											"begin": 6501,
											"end": 6549,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 6501,
											"end": 6549,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6501,
											"end": 6549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6501,
											"end": 6549,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 6501,
											"end": 6549,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6501,
											"end": 6549,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 6501,
											"end": 6549,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 6484,
											"end": 6549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6549,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6549,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6632,
											"end": 6633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6618,
											"end": 6629,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2262,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7E"
										},
										{
											"begin": 6582,
											"end": 6629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 6582,
											"end": 6629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 6582,
											"end": 6629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 6582,
											"end": 6629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 6582,
											"end": 6633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6582,
											"end": 6633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 6582,
											"end": 6633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 6567,
											"end": 6633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6633,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 6087,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6087,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6676,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 6661,
											"end": 6694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6672,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 6661,
											"end": 6694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 6661,
											"end": 6694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6694,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6658,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 6658,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 6736,
											"end": 6755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6736,
											"end": 6763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 6736,
											"end": 6765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 6736,
											"end": 6765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6714,
											"end": 6766,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6714,
											"end": 6766,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6820,
											"end": 6829,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6810,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 6798,
											"end": 6830,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 6798,
											"end": 6830,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6830,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 6798,
											"end": 6830,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6784,
											"end": 6830,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6784,
											"end": 6830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 989,
											"end": 991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 6849,
											"end": 6906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 6849,
											"end": 6906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6849,
											"end": 6906,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6849,
											"end": 6906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FA"
										},
										{
											"begin": 6924,
											"end": 6981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 6924,
											"end": 6981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6924,
											"end": 6981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6924,
											"end": 6981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1608,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7D0"
										},
										{
											"begin": 6999,
											"end": 7056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 6999,
											"end": 7056,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6999,
											"end": 7056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6999,
											"end": 7056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7132,
											"end": 7144,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2321,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 7092,
											"end": 7144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7092,
											"end": 7144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 7092,
											"end": 7144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 7092,
											"end": 7144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7075,
											"end": 7144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 7075,
											"end": 7144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7075,
											"end": 7144,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 7075,
											"end": 7144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7217,
											"end": 7228,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2321,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 7177,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 7177,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 7177,
											"end": 7228,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 7177,
											"end": 7228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 7177,
											"end": 7232,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 7177,
											"end": 7232,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 7177,
											"end": 7232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7162,
											"end": 7232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 7162,
											"end": 7232,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7162,
											"end": 7232,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7162,
											"end": 7232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6658,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6658,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6658,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 6658,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7275,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7260,
											"end": 7291,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 7260,
											"end": 7291,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7271,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 7260,
											"end": 7291,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 7260,
											"end": 7291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 7257,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7333,
											"end": 7360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 7333,
											"end": 7350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 7333,
											"end": 7358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 7333,
											"end": 7360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7333,
											"end": 7360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 7333,
											"end": 7360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7311,
											"end": 7361,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7311,
											"end": 7361,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7424,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7393,
											"end": 7405,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7393,
											"end": 7425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 7393,
											"end": 7425,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7393,
											"end": 7425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7393,
											"end": 7425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 7393,
											"end": 7425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7393,
											"end": 7425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 7393,
											"end": 7425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7379,
											"end": 7425,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7379,
											"end": 7425,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1044,
											"end": 1047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7D"
										},
										{
											"begin": 7444,
											"end": 7499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 7444,
											"end": 7499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7499,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7499,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1353,
											"end": 1357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4E2"
										},
										{
											"begin": 7517,
											"end": 7572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 7517,
											"end": 7572,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7572,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1665,
											"end": 1669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "168A"
										},
										{
											"begin": 7590,
											"end": 7645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 7590,
											"end": 7645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7719,
											"end": 7731,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "C38"
										},
										{
											"begin": 7681,
											"end": 7731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 7681,
											"end": 7731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7681,
											"end": 7731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7681,
											"end": 7731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 7681,
											"end": 7731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7681,
											"end": 7731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 7681,
											"end": 7731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 7664,
											"end": 7731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7731,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7731,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7816,
											"end": 7817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7802,
											"end": 7813,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "C38"
										},
										{
											"begin": 7764,
											"end": 7813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 7764,
											"end": 7813,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 7764,
											"end": 7813,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 7764,
											"end": 7813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 7764,
											"end": 7817,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7817,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 7764,
											"end": 7817,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7817,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 7764,
											"end": 7817,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7749,
											"end": 7817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 7749,
											"end": 7817,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7749,
											"end": 7817,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7749,
											"end": 7817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 7257,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 7257,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 7860,
											"end": 7883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7883,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 7257,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6658,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6658,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 6087,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 7883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 5502,
											"end": 7883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7935,
											"end": 7960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7998,
											"end": 8016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7983,
											"end": 7994,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7983,
											"end": 8016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 7983,
											"end": 8016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7983,
											"end": 8016,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7983,
											"end": 8016,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 7975,
											"end": 8040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 7975,
											"end": 8040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8058,
											"end": 8083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8121,
											"end": 8139,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8106,
											"end": 8117,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8106,
											"end": 8139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 8106,
											"end": 8139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8106,
											"end": 8139,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8106,
											"end": 8139,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 8098,
											"end": 8163,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 8098,
											"end": 8163,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8181,
											"end": 8206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8243,
											"end": 8261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8239,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 8228,
											"end": 8261,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8261,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 8220,
											"end": 8285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 8220,
											"end": 8285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8346,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 8178,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8055,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 7932,
											"end": 8346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 8354,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 8354,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 8354,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 8354,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 8354,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 8354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10554,
											"end": 10602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 10564,
											"end": 10570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10572,
											"end": 10581,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 10554,
											"end": 10563,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10554,
											"end": 10602,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10554,
											"end": 10602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 10554,
											"end": 10602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10554,
											"end": 10602,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10453,
											"end": 10609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10270,
											"end": 10314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 10280,
											"end": 10286,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10288,
											"end": 10297,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10299,
											"end": 10313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10270,
											"end": 10279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10270,
											"end": 10314,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 10270,
											"end": 10314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10314,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 9869,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 8361,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8470,
											"end": 8487,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8507,
											"end": 8522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 8499,
											"end": 8543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 8499,
											"end": 8543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8751,
											"end": 8773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8795,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8830,
											"end": 8839,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8841,
											"end": 8852,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 8812,
											"end": 8853,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8853,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8812,
											"end": 8853,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8750,
											"end": 8853,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8750,
											"end": 8853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8750,
											"end": 8853,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8750,
											"end": 8853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8894,
											"end": 8908,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8908,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8942,
											"end": 8962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8965,
											"end": 8979,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8942,
											"end": 8979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8942,
											"end": 8979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8997,
											"end": 9009,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8981,
											"end": 8993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8981,
											"end": 9009,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9054,
											"end": 9068,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9054,
											"end": 9077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A1448194"
										},
										{
											"begin": 9078,
											"end": 9084,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9086,
											"end": 9098,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 9054,
											"end": 9099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "BE1E1145"
										},
										{
											"begin": 9139,
											"end": 9145,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9158,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 9113,
											"end": 9159,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9159,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9159,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9159,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9195,
											"end": 9207,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9174,
											"end": 9207,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9174,
											"end": 9207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9268,
											"end": 9299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9279,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9268,
											"end": 9299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9268,
											"end": 9299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9299,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9265,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9265,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9317,
											"end": 9334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 9317,
											"end": 9344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9317,
											"end": 9346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9317,
											"end": 9346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9265,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9265,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9265,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9265,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9368,
											"end": 9397,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9379,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9368,
											"end": 9397,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 9368,
											"end": 9397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9397,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9365,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 9365,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9415,
											"end": 9442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 9415,
											"end": 9430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 9415,
											"end": 9440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9415,
											"end": 9442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9415,
											"end": 9442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 9415,
											"end": 9442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9365,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 9365,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9365,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 9365,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9464,
											"end": 9497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9475,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9464,
											"end": 9497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 9464,
											"end": 9497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9497,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9461,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 9461,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9515,
											"end": 9546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 9515,
											"end": 9534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 9515,
											"end": 9544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9515,
											"end": 9546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9515,
											"end": 9546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 9515,
											"end": 9546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9461,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 9461,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9461,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 9461,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9583,
											"end": 9599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9568,
											"end": 9599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9568,
											"end": 9599,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9579,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 9568,
											"end": 9599,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 9568,
											"end": 9599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9599,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 9565,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 9617,
											"end": 9644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9617,
											"end": 9646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9565,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 9565,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 9665,
											"end": 9688,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9688,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9565,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9461,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 9461,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9365,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 9365,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9265,
											"end": 9688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9265,
											"end": 9688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9011,
											"end": 9025,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9861,
											"end": 9862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9844,
											"end": 9858,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 9823,
											"end": 9858,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 9823,
											"end": 9858,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 9823,
											"end": 9858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 9823,
											"end": 9862,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 9823,
											"end": 9862,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 9823,
											"end": 9862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9862,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9862,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8488,
											"end": 9869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8488,
											"end": 9869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8488,
											"end": 9869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8361,
											"end": 9869,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8361,
											"end": 9869,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8361,
											"end": 9869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8361,
											"end": 9869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8361,
											"end": 9869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8361,
											"end": 9869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2427,
											"end": 2448,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2364,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 2556,
											"end": 2561,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 2541,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "tag",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2529,
											"end": 2563,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2460,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2662,
											"end": 2666,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 2713,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2575,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 2878,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2873,
											"end": 2876,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2866,
											"end": 2903,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2791,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3048,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3125,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3112,
											"end": 3129,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 3059,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3143,
											"end": 3256,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 3143,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 3210,
											"end": 3250,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3246,
											"end": 3247,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3250,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 3210,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3143,
											"end": 3256,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3143,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3429,
											"name": "tag",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 3262,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3366,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3367,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3376,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 3417,
											"end": 3422,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3376,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 3376,
											"end": 3423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3376,
											"end": 3423,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 3376,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3429,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3429,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3429,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3429,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3262,
											"end": 3429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3435,
											"end": 3937,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 3435,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3517,
											"end": 3523,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3574,
											"end": 3576,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3562,
											"end": 3571,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3560,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3549,
											"end": 3572,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3545,
											"end": 3577,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3542,
											"end": 3661,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3542,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 3542,
											"end": 3661,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3580,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 3580,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 3580,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3580,
											"end": 3659,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 3580,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3542,
											"end": 3661,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 3542,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 3770,
											"end": 3777,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3761,
											"end": 3767,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3746,
											"end": 3768,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 3725,
											"end": 3778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "tag",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3715,
											"end": 3778,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3715,
											"end": 3778,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3671,
											"end": 3788,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3853,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 3912,
											"end": 3919,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3892,
											"end": 3901,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3888,
											"end": 3910,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3853,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 3853,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3853,
											"end": 3920,
											"name": "tag",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 3853,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3843,
											"end": 3920,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3843,
											"end": 3920,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3798,
											"end": 3930,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3435,
											"end": 3937,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3435,
											"end": 3937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3435,
											"end": 3937,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3435,
											"end": 3937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3435,
											"end": 3937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3435,
											"end": 3937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 4275,
											"name": "tag",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 3943,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4064,
											"end": 4068,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4104,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4079,
											"end": 4105,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4079,
											"end": 4105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4115,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 4183,
											"end": 4184,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4181,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4168,
											"end": 4185,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4159,
											"end": 4165,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4115,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4115,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4115,
											"end": 4186,
											"name": "tag",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 4115,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4196,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 4264,
											"end": 4266,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4262,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4240,
											"end": 4246,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4196,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4196,
											"end": 4268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4196,
											"end": 4268,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 4196,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 4275,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 4275,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 4275,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 4275,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 4275,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 4275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4281,
											"end": 4450,
											"name": "tag",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 4281,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4376,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4405,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4394,
											"end": 4397,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4437,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4415,
											"end": 4444,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4415,
											"end": 4444,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4281,
											"end": 4450,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4281,
											"end": 4450,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4281,
											"end": 4450,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4281,
											"end": 4450,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4281,
											"end": 4450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4456,
											"end": 4613,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 4456,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4596,
											"end": 4605,
											"name": "PUSH",
											"source": 17,
											"value": "4E6F204175746800000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4592,
											"end": 4593,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4590,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4580,
											"end": 4594,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4573,
											"end": 4606,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4456,
											"end": 4613,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4456,
											"end": 4613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4619,
											"end": 4984,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 4619,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4761,
											"end": 4764,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 4846,
											"end": 4847,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 4841,
											"end": 4844,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4782,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 4782,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4782,
											"end": 4848,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 4782,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4775,
											"end": 4848,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4775,
											"end": 4848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 4946,
											"end": 4949,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 4857,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4950,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 4857,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4975,
											"end": 4977,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 4973,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4966,
											"end": 4978,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 4978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 4978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4619,
											"end": 4984,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4619,
											"end": 4984,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4619,
											"end": 4984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4619,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4990,
											"end": 5409,
											"name": "tag",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 4990,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5156,
											"end": 5160,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5196,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5183,
											"end": 5192,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5171,
											"end": 5197,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5171,
											"end": 5197,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5243,
											"end": 5252,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5237,
											"end": 5241,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5233,
											"end": 5253,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5229,
											"end": 5230,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5214,
											"end": 5231,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5207,
											"end": 5254,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5271,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 5397,
											"end": 5401,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5271,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 5271,
											"end": 5402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5271,
											"end": 5402,
											"name": "tag",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 5271,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5263,
											"end": 5402,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5263,
											"end": 5402,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4990,
											"end": 5409,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4990,
											"end": 5409,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4990,
											"end": 5409,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4990,
											"end": 5409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5415,
											"end": 5581,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 5415,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "PUSH",
											"source": 17,
											"value": "416C726561647920756E6C6F636B656400000000000000000000000000000000"
										},
										{
											"begin": 5551,
											"end": 5552,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5549,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5539,
											"end": 5553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5532,
											"end": 5574,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5415,
											"end": 5581,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5415,
											"end": 5581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5953,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 5587,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5732,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 5814,
											"end": 5816,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 5750,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 5817,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 5750,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5817,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5743,
											"end": 5817,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5826,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5826,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 5826,
											"end": 5919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5826,
											"end": 5919,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 5826,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5939,
											"end": 5942,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5935,
											"end": 5947,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5928,
											"end": 5947,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5928,
											"end": 5947,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5953,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5953,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5953,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5959,
											"end": 6378,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 5959,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6125,
											"end": 6129,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6165,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6161,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6148,
											"end": 6166,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6140,
											"end": 6166,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6140,
											"end": 6166,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6212,
											"end": 6221,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6206,
											"end": 6210,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6202,
											"end": 6222,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6187,
											"end": 6196,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6183,
											"end": 6200,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6176,
											"end": 6223,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 6366,
											"end": 6370,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 6240,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6232,
											"end": 6371,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6232,
											"end": 6371,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5959,
											"end": 6378,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5959,
											"end": 6378,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5959,
											"end": 6378,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5959,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6384,
											"end": 6550,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 6384,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6524,
											"end": 6542,
											"name": "PUSH",
											"source": 17,
											"value": "4865726F73206E6F74206D696E74656400000000000000000000000000000000"
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6518,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6508,
											"end": 6522,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6501,
											"end": 6543,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6384,
											"end": 6550,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6384,
											"end": 6550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6922,
											"name": "tag",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 6556,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6698,
											"end": 6701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 6778,
											"end": 6781,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6719,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 6719,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6719,
											"end": 6786,
											"name": "tag",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 6719,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6712,
											"end": 6786,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6712,
											"end": 6786,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6795,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 6884,
											"end": 6887,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6795,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 6795,
											"end": 6888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6795,
											"end": 6888,
											"name": "tag",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 6795,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6908,
											"end": 6911,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6904,
											"end": 6916,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6897,
											"end": 6916,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6897,
											"end": 6916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6922,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6922,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6922,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6928,
											"end": 7347,
											"name": "tag",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 6928,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7094,
											"end": 7098,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7132,
											"end": 7134,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7130,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7109,
											"end": 7135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7109,
											"end": 7135,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7175,
											"end": 7179,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7171,
											"end": 7191,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7168,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7165,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7152,
											"end": 7169,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7145,
											"end": 7192,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 7209,
											"end": 7340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7340,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 7209,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7201,
											"end": 7340,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7201,
											"end": 7340,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6928,
											"end": 7347,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6928,
											"end": 7347,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6928,
											"end": 7347,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6928,
											"end": 7347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7353,
											"end": 7519,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 7353,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7493,
											"end": 7511,
											"name": "PUSH",
											"source": 17,
											"value": "556E6D696E746564206C6567656E647300000000000000000000000000000000"
										},
										{
											"begin": 7489,
											"end": 7490,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7481,
											"end": 7487,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7477,
											"end": 7491,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7470,
											"end": 7512,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7353,
											"end": 7519,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7353,
											"end": 7519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7891,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 7525,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7688,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 7752,
											"end": 7754,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 7688,
											"end": 7755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7688,
											"end": 7755,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 7688,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7681,
											"end": 7755,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7681,
											"end": 7755,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7764,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 7853,
											"end": 7856,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7764,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 7764,
											"end": 7857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7764,
											"end": 7857,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 7764,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7882,
											"end": 7884,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7877,
											"end": 7880,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7873,
											"end": 7885,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7866,
											"end": 7885,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7866,
											"end": 7885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7891,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7891,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7891,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 8316,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 7897,
											"end": 8316,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8090,
											"end": 8099,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8078,
											"end": 8104,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8078,
											"end": 8104,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8150,
											"end": 8159,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8144,
											"end": 8148,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8140,
											"end": 8160,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8114,
											"end": 8161,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8178,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 8304,
											"end": 8308,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8178,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 8178,
											"end": 8309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8178,
											"end": 8309,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 8178,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8170,
											"end": 8309,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8170,
											"end": 8309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 8316,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 8316,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 8316,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 8316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8322,
											"end": 8486,
											"name": "tag",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 8322,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8462,
											"end": 8478,
											"name": "PUSH",
											"source": 17,
											"value": "556E6D696E746564207261726573000000000000000000000000000000000000"
										},
										{
											"begin": 8458,
											"end": 8459,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8446,
											"end": 8460,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8439,
											"end": 8479,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8322,
											"end": 8486,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8322,
											"end": 8486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8492,
											"end": 8858,
											"name": "tag",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 8492,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8634,
											"end": 8637,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 8719,
											"end": 8721,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 8714,
											"end": 8717,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8655,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 8655,
											"end": 8722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8655,
											"end": 8722,
											"name": "tag",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 8655,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8722,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8722,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 8820,
											"end": 8823,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 8731,
											"end": 8824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 8824,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 8731,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8849,
											"end": 8851,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8844,
											"end": 8847,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8840,
											"end": 8852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8833,
											"end": 8852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8833,
											"end": 8852,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8492,
											"end": 8858,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8492,
											"end": 8858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8492,
											"end": 8858,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8492,
											"end": 8858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8864,
											"end": 9283,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 8864,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9030,
											"end": 9034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9117,
											"end": 9126,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9111,
											"end": 9115,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9107,
											"end": 9127,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9103,
											"end": 9104,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9101,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9088,
											"end": 9105,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9081,
											"end": 9128,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9145,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 9271,
											"end": 9275,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9145,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 9145,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9145,
											"end": 9276,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 9145,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9137,
											"end": 9276,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9137,
											"end": 9276,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8864,
											"end": 9283,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8864,
											"end": 9283,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8864,
											"end": 9283,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8864,
											"end": 9283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9289,
											"end": 9457,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 9289,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9429,
											"end": 9449,
											"name": "PUSH",
											"source": 17,
											"value": "556E6D696E74656420756E636F6D6D6F6E730000000000000000000000000000"
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9417,
											"end": 9423,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9413,
											"end": 9427,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9406,
											"end": 9450,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9289,
											"end": 9457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9289,
											"end": 9457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9463,
											"end": 9829,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 9463,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9605,
											"end": 9608,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 9690,
											"end": 9692,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 9685,
											"end": 9688,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9626,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 9626,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9626,
											"end": 9693,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 9626,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9619,
											"end": 9693,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9619,
											"end": 9693,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9702,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 9791,
											"end": 9794,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9702,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 9702,
											"end": 9795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9702,
											"end": 9795,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 9702,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9820,
											"end": 9822,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9815,
											"end": 9818,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9811,
											"end": 9823,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9804,
											"end": 9823,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9804,
											"end": 9823,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9463,
											"end": 9829,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9463,
											"end": 9829,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9463,
											"end": 9829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9463,
											"end": 9829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9835,
											"end": 10254,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 9835,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10001,
											"end": 10005,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10041,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10024,
											"end": 10042,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10016,
											"end": 10042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10016,
											"end": 10042,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10088,
											"end": 10097,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10082,
											"end": 10086,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10078,
											"end": 10098,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10074,
											"end": 10075,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10072,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10059,
											"end": 10076,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10099,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10116,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 10242,
											"end": 10246,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10116,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 10116,
											"end": 10247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10116,
											"end": 10247,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 10116,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10108,
											"end": 10247,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10108,
											"end": 10247,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9835,
											"end": 10254,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9835,
											"end": 10254,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9835,
											"end": 10254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9835,
											"end": 10254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10260,
											"end": 10426,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 10260,
											"end": 10426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10400,
											"end": 10418,
											"name": "PUSH",
											"source": 17,
											"value": "556E6D696E74656420636F6D6D6F6E7300000000000000000000000000000000"
										},
										{
											"begin": 10396,
											"end": 10397,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10394,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10384,
											"end": 10398,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10377,
											"end": 10419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10260,
											"end": 10426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10260,
											"end": 10426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10432,
											"end": 10798,
											"name": "tag",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 10432,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10574,
											"end": 10577,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 10659,
											"end": 10661,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 10654,
											"end": 10657,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10595,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 10595,
											"end": 10662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10595,
											"end": 10662,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 10595,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10588,
											"end": 10662,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10588,
											"end": 10662,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10671,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 10760,
											"end": 10763,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10671,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 10671,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10671,
											"end": 10764,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 10671,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10789,
											"end": 10791,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10780,
											"end": 10792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10773,
											"end": 10792,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10773,
											"end": 10792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10432,
											"end": 10798,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10432,
											"end": 10798,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10432,
											"end": 10798,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10432,
											"end": 10798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10804,
											"end": 11223,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 10804,
											"end": 11223,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10970,
											"end": 10974,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11008,
											"end": 11010,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10997,
											"end": 11006,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10993,
											"end": 11011,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10985,
											"end": 11011,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10985,
											"end": 11011,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11057,
											"end": 11066,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11051,
											"end": 11055,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11047,
											"end": 11067,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11043,
											"end": 11044,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 11041,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11028,
											"end": 11045,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11021,
											"end": 11068,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11085,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 11211,
											"end": 11215,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11085,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 11085,
											"end": 11216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11085,
											"end": 11216,
											"name": "tag",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 11085,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11077,
											"end": 11216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11077,
											"end": 11216,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10804,
											"end": 11223,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10804,
											"end": 11223,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10804,
											"end": 11223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10804,
											"end": 11223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11229,
											"end": 11393,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 11229,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11369,
											"end": 11385,
											"name": "PUSH",
											"source": 17,
											"value": "416C7265616479206D696E746564000000000000000000000000000000000000"
										},
										{
											"begin": 11365,
											"end": 11366,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11363,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11353,
											"end": 11367,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11346,
											"end": 11386,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11229,
											"end": 11393,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11229,
											"end": 11393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11399,
											"end": 11765,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 11399,
											"end": 11765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11541,
											"end": 11544,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11562,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 11626,
											"end": 11628,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 11621,
											"end": 11624,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11562,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 11562,
											"end": 11629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11562,
											"end": 11629,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 11562,
											"end": 11629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11555,
											"end": 11629,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11555,
											"end": 11629,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11638,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 11727,
											"end": 11730,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11638,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 11638,
											"end": 11731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11638,
											"end": 11731,
											"name": "tag",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 11638,
											"end": 11731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11756,
											"end": 11758,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11751,
											"end": 11754,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11747,
											"end": 11759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11740,
											"end": 11759,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11740,
											"end": 11759,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11399,
											"end": 11765,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11399,
											"end": 11765,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11399,
											"end": 11765,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11399,
											"end": 11765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11771,
											"end": 12190,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 11771,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11937,
											"end": 11941,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11975,
											"end": 11977,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 11973,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11952,
											"end": 11978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11952,
											"end": 11978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12024,
											"end": 12033,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12018,
											"end": 12022,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12014,
											"end": 12034,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12010,
											"end": 12011,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11999,
											"end": 12008,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11995,
											"end": 12012,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11988,
											"end": 12035,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 12052,
											"end": 12183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12183,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 12052,
											"end": 12183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12044,
											"end": 12183,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12044,
											"end": 12183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11771,
											"end": 12190,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11771,
											"end": 12190,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11771,
											"end": 12190,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11771,
											"end": 12190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12196,
											"end": 12357,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 12196,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12336,
											"end": 12349,
											"name": "PUSH",
											"source": 17,
											"value": "6E756D546F4D696E742030000000000000000000000000000000000000000000"
										},
										{
											"begin": 12332,
											"end": 12333,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12324,
											"end": 12330,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12320,
											"end": 12334,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12313,
											"end": 12350,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12196,
											"end": 12357,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12196,
											"end": 12357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12363,
											"end": 12729,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 12363,
											"end": 12729,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12505,
											"end": 12508,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12526,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 12590,
											"end": 12592,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 12585,
											"end": 12588,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12526,
											"end": 12593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 12526,
											"end": 12593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12526,
											"end": 12593,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 12526,
											"end": 12593,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12519,
											"end": 12593,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12519,
											"end": 12593,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12602,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 12691,
											"end": 12694,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12602,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 12602,
											"end": 12695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12602,
											"end": 12695,
											"name": "tag",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 12602,
											"end": 12695,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12720,
											"end": 12722,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12715,
											"end": 12718,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12711,
											"end": 12723,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12363,
											"end": 12729,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12363,
											"end": 12729,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12363,
											"end": 12729,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12363,
											"end": 12729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12735,
											"end": 13154,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 12735,
											"end": 13154,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12901,
											"end": 12905,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12939,
											"end": 12941,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12928,
											"end": 12937,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12924,
											"end": 12942,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12916,
											"end": 12942,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12916,
											"end": 12942,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12988,
											"end": 12997,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12982,
											"end": 12986,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12978,
											"end": 12998,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12974,
											"end": 12975,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12972,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12959,
											"end": 12976,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12952,
											"end": 12999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13016,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 13142,
											"end": 13146,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13016,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 13016,
											"end": 13147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13016,
											"end": 13147,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 13016,
											"end": 13147,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13147,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12735,
											"end": 13154,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12735,
											"end": 13154,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12735,
											"end": 13154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12735,
											"end": 13154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13160,
											"end": 13340,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 13160,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13208,
											"end": 13285,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13205,
											"end": 13206,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13198,
											"end": 13286,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13305,
											"end": 13309,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 13302,
											"end": 13303,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 13295,
											"end": 13310,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13329,
											"end": 13333,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13326,
											"end": 13327,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13319,
											"end": 13334,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13346,
											"end": 13435,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 13346,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13382,
											"end": 13389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13422,
											"end": 13428,
											"name": "PUSH",
											"source": 17,
											"value": "FFFF"
										},
										{
											"begin": 13415,
											"end": 13420,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13411,
											"end": 13429,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13400,
											"end": 13429,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13400,
											"end": 13429,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13346,
											"end": 13435,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13346,
											"end": 13435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13346,
											"end": 13435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13346,
											"end": 13435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13441,
											"end": 13621,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 13441,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13489,
											"end": 13566,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13486,
											"end": 13487,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13479,
											"end": 13567,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13586,
											"end": 13590,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 13583,
											"end": 13584,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 13576,
											"end": 13591,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13610,
											"end": 13614,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13607,
											"end": 13608,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13627,
											"end": 13820,
											"name": "tag",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 13627,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13666,
											"end": 13669,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 13702,
											"end": 13703,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 13685,
											"end": 13704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13680,
											"end": 13704,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13680,
											"end": 13704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13718,
											"end": 13737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13718,
											"end": 13737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 13718,
											"end": 13737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13718,
											"end": 13737,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 13718,
											"end": 13737,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13713,
											"end": 13737,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13713,
											"end": 13737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13753,
											"end": 13762,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13746,
											"end": 13762,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13746,
											"end": 13762,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13783,
											"end": 13789,
											"name": "PUSH",
											"source": 17,
											"value": "FFFF"
										},
										{
											"begin": 13778,
											"end": 13781,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13775,
											"end": 13790,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 13793,
											"end": 13811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 13772,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13627,
											"end": 13820,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13627,
											"end": 13820,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13627,
											"end": 13820,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13627,
											"end": 13820,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13627,
											"end": 13820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13826,
											"end": 14022,
											"name": "tag",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 13826,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13865,
											"end": 13869,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 13902,
											"end": 13903,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13885,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 13885,
											"end": 13904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13885,
											"end": 13904,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 13885,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13880,
											"end": 13904,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13880,
											"end": 13904,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13918,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 13935,
											"end": 13936,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13918,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 13918,
											"end": 13937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13918,
											"end": 13937,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 13918,
											"end": 13937,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13913,
											"end": 13937,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13913,
											"end": 13937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13961,
											"end": 13962,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13954,
											"end": 13963,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13946,
											"end": 13963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13946,
											"end": 13963,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13985,
											"end": 13991,
											"name": "PUSH",
											"source": 17,
											"value": "FFFF"
										},
										{
											"begin": 13979,
											"end": 13983,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13976,
											"end": 13992,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13973,
											"end": 14015,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13973,
											"end": 14015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 13973,
											"end": 14015,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 13995,
											"end": 14013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13973,
											"end": 14015,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 13973,
											"end": 14015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13826,
											"end": 14022,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13826,
											"end": 14022,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13826,
											"end": 14022,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13826,
											"end": 14022,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13826,
											"end": 14022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14028,
											"end": 14191,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 14028,
											"end": 14191,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14168,
											"end": 14183,
											"name": "PUSH",
											"source": 17,
											"value": "496E76616C696420636C61737300000000000000000000000000000000000000"
										},
										{
											"begin": 14164,
											"end": 14165,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14156,
											"end": 14162,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14152,
											"end": 14166,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14145,
											"end": 14184,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14028,
											"end": 14191,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14028,
											"end": 14191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14197,
											"end": 14563,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 14197,
											"end": 14563,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14339,
											"end": 14342,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 14424,
											"end": 14426,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 14419,
											"end": 14422,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14360,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 14360,
											"end": 14427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14360,
											"end": 14427,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 14360,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14353,
											"end": 14427,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14353,
											"end": 14427,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14436,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 14525,
											"end": 14528,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14436,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 14436,
											"end": 14529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14436,
											"end": 14529,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 14436,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14554,
											"end": 14556,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14552,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14545,
											"end": 14557,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14538,
											"end": 14557,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14538,
											"end": 14557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14197,
											"end": 14563,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14197,
											"end": 14563,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14197,
											"end": 14563,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14197,
											"end": 14563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14569,
											"end": 14988,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 14569,
											"end": 14988,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14735,
											"end": 14739,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14773,
											"end": 14775,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14762,
											"end": 14771,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14758,
											"end": 14776,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14750,
											"end": 14776,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14750,
											"end": 14776,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14822,
											"end": 14831,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14816,
											"end": 14820,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14808,
											"end": 14809,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14797,
											"end": 14806,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14793,
											"end": 14810,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14786,
											"end": 14833,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14850,
											"end": 14981,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 14976,
											"end": 14980,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14850,
											"end": 14981,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 14850,
											"end": 14981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14850,
											"end": 14981,
											"name": "tag",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 14850,
											"end": 14981,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14842,
											"end": 14981,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14842,
											"end": 14981,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14569,
											"end": 14988,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14569,
											"end": 14988,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14569,
											"end": 14988,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14569,
											"end": 14988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14994,
											"end": 15163,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 14994,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15134,
											"end": 15155,
											"name": "PUSH",
											"source": 17,
											"value": "737570706C7920696E73756666696369656E7400000000000000000000000000"
										},
										{
											"begin": 15130,
											"end": 15131,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15122,
											"end": 15128,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15118,
											"end": 15132,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15111,
											"end": 15156,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14994,
											"end": 15163,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14994,
											"end": 15163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15169,
											"end": 15535,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 15169,
											"end": 15535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15311,
											"end": 15314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15332,
											"end": 15399,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 15396,
											"end": 15398,
											"name": "PUSH",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 15391,
											"end": 15394,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15332,
											"end": 15399,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 15332,
											"end": 15399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15332,
											"end": 15399,
											"name": "tag",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 15332,
											"end": 15399,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15325,
											"end": 15399,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15325,
											"end": 15399,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15408,
											"end": 15501,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15408,
											"end": 15501,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 15408,
											"end": 15501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15408,
											"end": 15501,
											"name": "tag",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 15408,
											"end": 15501,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15526,
											"end": 15528,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15521,
											"end": 15524,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15517,
											"end": 15529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15510,
											"end": 15529,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15510,
											"end": 15529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15169,
											"end": 15535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15169,
											"end": 15535,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15169,
											"end": 15535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15169,
											"end": 15535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15541,
											"end": 15960,
											"name": "tag",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 15541,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15707,
											"end": 15711,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15745,
											"end": 15747,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15734,
											"end": 15743,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15730,
											"end": 15748,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15722,
											"end": 15748,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15722,
											"end": 15748,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15794,
											"end": 15803,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15788,
											"end": 15792,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15784,
											"end": 15804,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15780,
											"end": 15781,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15769,
											"end": 15778,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15765,
											"end": 15782,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15758,
											"end": 15805,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15822,
											"end": 15953,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 15948,
											"end": 15952,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15822,
											"end": 15953,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 15822,
											"end": 15953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15822,
											"end": 15953,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 15822,
											"end": 15953,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15814,
											"end": 15953,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15814,
											"end": 15953,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15541,
											"end": 15960,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15541,
											"end": 15960,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15541,
											"end": 15960,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15541,
											"end": 15960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15966,
											"end": 16140,
											"name": "tag",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 15966,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16106,
											"end": 16132,
											"name": "PUSH",
											"source": 17,
											"value": "6E6F207075626C696320726F756E6420756E6C6F636B65640000000000000000"
										},
										{
											"begin": 16102,
											"end": 16103,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16094,
											"end": 16100,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16090,
											"end": 16104,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16083,
											"end": 16133,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15966,
											"end": 16140,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15966,
											"end": 16140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16146,
											"end": 16512,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 16146,
											"end": 16512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16288,
											"end": 16291,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16309,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 16373,
											"end": 16375,
											"name": "PUSH",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 16368,
											"end": 16371,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16309,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 16309,
											"end": 16376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16309,
											"end": 16376,
											"name": "tag",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 16309,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16302,
											"end": 16376,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16302,
											"end": 16376,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16385,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 16474,
											"end": 16477,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16385,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 16385,
											"end": 16478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16385,
											"end": 16478,
											"name": "tag",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 16385,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16503,
											"end": 16505,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16498,
											"end": 16501,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16494,
											"end": 16506,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16487,
											"end": 16506,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16487,
											"end": 16506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16146,
											"end": 16512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16146,
											"end": 16512,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16146,
											"end": 16512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16146,
											"end": 16512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16518,
											"end": 16937,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 16518,
											"end": 16937,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16684,
											"end": 16688,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16722,
											"end": 16724,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16711,
											"end": 16720,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16707,
											"end": 16725,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16699,
											"end": 16725,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16699,
											"end": 16725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16771,
											"end": 16780,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16765,
											"end": 16769,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16761,
											"end": 16781,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16757,
											"end": 16758,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16746,
											"end": 16755,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16742,
											"end": 16759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16735,
											"end": 16782,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16799,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 16925,
											"end": 16929,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16799,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 16799,
											"end": 16930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16799,
											"end": 16930,
											"name": "tag",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 16799,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16791,
											"end": 16930,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16791,
											"end": 16930,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16518,
											"end": 16937,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16518,
											"end": 16937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16518,
											"end": 16937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16518,
											"end": 16937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16943,
											"end": 17168,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 16943,
											"end": 17168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17083,
											"end": 17117,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17079,
											"end": 17080,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17071,
											"end": 17077,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17067,
											"end": 17081,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17060,
											"end": 17118,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17152,
											"end": 17160,
											"name": "PUSH",
											"source": 17,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17147,
											"end": 17149,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17139,
											"end": 17145,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17135,
											"end": 17150,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17128,
											"end": 17161,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16943,
											"end": 17168,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16943,
											"end": 17168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17174,
											"end": 17540,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 17174,
											"end": 17540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17316,
											"end": 17319,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17337,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 17401,
											"end": 17403,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 17396,
											"end": 17399,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17337,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 17337,
											"end": 17404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17337,
											"end": 17404,
											"name": "tag",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 17337,
											"end": 17404,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17330,
											"end": 17404,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17330,
											"end": 17404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17413,
											"end": 17506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 17502,
											"end": 17505,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17413,
											"end": 17506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 17413,
											"end": 17506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17413,
											"end": 17506,
											"name": "tag",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 17413,
											"end": 17506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17531,
											"end": 17533,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17526,
											"end": 17529,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17522,
											"end": 17534,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17515,
											"end": 17534,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17515,
											"end": 17534,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17174,
											"end": 17540,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17174,
											"end": 17540,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17174,
											"end": 17540,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17174,
											"end": 17540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17546,
											"end": 17965,
											"name": "tag",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 17546,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17712,
											"end": 17716,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17750,
											"end": 17752,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17739,
											"end": 17748,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17735,
											"end": 17753,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17727,
											"end": 17753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17727,
											"end": 17753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17799,
											"end": 17808,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17793,
											"end": 17797,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17789,
											"end": 17809,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17785,
											"end": 17786,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17774,
											"end": 17783,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17770,
											"end": 17787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17763,
											"end": 17810,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17827,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 17953,
											"end": 17957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17827,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 17827,
											"end": 17958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17827,
											"end": 17958,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 17827,
											"end": 17958,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17819,
											"end": 17958,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17819,
											"end": 17958,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17546,
											"end": 17965,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17546,
											"end": 17965,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17546,
											"end": 17965,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17546,
											"end": 17965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17971,
											"end": 18137,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 17971,
											"end": 18137,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18111,
											"end": 18129,
											"name": "PUSH",
											"source": 17,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 18107,
											"end": 18108,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18099,
											"end": 18105,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18095,
											"end": 18109,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18088,
											"end": 18130,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17971,
											"end": 18137,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17971,
											"end": 18137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18143,
											"end": 18509,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 18143,
											"end": 18509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18285,
											"end": 18288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18306,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "636"
										},
										{
											"begin": 18370,
											"end": 18372,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 18365,
											"end": 18368,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18306,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 18306,
											"end": 18373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18306,
											"end": 18373,
											"name": "tag",
											"source": 17,
											"value": "636"
										},
										{
											"begin": 18306,
											"end": 18373,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18299,
											"end": 18373,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18299,
											"end": 18373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18382,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 18471,
											"end": 18474,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18382,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 18382,
											"end": 18475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18382,
											"end": 18475,
											"name": "tag",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 18382,
											"end": 18475,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18500,
											"end": 18502,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18495,
											"end": 18498,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18491,
											"end": 18503,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18484,
											"end": 18503,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18484,
											"end": 18503,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18143,
											"end": 18509,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18143,
											"end": 18509,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18143,
											"end": 18509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18143,
											"end": 18509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18515,
											"end": 18934,
											"name": "tag",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 18515,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18681,
											"end": 18685,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18719,
											"end": 18721,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18708,
											"end": 18717,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18704,
											"end": 18722,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18696,
											"end": 18722,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18696,
											"end": 18722,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18768,
											"end": 18777,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18762,
											"end": 18766,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18758,
											"end": 18778,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18754,
											"end": 18755,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18743,
											"end": 18752,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18739,
											"end": 18756,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18732,
											"end": 18779,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18796,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 18922,
											"end": 18926,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18796,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 18796,
											"end": 18927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18796,
											"end": 18927,
											"name": "tag",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 18796,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18788,
											"end": 18927,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18788,
											"end": 18927,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18515,
											"end": 18934,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18515,
											"end": 18934,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18515,
											"end": 18934,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18515,
											"end": 18934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18940,
											"end": 19272,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 18940,
											"end": 19272,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19061,
											"end": 19065,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19099,
											"end": 19101,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 19088,
											"end": 19097,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19084,
											"end": 19102,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19076,
											"end": 19102,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19076,
											"end": 19102,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19112,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 19180,
											"end": 19181,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19169,
											"end": 19178,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19156,
											"end": 19162,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19112,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 19112,
											"end": 19183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19112,
											"end": 19183,
											"name": "tag",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 19112,
											"end": 19183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19193,
											"end": 19265,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 19261,
											"end": 19263,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19250,
											"end": 19259,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19246,
											"end": 19264,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19237,
											"end": 19243,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19193,
											"end": 19265,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 19193,
											"end": 19265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19193,
											"end": 19265,
											"name": "tag",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 19193,
											"end": 19265,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18940,
											"end": 19272,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 18940,
											"end": 19272,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18940,
											"end": 19272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18940,
											"end": 19272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18940,
											"end": 19272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18940,
											"end": 19272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19278,
											"end": 19397,
											"name": "tag",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 19278,
											"end": 19397,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19365,
											"end": 19366,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 19358,
											"end": 19363,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19355,
											"end": 19367,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 19345,
											"end": 19391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 19345,
											"end": 19391,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19371,
											"end": 19389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 19371,
											"end": 19389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 19371,
											"end": 19389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19371,
											"end": 19389,
											"name": "tag",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 19371,
											"end": 19389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19345,
											"end": 19391,
											"name": "tag",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 19345,
											"end": 19391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19278,
											"end": 19397,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19278,
											"end": 19397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19542,
											"name": "tag",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 19403,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19454,
											"end": 19461,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19483,
											"end": 19488,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19472,
											"end": 19488,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19472,
											"end": 19488,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19489,
											"end": 19536,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 19530,
											"end": 19535,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19489,
											"end": 19536,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 19489,
											"end": 19536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19489,
											"end": 19536,
											"name": "tag",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 19489,
											"end": 19536,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19542,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19542,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19548,
											"end": 19687,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 19548,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19610,
											"end": 19619,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19643,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 19675,
											"end": 19680,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19643,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 19643,
											"end": 19681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19643,
											"end": 19681,
											"name": "tag",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 19643,
											"end": 19681,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19630,
											"end": 19681,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19630,
											"end": 19681,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19548,
											"end": 19687,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19548,
											"end": 19687,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19548,
											"end": 19687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19548,
											"end": 19687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19693,
											"end": 19848,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 19693,
											"end": 19848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19792,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 19835,
											"end": 19840,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19792,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 19792,
											"end": 19841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19792,
											"end": 19841,
											"name": "tag",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 19792,
											"end": 19841,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19787,
											"end": 19790,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19780,
											"end": 19842,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19693,
											"end": 19848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19693,
											"end": 19848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19693,
											"end": 19848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 20210,
											"name": "tag",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 19854,
											"end": 20210,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19987,
											"end": 19991,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20025,
											"end": 20027,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 20014,
											"end": 20023,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20010,
											"end": 20028,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20002,
											"end": 20028,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20002,
											"end": 20028,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20038,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 20106,
											"end": 20107,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20095,
											"end": 20104,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20091,
											"end": 20108,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20082,
											"end": 20088,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 20038,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 20038,
											"end": 20109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20038,
											"end": 20109,
											"name": "tag",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 20038,
											"end": 20109,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20119,
											"end": 20203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "654"
										},
										{
											"begin": 20199,
											"end": 20201,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20188,
											"end": 20197,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20184,
											"end": 20202,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20175,
											"end": 20181,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20119,
											"end": 20203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 20119,
											"end": 20203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20119,
											"end": 20203,
											"name": "tag",
											"source": 17,
											"value": "654"
										},
										{
											"begin": 20119,
											"end": 20203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 20210,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 20210,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 20210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 20210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 20210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19854,
											"end": 20210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20216,
											"end": 20449,
											"name": "tag",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 20216,
											"end": 20449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20255,
											"end": 20258,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20278,
											"end": 20302,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "656"
										},
										{
											"begin": 20296,
											"end": 20301,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20278,
											"end": 20302,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 20278,
											"end": 20302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20278,
											"end": 20302,
											"name": "tag",
											"source": 17,
											"value": "656"
										},
										{
											"begin": 20278,
											"end": 20302,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20269,
											"end": 20302,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20269,
											"end": 20302,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20324,
											"end": 20390,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20317,
											"end": 20322,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20314,
											"end": 20391,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20311,
											"end": 20414,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 20311,
											"end": 20414,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20394,
											"end": 20412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 20394,
											"end": 20412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 20394,
											"end": 20412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20394,
											"end": 20412,
											"name": "tag",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 20394,
											"end": 20412,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20311,
											"end": 20414,
											"name": "tag",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 20311,
											"end": 20414,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20441,
											"end": 20442,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 20434,
											"end": 20439,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20430,
											"end": 20443,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20423,
											"end": 20443,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20423,
											"end": 20443,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20216,
											"end": 20449,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20216,
											"end": 20449,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20216,
											"end": 20449,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20216,
											"end": 20449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20455,
											"end": 20649,
											"name": "tag",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 20455,
											"end": 20649,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20495,
											"end": 20499,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20515,
											"end": 20535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "660"
										},
										{
											"begin": 20533,
											"end": 20534,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20515,
											"end": 20535,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 20515,
											"end": 20535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20515,
											"end": 20535,
											"name": "tag",
											"source": 17,
											"value": "660"
										},
										{
											"begin": 20515,
											"end": 20535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20510,
											"end": 20535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20510,
											"end": 20535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20549,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 20567,
											"end": 20568,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20549,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 20549,
											"end": 20569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20549,
											"end": 20569,
											"name": "tag",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 20549,
											"end": 20569,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20544,
											"end": 20569,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20544,
											"end": 20569,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20593,
											"end": 20594,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20590,
											"end": 20591,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20586,
											"end": 20595,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20578,
											"end": 20595,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20578,
											"end": 20595,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20617,
											"end": 20618,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20611,
											"end": 20615,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20608,
											"end": 20619,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 20605,
											"end": 20642,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20605,
											"end": 20642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 20605,
											"end": 20642,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20622,
											"end": 20640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 20622,
											"end": 20640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 20622,
											"end": 20640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20622,
											"end": 20640,
											"name": "tag",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 20622,
											"end": 20640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20605,
											"end": 20642,
											"name": "tag",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 20605,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20455,
											"end": 20649,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20455,
											"end": 20649,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20455,
											"end": 20649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20455,
											"end": 20649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20455,
											"end": 20649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20655,
											"end": 20846,
											"name": "tag",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 20655,
											"end": 20846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20695,
											"end": 20698,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20714,
											"end": 20734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 20732,
											"end": 20733,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20714,
											"end": 20734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 20714,
											"end": 20734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20714,
											"end": 20734,
											"name": "tag",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 20714,
											"end": 20734,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20709,
											"end": 20734,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20709,
											"end": 20734,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20748,
											"end": 20768,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 20766,
											"end": 20767,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20748,
											"end": 20768,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 20748,
											"end": 20768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20748,
											"end": 20768,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 20748,
											"end": 20768,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20743,
											"end": 20768,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20743,
											"end": 20768,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20791,
											"end": 20792,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20788,
											"end": 20789,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20784,
											"end": 20793,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20777,
											"end": 20793,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20777,
											"end": 20793,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20812,
											"end": 20815,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 20809,
											"end": 20810,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20806,
											"end": 20816,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 20803,
											"end": 20839,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20803,
											"end": 20839,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "667"
										},
										{
											"begin": 20803,
											"end": 20839,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20819,
											"end": 20837,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 20819,
											"end": 20837,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 20819,
											"end": 20837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20819,
											"end": 20837,
											"name": "tag",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 20819,
											"end": 20837,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20803,
											"end": 20839,
											"name": "tag",
											"source": 17,
											"value": "667"
										},
										{
											"begin": 20803,
											"end": 20839,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20655,
											"end": 20846,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20655,
											"end": 20846,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20655,
											"end": 20846,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20655,
											"end": 20846,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20655,
											"end": 20846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20852,
											"end": 21033,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 20852,
											"end": 21033,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20992,
											"end": 21025,
											"name": "PUSH",
											"source": 17,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20988,
											"end": 20989,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20980,
											"end": 20986,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20976,
											"end": 20990,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20969,
											"end": 21026,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20852,
											"end": 21033,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20852,
											"end": 21033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21039,
											"end": 21405,
											"name": "tag",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 21039,
											"end": 21405,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21181,
											"end": 21184,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21202,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 21266,
											"end": 21268,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 21261,
											"end": 21264,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21202,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 21202,
											"end": 21269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21202,
											"end": 21269,
											"name": "tag",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 21202,
											"end": 21269,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21195,
											"end": 21269,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21195,
											"end": 21269,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21278,
											"end": 21371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 21367,
											"end": 21370,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21278,
											"end": 21371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 21278,
											"end": 21371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21278,
											"end": 21371,
											"name": "tag",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 21278,
											"end": 21371,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21396,
											"end": 21398,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21391,
											"end": 21394,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21387,
											"end": 21399,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21380,
											"end": 21399,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21380,
											"end": 21399,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21039,
											"end": 21405,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21039,
											"end": 21405,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21039,
											"end": 21405,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21039,
											"end": 21405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21411,
											"end": 21830,
											"name": "tag",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 21411,
											"end": 21830,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21577,
											"end": 21581,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21615,
											"end": 21617,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21604,
											"end": 21613,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21600,
											"end": 21618,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21592,
											"end": 21618,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21592,
											"end": 21618,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21664,
											"end": 21673,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21658,
											"end": 21662,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21654,
											"end": 21674,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21650,
											"end": 21651,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21639,
											"end": 21648,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21635,
											"end": 21652,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21628,
											"end": 21675,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21692,
											"end": 21823,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 21818,
											"end": 21822,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21692,
											"end": 21823,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 21692,
											"end": 21823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21692,
											"end": 21823,
											"name": "tag",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 21692,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21684,
											"end": 21823,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21684,
											"end": 21823,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21411,
											"end": 21830,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21411,
											"end": 21830,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21411,
											"end": 21830,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21411,
											"end": 21830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21836,
											"end": 22018,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 21836,
											"end": 22018,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21976,
											"end": 22010,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 21972,
											"end": 21973,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21964,
											"end": 21970,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21960,
											"end": 21974,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21953,
											"end": 22011,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21836,
											"end": 22018,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21836,
											"end": 22018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22024,
											"end": 22390,
											"name": "tag",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 22024,
											"end": 22390,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22166,
											"end": 22169,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22187,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 22251,
											"end": 22253,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22246,
											"end": 22249,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22187,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 22187,
											"end": 22254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22187,
											"end": 22254,
											"name": "tag",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 22187,
											"end": 22254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22180,
											"end": 22254,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22180,
											"end": 22254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22263,
											"end": 22356,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 22352,
											"end": 22355,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22263,
											"end": 22356,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 22263,
											"end": 22356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22263,
											"end": 22356,
											"name": "tag",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 22263,
											"end": 22356,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22381,
											"end": 22383,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22376,
											"end": 22379,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22372,
											"end": 22384,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22365,
											"end": 22384,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22365,
											"end": 22384,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22024,
											"end": 22390,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22024,
											"end": 22390,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22024,
											"end": 22390,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22024,
											"end": 22390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22396,
											"end": 22815,
											"name": "tag",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 22396,
											"end": 22815,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22562,
											"end": 22566,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22600,
											"end": 22602,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22589,
											"end": 22598,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22585,
											"end": 22603,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22577,
											"end": 22603,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22577,
											"end": 22603,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22649,
											"end": 22658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22643,
											"end": 22647,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22639,
											"end": 22659,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22635,
											"end": 22636,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22624,
											"end": 22633,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22620,
											"end": 22637,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22613,
											"end": 22660,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22677,
											"end": 22808,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 22803,
											"end": 22807,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22677,
											"end": 22808,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 22677,
											"end": 22808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22677,
											"end": 22808,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 22677,
											"end": 22808,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22669,
											"end": 22808,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22669,
											"end": 22808,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22396,
											"end": 22815,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22396,
											"end": 22815,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22396,
											"end": 22815,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22396,
											"end": 22815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22821,
											"end": 22991,
											"name": "tag",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 22821,
											"end": 22991,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22961,
											"end": 22983,
											"name": "PUSH",
											"source": 17,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 22957,
											"end": 22958,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22945,
											"end": 22959,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22938,
											"end": 22984,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22821,
											"end": 22991,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22821,
											"end": 22991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22997,
											"end": 23363,
											"name": "tag",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 22997,
											"end": 23363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23139,
											"end": 23142,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23160,
											"end": 23227,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 23224,
											"end": 23226,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 23219,
											"end": 23222,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23160,
											"end": 23227,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 23160,
											"end": 23227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23160,
											"end": 23227,
											"name": "tag",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 23160,
											"end": 23227,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23153,
											"end": 23227,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23153,
											"end": 23227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23236,
											"end": 23329,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 23325,
											"end": 23328,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23236,
											"end": 23329,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 23236,
											"end": 23329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23236,
											"end": 23329,
											"name": "tag",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 23236,
											"end": 23329,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23354,
											"end": 23356,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23349,
											"end": 23352,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23345,
											"end": 23357,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23338,
											"end": 23357,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23338,
											"end": 23357,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22997,
											"end": 23363,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22997,
											"end": 23363,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22997,
											"end": 23363,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22997,
											"end": 23363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23369,
											"end": 23788,
											"name": "tag",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 23369,
											"end": 23788,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23535,
											"end": 23539,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23573,
											"end": 23575,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23562,
											"end": 23571,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23558,
											"end": 23576,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23550,
											"end": 23576,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23550,
											"end": 23576,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23622,
											"end": 23631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23616,
											"end": 23620,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23612,
											"end": 23632,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 23608,
											"end": 23609,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23597,
											"end": 23606,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23586,
											"end": 23633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 23781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 23776,
											"end": 23780,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 23781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 23650,
											"end": 23781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23650,
											"end": 23781,
											"name": "tag",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 23650,
											"end": 23781,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23642,
											"end": 23781,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23642,
											"end": 23781,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23369,
											"end": 23788,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23369,
											"end": 23788,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23369,
											"end": 23788,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23369,
											"end": 23788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"DoAConstants.sol",
								"TokenMinter.sol",
								"iDoACollection.sol",
								"iMemberRegistry.sol",
								"iTokenMinter.sol",
								"iTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_areHerosMinted()": "c8d4fc60",
							"_commonNFTsMinted()": "6f785cdf",
							"_heroNFTsMinted()": "087bd107",
							"_is1stPublicRoundUnlocked()": "953a6ca8",
							"_is2ndPublicRoundUnlocked()": "f2c5d797",
							"_is3rdPublicRoundUnlocked()": "5eee43f0",
							"_legendNFTsMinted()": "1592fb2a",
							"_rareNFTsMinted()": "3a149127",
							"_uncommonNFTsMinted()": "9f158a78",
							"addAuthorizedContract(address)": "98eaa4a7",
							"getMintIndexRange(uint256,uint8)": "d87b320b",
							"mintCommon(address)": "d47e107e",
							"mintCommons(address,uint256)": "bad688c6",
							"mintHeros(address)": "329cc83f",
							"mintLegend(address)": "a8372307",
							"mintLegends(address,uint256)": "20a0c034",
							"mintRare(address)": "8d36f8f4",
							"mintRares(address,uint256)": "f78f680a",
							"mintUncommon(address)": "508f0628",
							"mintUncommons(address,uint256)": "f17a6777",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unlock1stPublicRound()": "7e7f57f2",
							"unlock2ndPublicRound()": "28d3bd1b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doaCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"memberRegistryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_areHerosMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_commonNFTsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_heroNFTsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_is1stPublicRoundUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_is2ndPublicRoundUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_is3rdPublicRoundUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_legendNFTsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rareNFTsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_uncommonNFTsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"addAuthorizedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"},{\"internalType\":\"enum NFT_CLASS\",\"name\":\"classToMint\",\"type\":\"uint8\"}],\"name\":\"getMintIndexRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintStartIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintEndIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"}],\"name\":\"mintCommon\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"}],\"name\":\"mintCommons\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"}],\"name\":\"mintHeros\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"}],\"name\":\"mintLegend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"}],\"name\":\"mintLegends\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"}],\"name\":\"mintRare\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"}],\"name\":\"mintRares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"}],\"name\":\"mintUncommon\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"}],\"name\":\"mintUncommons\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock1stPublicRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock2ndPublicRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenMinter.sol\":\"TokenMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"DoAConstants.sol\":{\"keccak256\":\"0x55ef434cacc5cd41d8486e375d92253c3913cdb336e50e55edcd3de5830ff473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0342dc7329e66b28652792f33a5d20303f17eec9f15748ff06d80a76627d513a\",\"dweb:/ipfs/QmNTJfJi3qicRCRx1h43spbvfmkqpfJdprTiC3X8rwtNDn\"]},\"TokenMinter.sol\":{\"keccak256\":\"0x9cae96d33494991a6bb98d24c52f0d47f9ec039d313e00547c8fdd21f62380de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc8238969c4eb0d2dd025d7e2b150d2ae9d956c819b06a48bcc0f892bcf454e\",\"dweb:/ipfs/QmQovMEuUtNPgfGXjz3D3Ff8rrwV5TE6hgW8dBw5JqMDte\"]},\"iDoACollection.sol\":{\"keccak256\":\"0xfb5fea06814f4f2550efb2fd6b5f78575e79b9f5d8f28ff9f3ad5090b49824f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e345c6b35866312172d9873b21f92d560af8976ddd3f7e9060cc86d321fe8b\",\"dweb:/ipfs/QmWo71uhEfTpgPhXg8YgkM7EmnJmu7rHFcrfmtSbNGtztz\"]},\"iMemberRegistry.sol\":{\"keccak256\":\"0xf049d82683f23951fdb7d7b31e8ec2231aa5d1f1bab0a08c37d53e7034e12e1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2445f4c6159c669d2f0ecc7dec7c761a5c2094b31672440ce0323e5a9c2ea6e8\",\"dweb:/ipfs/Qmf7LEe4MPjFxxsJ2i7UVGfGQTenNV6p3BmWHQd3wDyV1X\"]},\"iTokenMinter.sol\":{\"keccak256\":\"0x6f8c242a249badc3211070dd7896686588f63ba245b046ad7de28212f3b20a88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743dd950277faab3bc53b6c9cda9eae46f3aa66b57e1c149c6731f2279028d0a\",\"dweb:/ipfs/QmdxxUQ4ENQgSJ8jBdwyoxafYyZHTVQs2kb53FH191pEoW\"]},\"iTreasury.sol\":{\"keccak256\":\"0x7fd4f3060b070c6694fd2956f0a09d0746b52e585711d14e38ec0b721afa2f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280149071ead0a0bb9ef085787952c7a704116096d8e448da78d6c057085d1bd\",\"dweb:/ipfs/QmVKVemyoxpNkJWxG8SocMKEUw3JS4mj6Qk8uYrbWKGihD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 231,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1958,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_doaCollection",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(iDoACollection)2921"
							},
							{
								"astId": 1961,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_treasury",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(iTreasury)3031"
							},
							{
								"astId": 1964,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_memberRegistry",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(iMemberRegistry)2958"
							},
							{
								"astId": 1968,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_authorizedContracts",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1971,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_heroNFTsMinted",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(Counter)476_storage"
							},
							{
								"astId": 1974,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_legendNFTsMinted",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)476_storage"
							},
							{
								"astId": 1977,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_rareNFTsMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)476_storage"
							},
							{
								"astId": 1980,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_uncommonNFTsMinted",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(Counter)476_storage"
							},
							{
								"astId": 1983,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_commonNFTsMinted",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(Counter)476_storage"
							},
							{
								"astId": 1985,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_areHerosMinted",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1987,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_is1stPublicRoundUnlocked",
								"offset": 1,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1989,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_is2ndPublicRoundUnlocked",
								"offset": 2,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1991,
								"contract": "TokenMinter.sol:TokenMinter",
								"label": "_is3rdPublicRoundUnlocked",
								"offset": 3,
								"slot": "11",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(iDoACollection)2921": {
								"encoding": "inplace",
								"label": "contract iDoACollection",
								"numberOfBytes": "20"
							},
							"t_contract(iMemberRegistry)2958": {
								"encoding": "inplace",
								"label": "contract iMemberRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(iTreasury)3031": {
								"encoding": "inplace",
								"label": "contract iTreasury",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Counter)476_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 475,
										"contract": "TokenMinter.sol:TokenMinter",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"iDoACollection.sol": {
				"iDoACollection": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "batchBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokensToMint",
									"type": "uint256"
								}
							],
							"name": "safeBatchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchBurn(uint256[])": "dc8e92ea",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeBatchMint(address,uint256)": "f9f49952",
							"safeMint(address)": "40d097c3",
							"safeMint(address,uint256)": "a1448194",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokensToMint\",\"type\":\"uint256\"}],\"name\":\"safeBatchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"iDoACollection.sol\":\"iDoACollection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"iDoACollection.sol\":{\"keccak256\":\"0xfb5fea06814f4f2550efb2fd6b5f78575e79b9f5d8f28ff9f3ad5090b49824f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e345c6b35866312172d9873b21f92d560af8976ddd3f7e9060cc86d321fe8b\",\"dweb:/ipfs/QmWo71uhEfTpgPhXg8YgkM7EmnJmu7rHFcrfmtSbNGtztz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"iMemberRegistry.sol": {
				"iMemberRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "getMemberClass",
							"outputs": [
								{
									"internalType": "enum NFT_CLASS",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								},
								{
									"internalType": "enum NFT_CLASS",
									"name": "nftClasse",
									"type": "uint8"
								}
							],
							"name": "nftBurned",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								},
								{
									"internalType": "enum NFT_CLASS",
									"name": "nftClasse",
									"type": "uint8"
								}
							],
							"name": "nftMinted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oldMember",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "toNewMember",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "nftTransferred",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMemberClass(address)": "e0fe939f",
							"nftBurned(address,uint8)": "8f8ff71c",
							"nftMinted(address,uint8)": "be1e1145",
							"nftTransferred(address,address,uint256)": "741ca6bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"getMemberClass\",\"outputs\":[{\"internalType\":\"enum NFT_CLASS\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"internalType\":\"enum NFT_CLASS\",\"name\":\"nftClasse\",\"type\":\"uint8\"}],\"name\":\"nftBurned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"internalType\":\"enum NFT_CLASS\",\"name\":\"nftClasse\",\"type\":\"uint8\"}],\"name\":\"nftMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toNewMember\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"nftTransferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"iMemberRegistry.sol\":\"iMemberRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DoAConstants.sol\":{\"keccak256\":\"0x55ef434cacc5cd41d8486e375d92253c3913cdb336e50e55edcd3de5830ff473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0342dc7329e66b28652792f33a5d20303f17eec9f15748ff06d80a76627d513a\",\"dweb:/ipfs/QmNTJfJi3qicRCRx1h43spbvfmkqpfJdprTiC3X8rwtNDn\"]},\"iMemberRegistry.sol\":{\"keccak256\":\"0xf049d82683f23951fdb7d7b31e8ec2231aa5d1f1bab0a08c37d53e7034e12e1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2445f4c6159c669d2f0ecc7dec7c761a5c2094b31672440ce0323e5a9c2ea6e8\",\"dweb:/ipfs/Qmf7LEe4MPjFxxsJ2i7UVGfGQTenNV6p3BmWHQd3wDyV1X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"iTokenMinter.sol": {
				"iTokenMinter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mintCommon",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								}
							],
							"name": "mintCommons",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mintHeros",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mintLegend",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								}
							],
							"name": "mintLegends",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mintRare",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								}
							],
							"name": "mintRares",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mintUncommon",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "numToMint",
									"type": "uint256"
								}
							],
							"name": "mintUncommons",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mintCommon(address)": "d47e107e",
							"mintCommons(address,uint256)": "bad688c6",
							"mintHeros(address)": "329cc83f",
							"mintLegend(address)": "a8372307",
							"mintLegends(address,uint256)": "20a0c034",
							"mintRare(address)": "8d36f8f4",
							"mintRares(address,uint256)": "f78f680a",
							"mintUncommon(address)": "508f0628",
							"mintUncommons(address,uint256)": "f17a6777"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintCommon\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"}],\"name\":\"mintCommons\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintHeros\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintLegend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"}],\"name\":\"mintLegends\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintRare\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"}],\"name\":\"mintRares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintUncommon\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numToMint\",\"type\":\"uint256\"}],\"name\":\"mintUncommons\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"iTokenMinter.sol\":\"iTokenMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"iTokenMinter.sol\":{\"keccak256\":\"0x6f8c242a249badc3211070dd7896686588f63ba245b046ad7de28212f3b20a88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743dd950277faab3bc53b6c9cda9eae46f3aa66b57e1c149c6731f2279028d0a\",\"dweb:/ipfs/QmdxxUQ4ENQgSJ8jBdwyoxafYyZHTVQs2kb53FH191pEoW\"]},\"iTreasury.sol\":{\"keccak256\":\"0x7fd4f3060b070c6694fd2956f0a09d0746b52e585711d14e38ec0b721afa2f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280149071ead0a0bb9ef085787952c7a704116096d8e448da78d6c057085d1bd\",\"dweb:/ipfs/QmVKVemyoxpNkJWxG8SocMKEUw3JS4mj6Qk8uYrbWKGihD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"iTreasury.sol": {
				"iTreasury": {
					"abi": [
						{
							"inputs": [],
							"name": "depositNFTRevenue",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCombinedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawPrivateFund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositNFTRevenue()": "760c764d",
							"getCombinedBalance()": "3d2ba888",
							"withdrawPrivateFund(uint256)": "3419628b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"depositNFTRevenue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCombinedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPrivateFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"iTreasury.sol\":\"iTreasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"iTreasury.sol\":{\"keccak256\":\"0x7fd4f3060b070c6694fd2956f0a09d0746b52e585711d14e38ec0b721afa2f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280149071ead0a0bb9ef085787952c7a704116096d8e448da78d6c057085d1bd\",\"dweb:/ipfs/QmVKVemyoxpNkJWxG8SocMKEUw3JS4mj6Qk8uYrbWKGihD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							470
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 471,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 470,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								470
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							470
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 471,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 470,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								470
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": []
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 226,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 229,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 234,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 235,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 239,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 274,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 242,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 245,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 246,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 250,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 255,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 274,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 268,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 269,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 274,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 275,
							"src": "888:1952:2",
							"usedErrors": []
						}
					],
					"src": "112:2729:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							731
						],
						"IERC721": [
							390
						]
					},
					"id": 391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 391,
							"sourceUnit": 732,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 279,
										"name": "IERC165",
										"nameLocations": [
											"271:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 731,
										"src": "271:7:3"
									},
									"id": 280,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 278,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 390,
							"linearizedBaseContracts": [
								390,
								731
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 289,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 298,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 307,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 390,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 390,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 390,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2701:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2721:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:3"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:3"
									},
									"scope": 390,
									"src": "2644:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3526:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3568:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:3"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:3"
									},
									"scope": 390,
									"src": "3495:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "4079:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "4091:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:3"
									},
									"scope": 390,
									"src": "4062:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "4464:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "4482:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:3"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:3"
									},
									"scope": 390,
									"src": "4437:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "4678:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "4718:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:3"
									},
									"scope": 390,
									"src": "4657:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "4911:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "4926:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "4967:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:3"
									},
									"scope": 390,
									"src": "4885:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 391,
							"src": "250:4725:3",
							"usedErrors": []
						}
					],
					"src": "108:4868:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							731
						],
						"IERC721": [
							390
						],
						"IERC721Enumerable": [
							421
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 392,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 422,
							"sourceUnit": 391,
							"src": "154:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 395,
										"name": "IERC721",
										"nameLocations": [
											"348:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 390,
										"src": "348:7:4"
									},
									"id": 396,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:4"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421,
								390,
								731
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:4",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:4"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "495:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:4"
									},
									"scope": 421,
									"src": "449:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:4",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "715:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "730:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:4"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "768:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:4"
									},
									"scope": 421,
									"src": "686:91:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:4",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "974:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:4"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1012:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:4"
									},
									"scope": 421,
									"src": "952:69:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "317:706:4",
							"usedErrors": []
						}
					],
					"src": "129:895:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							731
						],
						"IERC721": [
							390
						],
						"IERC721Metadata": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 391,
							"src": "137:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 426,
										"name": "IERC721",
										"nameLocations": [
											"326:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 390,
										"src": "326:7:5"
									},
									"id": 427,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 425,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 448,
							"linearizedBaseContracts": [
								448,
								390,
								731
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:5"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "442:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:5"
									},
									"scope": 448,
									"src": "403:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "569:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 436,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:5"
									},
									"scope": 448,
									"src": "528:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "703:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:5"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "743:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:5"
									},
									"scope": 448,
									"src": "685:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 449,
							"src": "297:463:5",
							"usedErrors": []
						}
					],
					"src": "112:649:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							470
						]
					},
					"id": 471,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 451,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 470,
							"linearizedBaseContracts": [
								470
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 456,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 455,
												"id": 458,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 470,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 465,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 464,
												"id": 467,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 470,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 471,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							544
						]
					},
					"id": 545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 472,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 473,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:7",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 544,
							"linearizedBaseContracts": [
								544
							],
							"name": "Counters",
							"nameLocation": "432:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 476,
									"members": [
										{
											"constant": false,
											"id": 475,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 476,
											"src": "786:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 474,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:7",
									"nodeType": "StructDefinition",
									"scope": 544,
									"src": "447:374:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "901:38:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 484,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "918:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:7",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 475,
													"src": "918:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 486,
												"nodeType": "Return",
												"src": "911:21:7"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "844:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 477,
														"name": "Counter",
														"nameLocations": [
															"844:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 476,
														"src": "844:7:7"
													},
													"referencedDeclaration": 476,
													"src": "844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:7"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "892:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:7"
									},
									"scope": 544,
									"src": "827:112:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "998:70:7",
										"statements": [
											{
												"id": 500,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:7",
												"statements": [
													{
														"expression": {
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 494,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "1032:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:7",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 475,
																"src": "1032:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 499,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:7"
													}
												]
											}
										]
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "964:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 490,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 489,
														"name": "Counter",
														"nameLocations": [
															"964:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 476,
														"src": "964:7:7"
													},
													"referencedDeclaration": 476,
													"src": "964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:7"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:7"
									},
									"scope": 544,
									"src": "945:123:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "1127:176:7",
										"statements": [
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "1137:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"expression": {
														"id": 510,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1153:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:7",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 475,
													"src": "1153:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "1185:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:7"
											},
											{
												"id": 528,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:7",
												"statements": [
													{
														"expression": {
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 520,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "1260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:7",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 475,
																"src": "1260:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 523,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "1277:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 527,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:7"
													}
												]
											}
										]
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1093:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "Counter",
														"nameLocations": [
															"1093:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 476,
														"src": "1093:7:7"
													},
													"referencedDeclaration": 476,
													"src": "1093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:7"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:7"
									},
									"scope": 544,
									"src": "1074:229:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "1358:35:7",
										"statements": [
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 536,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "1368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:7",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 475,
														"src": "1368:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:7"
											}
										]
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1324:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 532,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 531,
														"name": "Counter",
														"nameLocations": [
															"1324:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 476,
														"src": "1324:7:7"
													},
													"referencedDeclaration": 476,
													"src": "1324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:7"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:7"
									},
									"scope": 544,
									"src": "1309:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 545,
							"src": "424:971:7",
							"usedErrors": []
						}
					],
					"src": "87:1309:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1596
						],
						"Strings": [
							719
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 546,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 547,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 720,
							"sourceUnit": 1597,
							"src": "126:25:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 548,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719
							],
							"name": "Strings",
							"nameLocation": "196:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 551,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "210:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 549,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 550,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 554,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "270:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 552,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 553,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "486:625:8",
										"statements": [
											{
												"id": 600,
												"nodeType": "UncheckedBlock",
												"src": "496:609:8",
												"statements": [
													{
														"assignments": [
															563
														],
														"declarations": [
															{
																"constant": false,
																"id": 563,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 600,
																"src": "520:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 562,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 570,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "548:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 564,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "537:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1596_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1433,
																	"src": "537:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:8"
													},
													{
														"assignments": [
															572
														],
														"declarations": [
															{
																"constant": false,
																"id": 572,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 600,
																"src": "572:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 571,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 577,
														"initialValue": {
															"arguments": [
																{
																	"id": 575,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "606:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 573,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:8"
													},
													{
														"assignments": [
															579
														],
														"declarations": [
															{
																"constant": false,
																"id": 579,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 600,
																"src": "627:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 578,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 580,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 572,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:8",
																"valueSize": 1
															},
															{
																"declaration": 563,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:8",
																"valueSize": 1
															},
															{
																"declaration": 579,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:8",
																"valueSize": 1
															}
														],
														"id": 581,
														"nodeType": "InlineAssembly",
														"src": "699:76:8"
													},
													{
														"body": {
															"id": 596,
															"nodeType": "Block",
															"src": "801:267:8",
															"statements": [
																{
																	"expression": {
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:8",
																		"subExpression": {
																			"id": 583,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 579,
																			"src": "819:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 585,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:8"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:8"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 551,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 579,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 557,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 586,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:8"
																},
																{
																	"expression": {
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 587,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "1003:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 590,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "1036:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 595,
																	"nodeType": "IfStatement",
																	"src": "1032:21:8",
																	"trueBody": {
																		"id": 594,
																		"nodeType": "Break",
																		"src": "1048:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 597,
														"nodeType": "WhileStatement",
														"src": "788:280:8"
													},
													{
														"expression": {
															"id": 598,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1088:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 561,
														"id": 599,
														"nodeType": "Return",
														"src": "1081:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "433:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:8"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "471:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:8"
									},
									"scope": 719,
									"src": "415:696:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "1290:100:8",
										"statements": [
											{
												"id": 620,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "1343:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 614,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "1362:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 612,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "1350:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1596_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1556,
																			"src": "1350:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 610,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	622,
																	698,
																	718
																],
																"referencedDeclaration": 698,
																"src": "1331:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 609,
														"id": 619,
														"nodeType": "Return",
														"src": "1324:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1237:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:8"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1275:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:8"
									},
									"scope": 719,
									"src": "1216:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "1603:347:8",
										"statements": [
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "1613:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 632,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 637,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "1649:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 634,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:8"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 643,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "1670:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 645,
														"indexExpression": {
															"hexValue": "30",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:8"
											},
											{
												"expression": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 649,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "1695:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 651,
														"indexExpression": {
															"hexValue": "31",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:8"
											},
											{
												"body": {
													"id": 683,
													"nodeType": "Block",
													"src": "1765:83:8",
													"statements": [
														{
															"expression": {
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 669,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "1779:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 671,
																	"indexExpression": {
																		"id": 670,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "1786:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 672,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "1791:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 676,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 673,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "1800:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 678,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:8"
														},
														{
															"expression": {
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "1826:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 682,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 663,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "1753:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"initializationExpression": {
													"assignments": [
														656
													],
													"declarations": [
														{
															"constant": false,
															"id": 656,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 684,
															"src": "1725:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 655,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 662,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 658,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "1741:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:8",
														"subExpression": {
															"id": 666,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "1762:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 668,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 686,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "1865:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 694,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "1936:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 692,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 631,
												"id": 696,
												"nodeType": "Return",
												"src": "1922:21:8"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1534:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:8"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1588:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:8"
									},
									"scope": 719,
									"src": "1513:437:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "2175:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 711,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 701,
																			"src": "2220:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 709,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 707,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 714,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "2228:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 706,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															698,
															718
														],
														"referencedDeclaration": 698,
														"src": "2192:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 705,
												"id": 716,
												"nodeType": "Return",
												"src": "2185:59:8"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2123:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:8"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2160:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:8"
									},
									"scope": 719,
									"src": "2102:149:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 720,
							"src": "188:2065:8",
							"usedErrors": []
						}
					],
					"src": "101:2153:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							731
						]
					},
					"id": 732,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 721,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 722,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 731,
							"linearizedBaseContracts": [
								731
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 724,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 731,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 732,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1596
						]
					},
					"id": 1597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 733,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1596,
							"linearizedBaseContracts": [
								1596
							],
							"name": "Math",
							"nameLocation": "210:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 738,
									"members": [
										{
											"id": 735,
											"name": "Down",
											"nameLocation": "245:4:10",
											"nodeType": "EnumValue",
											"src": "245:4:10"
										},
										{
											"id": 736,
											"name": "Up",
											"nameLocation": "287:2:10",
											"nodeType": "EnumValue",
											"src": "287:2:10"
										},
										{
											"id": 737,
											"name": "Zero",
											"nameLocation": "318:4:10",
											"nodeType": "EnumValue",
											"src": "318:4:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:10",
									"nodeType": "EnumDefinition",
									"src": "221:122:10"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "480:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 748,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "497:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 749,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "501:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 752,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "509:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:10",
													"trueExpression": {
														"id": 751,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "505:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 754,
												"nodeType": "Return",
												"src": "490:20:10"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "426:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "437:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:10"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "471:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:10"
									},
									"scope": 1596,
									"src": "413:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "655:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 766,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "672:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 767,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "676:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 770,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "684:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:10",
													"trueExpression": {
														"id": 769,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "680:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 765,
												"id": 772,
												"nodeType": "Return",
												"src": "665:20:10"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "646:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:10"
									},
									"scope": 1596,
									"src": "588:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "876:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 784,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 785,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "935:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 787,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 788,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "941:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 789,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "945:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 791,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 783,
												"id": 795,
												"nodeType": "Return",
												"src": "923:28:10"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "822:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "833:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:10"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "867:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:10"
									},
									"scope": 1596,
									"src": "805:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "1228:123:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 807,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "1316:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 811,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "1330:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 814,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 815,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 806,
												"id": 820,
												"nodeType": "Return",
												"src": "1309:35:10"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1174:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1185:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:10"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1219:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:10"
									},
									"scope": 1596,
									"src": "1157:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "1795:3797:10",
										"statements": [
											{
												"id": 942,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:10",
												"statements": [
													{
														"assignments": [
															835
														],
														"declarations": [
															{
																"constant": false,
																"id": 835,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 942,
																"src": "2126:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 834,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 836,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:10"
													},
													{
														"assignments": [
															838
														],
														"declarations": [
															{
																"constant": false,
																"id": 838,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 942,
																"src": "2198:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 837,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 839,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 835,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:10",
																"valueSize": 1
															},
															{
																"declaration": 835,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:10",
																"valueSize": 1
															},
															{
																"declaration": 835,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:10",
																"valueSize": 1
															},
															{
																"declaration": 838,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:10",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:10",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:10",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:10",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:10",
																"valueSize": 1
															}
														],
														"id": 840,
														"nodeType": "InlineAssembly",
														"src": "2269:166:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "2516:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 849,
														"nodeType": "IfStatement",
														"src": "2512:75:10",
														"trueBody": {
															"id": 848,
															"nodeType": "Block",
															"src": "2528:59:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 844,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "2553:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 845,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "2561:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 833,
																	"id": 847,
																	"nodeType": "Return",
																	"src": "2546:26:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 851,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "2697:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 852,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "2711:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 850,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 855,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:10"
													},
													{
														"assignments": [
															857
														],
														"declarations": [
															{
																"constant": false,
																"id": 857,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 942,
																"src": "2973:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 856,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 858,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:10",
																"valueSize": 1
															},
															{
																"declaration": 835,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:10",
																"valueSize": 1
															},
															{
																"declaration": 835,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:10",
																"valueSize": 1
															},
															{
																"declaration": 835,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:10",
																"valueSize": 1
															},
															{
																"declaration": 838,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:10",
																"valueSize": 1
															},
															{
																"declaration": 838,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:10",
																"valueSize": 1
															},
															{
																"declaration": 857,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:10",
																"valueSize": 1
															},
															{
																"declaration": 857,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:10",
																"valueSize": 1
															},
															{
																"declaration": 857,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:10",
																"valueSize": 1
															},
															{
																"declaration": 825,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:10",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:10",
																"valueSize": 1
															}
														],
														"id": 859,
														"nodeType": "InlineAssembly",
														"src": "3004:300:10"
													},
													{
														"assignments": [
															861
														],
														"declarations": [
															{
																"constant": false,
																"id": 861,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 942,
																"src": "3611:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 860,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 869,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "3626:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:10",
																			"subExpression": {
																				"id": 863,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "3642:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 867,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:10",
																"valueSize": 1
															},
															{
																"declaration": 829,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:10",
																"valueSize": 1
															},
															{
																"declaration": 835,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:10",
																"valueSize": 1
															},
															{
																"declaration": 835,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:10",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:10",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:10",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:10",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:10",
																"valueSize": 1
															},
															{
																"declaration": 861,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:10",
																"valueSize": 1
															}
														],
														"id": 870,
														"nodeType": "InlineAssembly",
														"src": "3672:371:10"
													},
													{
														"expression": {
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 871,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "4109:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 872,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "4118:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 873,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "4126:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 876,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:10"
													},
													{
														"assignments": [
															878
														],
														"declarations": [
															{
																"constant": false,
																"id": 878,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 942,
																"src": "4448:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 877,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 885,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 880,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "4471:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 882,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:10"
													},
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "4704:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "4719:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "4733:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:10"
													},
													{
														"expression": {
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 894,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "4773:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 896,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "4788:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 897,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "4802:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 901,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:10"
													},
													{
														"expression": {
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 902,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "4843:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 904,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "4858:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 905,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "4872:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 909,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:10"
													},
													{
														"expression": {
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 910,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "4913:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 912,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "4928:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 913,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "4942:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 917,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:10"
													},
													{
														"expression": {
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 918,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "4983:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 920,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "4998:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 921,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "5012:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 925,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:10"
													},
													{
														"expression": {
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 926,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "5054:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 928,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "5069:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 929,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "5083:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 933,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:10"
													},
													{
														"expression": {
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 934,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "5524:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "5533:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 936,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "5541:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 939,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:10"
													},
													{
														"expression": {
															"id": 940,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5569:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 833,
														"id": 941,
														"nodeType": "Return",
														"src": "5562:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1692:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1711:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1730:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:10"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1779:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:10"
									},
									"scope": 1596,
									"src": "1667:3925:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "5872:189:10",
										"statements": [
											{
												"assignments": [
													960
												],
												"declarations": [
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "5882:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 959,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"initialValue": {
													"arguments": [
														{
															"id": 962,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "5906:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 963,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "5909:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 964,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "5912:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 961,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															944,
															988
														],
														"referencedDeclaration": 944,
														"src": "5899:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$738",
															"typeString": "enum Math.Rounding"
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 967,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "5938:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$738",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 968,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5950:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$738_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:10",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 736,
															"src": "5950:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$738",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 972,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "5972:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 973,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "5975:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 974,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "5978:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 971,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "5934:98:10",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "5996:36:10",
													"statements": [
														{
															"expression": {
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 979,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "6010:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 982,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 985,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 960,
													"src": "6048:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 958,
												"id": 986,
												"nodeType": "Return",
												"src": "6041:13:10"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5749:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5768:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5787:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5816:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 952,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 738,
														"src": "5816:8:10"
													},
													"referencedDeclaration": 738,
													"src": "5816:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:10"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "5863:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:10"
									},
									"scope": 1596,
									"src": "5724:337:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "6337:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "6351:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "6347:45:10",
												"trueBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "6359:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 995,
															"id": 1000,
															"nodeType": "Return",
															"src": "6373:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "7071:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1007,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 991,
																			"src": "7099:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1006,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1268,
																			1304
																		],
																		"referencedDeclaration": 1268,
																		"src": "7094:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1011,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:10"
											},
											{
												"id": 1098,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:10",
												"statements": [
													{
														"expression": {
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1014,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7532:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1015,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "7542:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1016,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "7551:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1017,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "7555:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1020,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1024,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:10"
													},
													{
														"expression": {
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1025,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7581:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1026,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "7591:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1027,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "7600:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1028,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "7604:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1031,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1035,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:10"
													},
													{
														"expression": {
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1036,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7630:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1037,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "7640:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1040,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1038,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "7649:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1039,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "7653:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1042,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1046,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:10"
													},
													{
														"expression": {
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1047,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7679:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1048,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "7689:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1049,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "7698:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1050,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "7702:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1053,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1057,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:10"
													},
													{
														"expression": {
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1058,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7728:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1059,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "7738:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1060,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "7747:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1061,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "7751:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1064,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1068,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:10"
													},
													{
														"expression": {
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1069,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1070,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "7787:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1071,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "7796:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1072,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "7800:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1079,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:10"
													},
													{
														"expression": {
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1080,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "7826:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1081,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "7836:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1082,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 991,
																					"src": "7845:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1083,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "7849:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1086,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1090,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1092,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "7886:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1093,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "7894:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1094,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7898:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1091,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "7882:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 995,
														"id": 1097,
														"nodeType": "Return",
														"src": "7875:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6294:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:10"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6328:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:10"
									},
									"scope": 1596,
									"src": "6280:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "8098:161:10",
										"statements": [
											{
												"id": 1134,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:10",
												"statements": [
													{
														"assignments": [
															1112
														],
														"declarations": [
															{
																"constant": false,
																"id": 1112,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1134,
																"src": "8132:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1111,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1116,
														"initialValue": {
															"arguments": [
																{
																	"id": 1114,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "8154:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1113,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1100,
																	1136
																],
																"referencedDeclaration": 1100,
																"src": "8149:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1117,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "8177:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$738",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1118,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1106,
																					"src": "8187:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$738",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1119,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 738,
																						"src": "8199:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$738_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 736,
																					"src": "8199:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$738",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1122,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1112,
																						"src": "8214:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1123,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1112,
																						"src": "8223:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1125,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "8232:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1110,
														"id": 1133,
														"nodeType": "Return",
														"src": "8170:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "8036:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "8047:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1105,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1104,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 738,
														"src": "8047:8:10"
													},
													"referencedDeclaration": 738,
													"src": "8047:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:10"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "8089:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:10"
									},
									"scope": 1596,
									"src": "8022:237:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "8444:922:10",
										"statements": [
											{
												"assignments": [
													1145
												],
												"declarations": [
													{
														"constant": false,
														"id": 1145,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "8454:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"hexValue": "30",
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:10"
											},
											{
												"id": 1264,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1148,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "8510:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1162,
														"nodeType": "IfStatement",
														"src": "8506:99:10",
														"trueBody": {
															"id": 1161,
															"nodeType": "Block",
															"src": "8528:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1153,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "8546:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1156,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:10"
																},
																{
																	"expression": {
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1157,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "8577:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1160,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1163,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "8622:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1177,
														"nodeType": "IfStatement",
														"src": "8618:96:10",
														"trueBody": {
															"id": 1176,
															"nodeType": "Block",
															"src": "8639:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "8657:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:10"
																},
																{
																	"expression": {
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1172,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "8687:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1175,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "8731:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1192,
														"nodeType": "IfStatement",
														"src": "8727:96:10",
														"trueBody": {
															"id": 1191,
															"nodeType": "Block",
															"src": "8748:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "8766:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1186,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:10"
																},
																{
																	"expression": {
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1187,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "8796:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1190,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1193,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "8840:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1207,
														"nodeType": "IfStatement",
														"src": "8836:96:10",
														"trueBody": {
															"id": 1206,
															"nodeType": "Block",
															"src": "8857:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1198,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "8875:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1201,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:10"
																},
																{
																	"expression": {
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1202,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "8905:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "8949:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1222,
														"nodeType": "IfStatement",
														"src": "8945:93:10",
														"trueBody": {
															"id": 1221,
															"nodeType": "Block",
															"src": "8965:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1213,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "8983:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1216,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:10"
																},
																{
																	"expression": {
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "9012:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1220,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "9055:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1237,
														"nodeType": "IfStatement",
														"src": "9051:93:10",
														"trueBody": {
															"id": 1236,
															"nodeType": "Block",
															"src": "9071:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1228,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "9089:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1231,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:10"
																},
																{
																	"expression": {
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1232,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "9118:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1235,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1238,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "9161:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1252,
														"nodeType": "IfStatement",
														"src": "9157:93:10",
														"trueBody": {
															"id": 1251,
															"nodeType": "Block",
															"src": "9177:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1243,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "9195:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1246,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:10"
																},
																{
																	"expression": {
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1247,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "9224:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1250,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "9267:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1263,
														"nodeType": "IfStatement",
														"src": "9263:64:10",
														"trueBody": {
															"id": 1262,
															"nodeType": "Block",
															"src": "9283:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1258,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "9301:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1261,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1265,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1145,
													"src": "9353:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1266,
												"nodeType": "Return",
												"src": "9346:13:10"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:10",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "8397:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:10"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "8435:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:10"
									},
									"scope": 1596,
									"src": "8383:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "9599:165:10",
										"statements": [
											{
												"id": 1302,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:10",
												"statements": [
													{
														"assignments": [
															1280
														],
														"declarations": [
															{
																"constant": false,
																"id": 1280,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1302,
																"src": "9633:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1284,
														"initialValue": {
															"arguments": [
																{
																	"id": 1282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "9655:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1281,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1268,
																	1304
																],
																"referencedDeclaration": 1268,
																"src": "9650:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1285,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "9682:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$738",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1286,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1274,
																					"src": "9692:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$738",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1287,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 738,
																						"src": "9704:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$738_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 736,
																					"src": "9704:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$738",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1290,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1291,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1280,
																						"src": "9724:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1293,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1271,
																					"src": "9733:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1278,
														"id": 1301,
														"nodeType": "Return",
														"src": "9675:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "9533:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "9548:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1272,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 738,
														"src": "9548:8:10"
													},
													"referencedDeclaration": 738,
													"src": "9548:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:10"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "9590:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:10"
									},
									"scope": 1596,
									"src": "9519:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "9951:828:10",
										"statements": [
											{
												"assignments": [
													1313
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "9961:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1315,
												"initialValue": {
													"hexValue": "30",
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:10"
											},
											{
												"id": 1429,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1316,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "10017:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1332,
														"nodeType": "IfStatement",
														"src": "10013:99:10",
														"trueBody": {
															"id": 1331,
															"nodeType": "Block",
															"src": "10034:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1321,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "10052:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1326,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:10"
																},
																{
																	"expression": {
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1327,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "10085:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1330,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1333,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "10129:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1349,
														"nodeType": "IfStatement",
														"src": "10125:99:10",
														"trueBody": {
															"id": 1348,
															"nodeType": "Block",
															"src": "10146:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1338,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "10164:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1343,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:10"
																},
																{
																	"expression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1344,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "10197:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1347,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1350,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "10241:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1366,
														"nodeType": "IfStatement",
														"src": "10237:99:10",
														"trueBody": {
															"id": 1365,
															"nodeType": "Block",
															"src": "10258:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1355,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "10276:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1360,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:10"
																},
																{
																	"expression": {
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1361,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "10309:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1364,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1367,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "10353:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1383,
														"nodeType": "IfStatement",
														"src": "10349:96:10",
														"trueBody": {
															"id": 1382,
															"nodeType": "Block",
															"src": "10369:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1372,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "10387:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1377,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:10"
																},
																{
																	"expression": {
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1378,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "10419:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1381,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "10462:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1400,
														"nodeType": "IfStatement",
														"src": "10458:96:10",
														"trueBody": {
															"id": 1399,
															"nodeType": "Block",
															"src": "10478:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1389,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "10496:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:10"
																},
																{
																	"expression": {
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1395,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "10528:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1398,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1401,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "10571:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1417,
														"nodeType": "IfStatement",
														"src": "10567:96:10",
														"trueBody": {
															"id": 1416,
															"nodeType": "Block",
															"src": "10587:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1406,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "10605:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1411,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:10"
																},
																{
																	"expression": {
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1412,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "10637:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1415,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "10680:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1428,
														"nodeType": "IfStatement",
														"src": "10676:64:10",
														"trueBody": {
															"id": 1427,
															"nodeType": "Block",
															"src": "10696:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1423,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "10714:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1426,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1430,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1313,
													"src": "10766:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1431,
												"nodeType": "Return",
												"src": "10759:13:10"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:10",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "9904:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:10"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "9942:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:10"
									},
									"scope": 1596,
									"src": "9889:890:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "11014:165:10",
										"statements": [
											{
												"id": 1467,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:10",
												"statements": [
													{
														"assignments": [
															1445
														],
														"declarations": [
															{
																"constant": false,
																"id": 1445,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1467,
																"src": "11048:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1444,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1449,
														"initialValue": {
															"arguments": [
																{
																	"id": 1447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "11071:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1446,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1433,
																	1469
																],
																"referencedDeclaration": 1433,
																"src": "11065:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1450,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "11098:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$738",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1451,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1439,
																					"src": "11108:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$738",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1452,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 738,
																						"src": "11120:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$738_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1453,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 736,
																					"src": "11120:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$738",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1457,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1455,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1456,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1445,
																						"src": "11139:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1458,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1436,
																					"src": "11148:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1464,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1443,
														"id": 1466,
														"nodeType": "Return",
														"src": "11091:71:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "10948:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "10963:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1438,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1437,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 738,
														"src": "10963:8:10"
													},
													"referencedDeclaration": 738,
													"src": "10963:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:10"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "11005:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:10"
									},
									"scope": 1596,
									"src": "10933:246:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "11493:600:10",
										"statements": [
											{
												"assignments": [
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1555,
														"src": "11503:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"hexValue": "30",
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:10"
											},
											{
												"id": 1552,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "11559:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1495,
														"nodeType": "IfStatement",
														"src": "11555:98:10",
														"trueBody": {
															"id": 1494,
															"nodeType": "Block",
															"src": "11577:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1486,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1472,
																			"src": "11595:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1489,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:10"
																},
																{
																	"expression": {
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1490,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "11626:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1493,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1496,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "11670:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1510,
														"nodeType": "IfStatement",
														"src": "11666:95:10",
														"trueBody": {
															"id": 1509,
															"nodeType": "Block",
															"src": "11687:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1472,
																			"src": "11705:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1504,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:10"
																},
																{
																	"expression": {
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1505,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "11735:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1508,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1511,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "11778:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1525,
														"nodeType": "IfStatement",
														"src": "11774:95:10",
														"trueBody": {
															"id": 1524,
															"nodeType": "Block",
															"src": "11795:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1516,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1472,
																			"src": "11813:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1519,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:10"
																},
																{
																	"expression": {
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1520,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "11843:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1523,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1526,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "11886:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1540,
														"nodeType": "IfStatement",
														"src": "11882:95:10",
														"trueBody": {
															"id": 1539,
															"nodeType": "Block",
															"src": "11903:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1472,
																			"src": "11921:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1534,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:10"
																},
																{
																	"expression": {
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1535,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "11951:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1538,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1541,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "11994:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1551,
														"nodeType": "IfStatement",
														"src": "11990:64:10",
														"trueBody": {
															"id": 1550,
															"nodeType": "Block",
															"src": "12010:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "12028:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1549,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1553,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1478,
													"src": "12080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1554,
												"nodeType": "Return",
												"src": "12073:13:10"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:10",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11446:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:10"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "11484:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:10"
									},
									"scope": 1596,
									"src": "11430:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "12329:173:10",
										"statements": [
											{
												"id": 1593,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:10",
												"statements": [
													{
														"assignments": [
															1568
														],
														"declarations": [
															{
																"constant": false,
																"id": 1568,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1593,
																"src": "12363:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1567,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1572,
														"initialValue": {
															"arguments": [
																{
																	"id": 1570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "12387:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1569,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1556,
																	1595
																],
																"referencedDeclaration": 1556,
																"src": "12380:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1573,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "12414:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$738",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1574,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1562,
																					"src": "12424:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$738",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1575,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 738,
																						"src": "12436:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$738_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 736,
																					"src": "12436:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$738",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1578,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1581,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1579,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1568,
																									"src": "12457:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1580,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1582,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1584,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1559,
																					"src": "12471:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1590,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1566,
														"id": 1592,
														"nodeType": "Return",
														"src": "12407:78:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "12263:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "12278:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1561,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1560,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 738,
														"src": "12278:8:10"
													},
													"referencedDeclaration": 738,
													"src": "12278:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:10"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "12320:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:10"
									},
									"scope": 1596,
									"src": "12247:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1597,
							"src": "202:12302:10",
							"usedErrors": []
						}
					],
					"src": "103:12402:10"
				},
				"id": 10
			},
			"DoAConstants.sol": {
				"ast": {
					"absolutePath": "DoAConstants.sol",
					"exportedSymbols": {
						"DoAConstants": [
							1931
						],
						"NFT_CLASS": [
							1604
						]
					},
					"id": 1932,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1598,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"canonicalName": "NFT_CLASS",
							"id": 1604,
							"members": [
								{
									"id": 1599,
									"name": "HERO",
									"nameLocation": "256:4:11",
									"nodeType": "EnumValue",
									"src": "256:4:11"
								},
								{
									"id": 1600,
									"name": "LEGEND",
									"nameLocation": "266:6:11",
									"nodeType": "EnumValue",
									"src": "266:6:11"
								},
								{
									"id": 1601,
									"name": "RARE",
									"nameLocation": "278:4:11",
									"nodeType": "EnumValue",
									"src": "278:4:11"
								},
								{
									"id": 1602,
									"name": "UNCOMMON",
									"nameLocation": "288:8:11",
									"nodeType": "EnumValue",
									"src": "288:8:11"
								},
								{
									"id": 1603,
									"name": "COMMON",
									"nameLocation": "302:6:11",
									"nodeType": "EnumValue",
									"src": "302:6:11"
								}
							],
							"name": "NFT_CLASS",
							"nameLocation": "240:9:11",
							"nodeType": "EnumDefinition",
							"src": "235:75:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DoAConstants",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1931,
							"linearizedBaseContracts": [
								1931
							],
							"name": "DoAConstants",
							"nameLocation": "511:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e93e980b",
									"id": 1607,
									"mutability": "constant",
									"name": "HERO_NFT_SUPPLY_1st",
									"nameLocation": "804:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "781:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1605,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "781:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1606,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "826:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8d1da411",
									"id": 1610,
									"mutability": "constant",
									"name": "LEGEND_NFT_SUPPLY_1st",
									"nameLocation": "857:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "834:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1608,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "834:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1609,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "881:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "970f6e2f",
									"id": 1613,
									"mutability": "constant",
									"name": "RARE_NFT_SUPPLY_1st",
									"nameLocation": "911:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "888:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1611,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "888:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1612,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "933:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5e28c936",
									"id": 1616,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_SUPPLY_1st",
									"nameLocation": "963:23:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "940:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1614,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "940:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1615,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "989:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "828d481b",
									"id": 1619,
									"mutability": "constant",
									"name": "COMMON_NFT_SUPPLY_1st",
									"nameLocation": "1020:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "997:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1617,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "997:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "313235",
										"id": 1618,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1044:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_125_by_1",
											"typeString": "int_const 125"
										},
										"value": "125"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a83179db",
									"id": 1622,
									"mutability": "constant",
									"name": "HERO_NFT_SUPPLY_2nd",
									"nameLocation": "1111:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1088:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1620,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1088:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1621,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1133:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "38d79b52",
									"id": 1625,
									"mutability": "constant",
									"name": "LEGEND_NFT_SUPPLY_2nd",
									"nameLocation": "1163:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1140:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1623,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1140:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1624,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1187:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5e09346a",
									"id": 1628,
									"mutability": "constant",
									"name": "RARE_NFT_SUPPLY_2nd",
									"nameLocation": "1218:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1195:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1626,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1195:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1627,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1240:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f59528d2",
									"id": 1631,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_SUPPLY_2nd",
									"nameLocation": "1271:23:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1248:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1629,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1248:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "323530",
										"id": 1630,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1297:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_250_by_1",
											"typeString": "int_const 250"
										},
										"value": "250"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c525c0c8",
									"id": 1634,
									"mutability": "constant",
									"name": "COMMON_NFT_SUPPLY_2nd",
									"nameLocation": "1329:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1306:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1632,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1306:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31323530",
										"id": 1633,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1353:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1250_by_1",
											"typeString": "int_const 1250"
										},
										"value": "1250"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f41dc7d2",
									"id": 1637,
									"mutability": "constant",
									"name": "HERO_NFT_SUPPLY_3rd",
									"nameLocation": "1421:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1398:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1635,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1398:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1636,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1443:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bf0832ae",
									"id": 1640,
									"mutability": "constant",
									"name": "LEGEND_NFT_SUPPLY_3rd",
									"nameLocation": "1473:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1450:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1638,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1450:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3830",
										"id": 1639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1497:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80_by_1",
											"typeString": "int_const 80"
										},
										"value": "80"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ca45f599",
									"id": 1643,
									"mutability": "constant",
									"name": "RARE_NFT_SUPPLY_3rd",
									"nameLocation": "1528:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1505:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1641,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1505:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 1642,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1550:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a1d2002d",
									"id": 1646,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_SUPPLY_3rd",
									"nameLocation": "1582:23:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1559:53:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1644,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1559:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "32303030",
										"id": 1645,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1608:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000_by_1",
											"typeString": "int_const 2000"
										},
										"value": "2000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cb937d2b",
									"id": 1649,
									"mutability": "constant",
									"name": "COMMON_NFT_SUPPLY_3rd",
									"nameLocation": "1641:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1618:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1647,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "35373730",
										"id": 1648,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1665:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5770_by_1",
											"typeString": "int_const 5770"
										},
										"value": "5770"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32a41506",
									"id": 1652,
									"mutability": "constant",
									"name": "NFT_SUPPLY_1st",
									"nameLocation": "1727:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1704:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1650,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1704:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "313831",
										"id": 1651,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_181_by_1",
											"typeString": "int_const 181"
										},
										"value": "181"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1ab7730c",
									"id": 1655,
									"mutability": "constant",
									"name": "NFT_SUPPLY_2nd",
									"nameLocation": "1776:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1753:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1653,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1753:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31353630",
										"id": 1654,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1793:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1560_by_1",
											"typeString": "int_const 1560"
										},
										"value": "1560"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6b606f0f",
									"id": 1658,
									"mutability": "constant",
									"name": "NFT_SUPPLY_3rd",
									"nameLocation": "1826:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "1803:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1656,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1803:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "38323530",
										"id": 1657,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1843:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8250_by_1",
											"typeString": "int_const 8250"
										},
										"value": "8250"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58a0d923",
									"id": 1661,
									"mutability": "constant",
									"name": "HERO_NFT_START_INDEX",
									"nameLocation": "2130:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2107:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1659,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2107:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1660,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2153:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a1bd4a07",
									"id": 1664,
									"mutability": "constant",
									"name": "LEGEND_NFT_START_INDEX",
									"nameLocation": "2183:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2160:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1662,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2160:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1663,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2208:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "10a309f3",
									"id": 1667,
									"mutability": "constant",
									"name": "RARE_NFT_START_INDEX",
									"nameLocation": "2239:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2216:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1665,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2216:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "313236",
										"id": 1666,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2262:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_126_by_1",
											"typeString": "int_const 126"
										},
										"value": "126"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "11f47eb5",
									"id": 1670,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_START_INDEX",
									"nameLocation": "2294:24:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2271:53:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1668,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2271:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "363237",
										"id": 1669,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2321:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_627_by_1",
											"typeString": "int_const 627"
										},
										"value": "627"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "971cba96",
									"id": 1673,
									"mutability": "constant",
									"name": "COMMON_NFT_START_INDEX",
									"nameLocation": "2353:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2330:52:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1671,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2330:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "33313238",
										"id": 1672,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2378:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3128_by_1",
											"typeString": "int_const 3128"
										},
										"value": "3128"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4e2ecca1",
									"id": 1676,
									"mutability": "constant",
									"name": "LEGEND_NFT_PRICE",
									"nameLocation": "2614:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2590:53:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1674,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2590:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "312e3634",
										"id": 1675,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2633:10:11",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1640000000000000000_by_1",
											"typeString": "int_const 1640000000000000000"
										},
										"value": "1.64"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "be8ca905",
									"id": 1679,
									"mutability": "constant",
									"name": "RARE_NFT_PRICE",
									"nameLocation": "2682:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2658:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1677,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3333",
										"id": 1678,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2699:10:11",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_330000000000000000_by_1",
											"typeString": "int_const 330000000000000000"
										},
										"value": "0.33"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9ee58048",
									"id": 1682,
									"mutability": "constant",
									"name": "COMMON_NFT_PRICE",
									"nameLocation": "2747:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2723:54:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1680,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2723:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303636",
										"id": 1681,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2766:11:11",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_66000000000000000_by_1",
											"typeString": "int_const 66000000000000000"
										},
										"value": "0.066"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "beb9e75e",
									"id": 1685,
									"mutability": "constant",
									"name": "UNCOMMON_NFT_PRICE",
									"nameLocation": "2815:18:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "2791:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1683,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2791:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303133",
										"id": 1684,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2836:11:11",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13000000000000000_by_1",
											"typeString": "int_const 13000000000000000"
										},
										"value": "0.013"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "dbddb26a",
									"id": 1688,
									"mutability": "constant",
									"name": "BASE_URI",
									"nameLocation": "3083:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "3060:57:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1686,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3060:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "697066733a2f2f3c686173683e2f646f612f6e6674",
										"id": 1687,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3094:23:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_791972a3766451f970be7ea3b9adadfb2288dfc356bcb5aa2451414035147207",
											"typeString": "literal_string \"ipfs://<hash>/doa/nft\""
										},
										"value": "ipfs://<hash>/doa/nft"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cfc2abb7",
									"id": 1691,
									"mutability": "constant",
									"name": "BASE_HERO_URI",
									"nameLocation": "3147:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "3124:55:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1689,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3124:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f6865726f2f6d65746164617461",
										"id": 1690,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3163:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_79dc579bf9a6d817651e59882288c1d81ebd8449269c94684a34b09abdcbf88e",
											"typeString": "literal_string \"/hero/metadata\""
										},
										"value": "/hero/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1eb1a2d3",
									"id": 1694,
									"mutability": "constant",
									"name": "BASE_LEGEND_URI",
									"nameLocation": "3208:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "3185:59:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1692,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3185:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f6c6567656e642f6d65746164617461",
										"id": 1693,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3226:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1b2155a7b42a80d86813721797e11599df9987117108462cb59c96982cd76b5e",
											"typeString": "literal_string \"/legend/metadata\""
										},
										"value": "/legend/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c244e88b",
									"id": 1697,
									"mutability": "constant",
									"name": "BASE_RARE_URI",
									"nameLocation": "3273:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "3250:55:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1695,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3250:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f726172652f6d65746164617461",
										"id": 1696,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3289:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e34860fd719fea59b566fbbfdb8aabe3d7acad002998d6921aec5bcf58fcd0fb",
											"typeString": "literal_string \"/rare/metadata\""
										},
										"value": "/rare/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6871d79f",
									"id": 1700,
									"mutability": "constant",
									"name": "BASE_UNCOMMON_URI",
									"nameLocation": "3334:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "3311:63:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1698,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3311:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f756e636f6d6d6f6e2f6d65746164617461",
										"id": 1699,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3354:20:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_122ca4802b59ecd45d81420fa2f9e9d43469fa336da2a5a0774a5e9c5c8f674d",
											"typeString": "literal_string \"/uncommon/metadata\""
										},
										"value": "/uncommon/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "811d5c6c",
									"id": 1703,
									"mutability": "constant",
									"name": "BASE_COMMON_URI",
									"nameLocation": "3403:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "3380:59:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1701,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3380:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2f636f6d6d6f6e2f6d65746164617461",
										"id": 1702,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3421:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ad15b80b2bebb1e4c6553666ef49046738c0b15fc0cc4c69b6fed3da0bcf4c93",
											"typeString": "literal_string \"/common/metadata\""
										},
										"value": "/common/metadata"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "eda14323",
									"id": 1706,
									"mutability": "constant",
									"name": "PUBLIC_FUND_PERCENTAGE",
									"nameLocation": "3663:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 1931,
									"src": "3641:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1704,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3641:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 1705,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3688:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "3835:856:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1714,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "3858:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"expression": {
																"id": 1715,
																"name": "DoAConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "3869:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																	"typeString": "type(library DoAConstants)"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3882:20:11",
															"memberName": "HERO_NFT_START_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1661,
															"src": "3869:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "3858:44:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1718,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "3906:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1719,
																"name": "DoAConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "3916:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																	"typeString": "type(library DoAConstants)"
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3929:22:11",
															"memberName": "LEGEND_NFT_START_INDEX",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1664,
															"src": "3916:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "3906:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3858:93:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1729,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "4015:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1730,
																	"name": "DoAConstants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "4026:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																		"typeString": "type(library DoAConstants)"
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4039:22:11",
																"memberName": "LEGEND_NFT_START_INDEX",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1664,
																"src": "4026:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "4015:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1733,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "4065:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1734,
																	"name": "DoAConstants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "4075:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																		"typeString": "type(library DoAConstants)"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4088:20:11",
																"memberName": "RARE_NFT_START_INDEX",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1667,
																"src": "4075:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "4065:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4015:93:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1744,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "4174:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1745,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "4185:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4198:20:11",
																	"memberName": "RARE_NFT_START_INDEX",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1667,
																	"src": "4185:33:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4174:44:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1748,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "4222:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1749,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "4232:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4245:24:11",
																	"memberName": "UNCOMMON_NFT_START_INDEX",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1670,
																	"src": "4232:37:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4222:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4174:95:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1759,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "4333:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"id": 1760,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "4344:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4357:24:11",
																		"memberName": "UNCOMMON_NFT_START_INDEX",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1670,
																		"src": "4344:37:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "4333:48:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1763,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "4385:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1764,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "4395:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4408:22:11",
																		"memberName": "COMMON_NFT_START_INDEX",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1673,
																		"src": "4395:35:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "4385:45:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4333:97:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1774,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "4498:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"id": 1775,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "4509:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4522:22:11",
																		"memberName": "COMMON_NFT_START_INDEX",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1673,
																		"src": "4509:35:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "4498:46:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1788,
																	"nodeType": "Block",
																	"src": "4606:51:11",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "496e76616c696420746f6b656e204944",
																						"id": 1785,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4627:18:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48",
																							"typeString": "literal_string \"Invalid token ID\""
																						},
																						"value": "Invalid token ID"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48",
																							"typeString": "literal_string \"Invalid token ID\""
																						}
																					],
																					"id": 1784,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "4620:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 1786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4620:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 1787,
																			"nodeType": "ExpressionStatement",
																			"src": "4620:26:11"
																		}
																	]
																},
																"id": 1789,
																"nodeType": "IfStatement",
																"src": "4494:163:11",
																"trueBody": {
																	"id": 1783,
																	"nodeType": "Block",
																	"src": "4546:54:11",
																	"statements": [
																		{
																			"expression": {
																				"id": 1781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1778,
																					"name": "tokenClass",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1712,
																					"src": "4560:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																						"typeString": "enum NFT_CLASS"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"expression": {
																						"id": 1779,
																						"name": "NFT_CLASS",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1604,
																						"src": "4573:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																							"typeString": "type(enum NFT_CLASS)"
																						}
																					},
																					"id": 1780,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4583:6:11",
																					"memberName": "COMMON",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1603,
																					"src": "4573:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																						"typeString": "enum NFT_CLASS"
																					}
																				},
																				"src": "4560:29:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																					"typeString": "enum NFT_CLASS"
																				}
																			},
																			"id": 1782,
																			"nodeType": "ExpressionStatement",
																			"src": "4560:29:11"
																		}
																	]
																}
															},
															"id": 1790,
															"nodeType": "IfStatement",
															"src": "4329:328:11",
															"trueBody": {
																"id": 1773,
																"nodeType": "Block",
																"src": "4432:56:11",
																"statements": [
																	{
																		"expression": {
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1768,
																				"name": "tokenClass",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1712,
																				"src": "4446:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																					"typeString": "enum NFT_CLASS"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1769,
																					"name": "NFT_CLASS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1604,
																					"src": "4459:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																						"typeString": "type(enum NFT_CLASS)"
																					}
																				},
																				"id": 1770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4469:8:11",
																				"memberName": "UNCOMMON",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1602,
																				"src": "4459:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																					"typeString": "enum NFT_CLASS"
																				}
																			},
																			"src": "4446:31:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																				"typeString": "enum NFT_CLASS"
																			}
																		},
																		"id": 1772,
																		"nodeType": "ExpressionStatement",
																		"src": "4446:31:11"
																	}
																]
															}
														},
														"id": 1791,
														"nodeType": "IfStatement",
														"src": "4170:487:11",
														"trueBody": {
															"id": 1758,
															"nodeType": "Block",
															"src": "4271:52:11",
															"statements": [
																{
																	"expression": {
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1753,
																			"name": "tokenClass",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1712,
																			"src": "4285:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																				"typeString": "enum NFT_CLASS"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 1754,
																				"name": "NFT_CLASS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "4298:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																					"typeString": "type(enum NFT_CLASS)"
																				}
																			},
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4308:4:11",
																			"memberName": "RARE",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1601,
																			"src": "4298:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																				"typeString": "enum NFT_CLASS"
																			}
																		},
																		"src": "4285:27:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"id": 1757,
																	"nodeType": "ExpressionStatement",
																	"src": "4285:27:11"
																}
															]
														}
													},
													"id": 1792,
													"nodeType": "IfStatement",
													"src": "4011:646:11",
													"trueBody": {
														"id": 1743,
														"nodeType": "Block",
														"src": "4110:54:11",
														"statements": [
															{
																"expression": {
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1738,
																		"name": "tokenClass",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "4124:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 1739,
																			"name": "NFT_CLASS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "4137:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																				"typeString": "type(enum NFT_CLASS)"
																			}
																		},
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4147:6:11",
																		"memberName": "LEGEND",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1600,
																		"src": "4137:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"src": "4124:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"id": 1742,
																"nodeType": "ExpressionStatement",
																"src": "4124:29:11"
															}
														]
													}
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "3854:803:11",
												"trueBody": {
													"id": 1728,
													"nodeType": "Block",
													"src": "3953:52:11",
													"statements": [
														{
															"expression": {
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1723,
																	"name": "tokenClass",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "3967:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1724,
																		"name": "NFT_CLASS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "3980:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																			"typeString": "type(enum NFT_CLASS)"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3990:4:11",
																	"memberName": "HERO",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1599,
																	"src": "3980:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"src": "3967:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"id": 1727,
															"nodeType": "ExpressionStatement",
															"src": "3967:27:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1794,
													"name": "tokenClass",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1712,
													"src": "4674:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"functionReturnParameters": 1713,
												"id": 1795,
												"nodeType": "Return",
												"src": "4667:17:11"
											}
										]
									},
									"functionSelector": "ed944cb6",
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClassForTokenId",
									"nameLocation": "3756:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3783:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3775:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3775:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3774:17:11"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "tokenClass",
												"nameLocation": "3823:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3813:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 1711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1710,
														"name": "NFT_CLASS",
														"nameLocations": [
															"3813:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1604,
														"src": "3813:9:11"
													},
													"referencedDeclaration": 1604,
													"src": "3813:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3812:22:11"
									},
									"scope": 1931,
									"src": "3747:944:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "4790:526:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1805,
														"name": "nftClass",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1800,
														"src": "4813:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1806,
															"name": "NFT_CLASS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "4825:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																"typeString": "type(enum NFT_CLASS)"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4835:4:11",
														"memberName": "HERO",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1599,
														"src": "4825:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														}
													},
													"src": "4813:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1814,
															"name": "nftClass",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "4899:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1815,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "4911:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4921:6:11",
															"memberName": "LEGEND",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1600,
															"src": "4911:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														},
														"src": "4899:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1823,
																"name": "nftClass",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1800,
																"src": "4989:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1824,
																	"name": "NFT_CLASS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "5001:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																		"typeString": "type(enum NFT_CLASS)"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5011:4:11",
																"memberName": "RARE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1601,
																"src": "5001:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"src": "4989:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1832,
																	"name": "nftClass",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "5075:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1833,
																		"name": "NFT_CLASS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "5087:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																			"typeString": "type(enum NFT_CLASS)"
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5097:8:11",
																	"memberName": "UNCOMMON",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1602,
																	"src": "5087:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"src": "5075:30:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	},
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1841,
																		"name": "nftClass",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "5169:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1842,
																			"name": "NFT_CLASS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "5181:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																				"typeString": "type(enum NFT_CLASS)"
																			}
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5191:6:11",
																		"memberName": "COMMON",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1603,
																		"src": "5181:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"src": "5169:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1854,
																	"nodeType": "Block",
																	"src": "5255:54:11",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "496e76616c696420746f6b656e20636c617373",
																						"id": 1851,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5276:21:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18",
																							"typeString": "literal_string \"Invalid token class\""
																						},
																						"value": "Invalid token class"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_201016206e559cd09332d0371a0dbbf13cfd7d62d53a7734dcd777014d06fc18",
																							"typeString": "literal_string \"Invalid token class\""
																						}
																					],
																					"id": 1850,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "5269:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 1852,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5269:29:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 1853,
																			"nodeType": "ExpressionStatement",
																			"src": "5269:29:11"
																		}
																	]
																},
																"id": 1855,
																"nodeType": "IfStatement",
																"src": "5165:144:11",
																"trueBody": {
																	"id": 1849,
																	"nodeType": "Block",
																	"src": "5199:50:11",
																	"statements": [
																		{
																			"expression": {
																				"id": 1847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1845,
																					"name": "tokenClassName",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1803,
																					"src": "5213:14:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "436f6d6d6f6e",
																					"id": 1846,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5230:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3b031f7f29326d3f445a56aaa83a78114c260f1e40af44c50964d9edf6271f4a",
																						"typeString": "literal_string \"Common\""
																					},
																					"value": "Common"
																				},
																				"src": "5213:25:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"id": 1848,
																			"nodeType": "ExpressionStatement",
																			"src": "5213:25:11"
																		}
																	]
																}
															},
															"id": 1856,
															"nodeType": "IfStatement",
															"src": "5071:238:11",
															"trueBody": {
																"id": 1840,
																"nodeType": "Block",
																"src": "5107:52:11",
																"statements": [
																	{
																		"expression": {
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1836,
																				"name": "tokenClassName",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "5121:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "556e636f6d6d6f6e",
																				"id": 1837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5138:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_2a19cece7381d374050418c2bff2b7de5d6ca0adbe97e81c12b0540ace359d20",
																					"typeString": "literal_string \"Uncommon\""
																				},
																				"value": "Uncommon"
																			},
																			"src": "5121:27:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 1839,
																		"nodeType": "ExpressionStatement",
																		"src": "5121:27:11"
																	}
																]
															}
														},
														"id": 1857,
														"nodeType": "IfStatement",
														"src": "4985:324:11",
														"trueBody": {
															"id": 1831,
															"nodeType": "Block",
															"src": "5017:48:11",
															"statements": [
																{
																	"expression": {
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1827,
																			"name": "tokenClassName",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1803,
																			"src": "5031:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "52617265",
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5048:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
																				"typeString": "literal_string \"Rare\""
																			},
																			"value": "Rare"
																		},
																		"src": "5031:23:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"id": 1830,
																	"nodeType": "ExpressionStatement",
																	"src": "5031:23:11"
																}
															]
														}
													},
													"id": 1858,
													"nodeType": "IfStatement",
													"src": "4895:414:11",
													"trueBody": {
														"id": 1822,
														"nodeType": "Block",
														"src": "4929:50:11",
														"statements": [
															{
																"expression": {
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1818,
																		"name": "tokenClassName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "4943:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "4c6567656e64",
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4960:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2a285c025008a50a558ef5409f2e6faeea2a5e5c28298c322a3f15499c775bd4",
																			"typeString": "literal_string \"Legend\""
																		},
																		"value": "Legend"
																	},
																	"src": "4943:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 1821,
																"nodeType": "ExpressionStatement",
																"src": "4943:25:11"
															}
														]
													}
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "4809:500:11",
												"trueBody": {
													"id": 1813,
													"nodeType": "Block",
													"src": "4841:48:11",
													"statements": [
														{
															"expression": {
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1809,
																	"name": "tokenClassName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "4855:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "4865726f",
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4872:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c030c220fcf0c0c0f4226aec63b167a0289c212f50714361c29bbef91576cedf",
																		"typeString": "literal_string \"Hero\""
																	},
																	"value": "Hero"
																},
																"src": "4855:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1812,
															"nodeType": "ExpressionStatement",
															"src": "4855:23:11"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8f5236e5",
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClassName",
									"nameLocation": "4706:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "nftClass",
												"nameLocation": "4729:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "4719:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 1799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1798,
														"name": "NFT_CLASS",
														"nameLocations": [
															"4719:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1604,
														"src": "4719:9:11"
													},
													"referencedDeclaration": 1604,
													"src": "4719:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4718:20:11"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "tokenClassName",
												"nameLocation": "4774:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "4760:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4760:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4759:30:11"
									},
									"scope": 1931,
									"src": "4697:619:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "5411:495:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1869,
														"name": "nftClass",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "5424:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1870,
															"name": "NFT_CLASS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "5436:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																"typeString": "type(enum NFT_CLASS)"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5446:6:11",
														"memberName": "LEGEND",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1600,
														"src": "5436:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														}
													},
													"src": "5424:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1878,
															"name": "nftClass",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "5530:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1879,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "5542:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5552:4:11",
															"memberName": "RARE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1601,
															"src": "5542:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														},
														"src": "5530:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1887,
																"name": "nftClass",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "5632:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1888,
																	"name": "NFT_CLASS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "5644:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																		"typeString": "type(enum NFT_CLASS)"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5654:8:11",
																"memberName": "UNCOMMON",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1602,
																"src": "5644:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"src": "5632:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1896,
																	"name": "nftClass",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "5742:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1897,
																		"name": "NFT_CLASS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "5754:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																			"typeString": "type(enum NFT_CLASS)"
																		}
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5764:6:11",
																	"memberName": "COMMON",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1603,
																	"src": "5754:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"src": "5742:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "496e76616c696420636c617373",
																			"id": 1906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5852:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																				"typeString": "literal_string \"Invalid class\""
																			},
																			"value": "Invalid class"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																				"typeString": "literal_string \"Invalid class\""
																			}
																		],
																		"id": 1905,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "5845:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5845:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1908,
																"nodeType": "ExpressionStatement",
																"src": "5845:23:11"
															},
															"id": 1909,
															"nodeType": "IfStatement",
															"src": "5739:129:11",
															"trueBody": {
																"expression": {
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1900,
																		"name": "classNFTPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "5785:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 1901,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "5801:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5814:16:11",
																		"memberName": "COMMON_NFT_PRICE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1682,
																		"src": "5801:29:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5785:45:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1904,
																"nodeType": "ExpressionStatement",
																"src": "5785:45:11"
															}
														},
														"id": 1910,
														"nodeType": "IfStatement",
														"src": "5629:239:11",
														"trueBody": {
															"expression": {
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1891,
																	"name": "classNFTPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "5677:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1892,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "5693:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5706:18:11",
																	"memberName": "UNCOMMON_NFT_PRICE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5693:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5677:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1895,
															"nodeType": "ExpressionStatement",
															"src": "5677:47:11"
														}
													},
													"id": 1911,
													"nodeType": "IfStatement",
													"src": "5527:341:11",
													"trueBody": {
														"expression": {
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1882,
																"name": "classNFTPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "5571:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"expression": {
																	"id": 1883,
																	"name": "DoAConstants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "5587:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																		"typeString": "type(library DoAConstants)"
																	}
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5600:14:11",
																"memberName": "RARE_NFT_PRICE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1679,
																"src": "5587:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5571:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1886,
														"nodeType": "ExpressionStatement",
														"src": "5571:43:11"
													}
												},
												"id": 1912,
												"nodeType": "IfStatement",
												"src": "5421:447:11",
												"trueBody": {
													"expression": {
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1873,
															"name": "classNFTPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "5467:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 1874,
																"name": "DoAConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "5483:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																	"typeString": "type(library DoAConstants)"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5496:16:11",
															"memberName": "LEGEND_NFT_PRICE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1676,
															"src": "5483:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5467:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1877,
													"nodeType": "ExpressionStatement",
													"src": "5467:45:11"
												}
											},
											{
												"expression": {
													"id": 1913,
													"name": "classNFTPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1867,
													"src": "5886:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1914,
												"nodeType": "Return",
												"src": "5879:20:11"
											}
										]
									},
									"functionSelector": "6e2f5a5f",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClassPrice",
									"nameLocation": "5333:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "nftClass",
												"nameLocation": "5357:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5347:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 1863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1862,
														"name": "NFT_CLASS",
														"nameLocations": [
															"5347:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1604,
														"src": "5347:9:11"
													},
													"referencedDeclaration": 1604,
													"src": "5347:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5346:20:11"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "classNFTPrice",
												"nameLocation": "5396:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5388:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5387:23:11"
									},
									"scope": 1931,
									"src": "5324:582:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "6004:65:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1925,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "6053:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1924,
																"name": "getClassForTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "6034:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "function (uint256) pure returns (enum NFT_CLASS)"
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6034:27:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 1923,
														"name": "getClassName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "6021:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_NFT_CLASS_$1604_$returns$_t_string_memory_ptr_$",
															"typeString": "function (enum NFT_CLASS) pure returns (string memory)"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6021:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1922,
												"id": 1928,
												"nodeType": "Return",
												"src": "6014:48:11"
											}
										]
									},
									"functionSelector": "fd642870",
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testClassForTokenId",
									"nameLocation": "5921:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5949:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5941:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5940:17:11"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "className",
												"nameLocation": "5993:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5979:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5979:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:25:11"
									},
									"scope": 1931,
									"src": "5912:157:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1932,
							"src": "503:5569:11",
							"usedErrors": []
						}
					],
					"src": "32:6040:11"
				},
				"id": 11
			},
			"TokenMinter.sol": {
				"ast": {
					"absolutePath": "TokenMinter.sol",
					"exportedSymbols": {
						"Context": [
							470
						],
						"Counters": [
							544
						],
						"DoAConstants": [
							1931
						],
						"IERC165": [
							731
						],
						"IERC721": [
							390
						],
						"IERC721Enumerable": [
							421
						],
						"IERC721Metadata": [
							448
						],
						"Math": [
							1596
						],
						"NFT_CLASS": [
							1604
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						],
						"ReentrancyGuard": [
							274
						],
						"Strings": [
							719
						],
						"TokenMinter": [
							2768
						],
						"iDoACollection": [
							2921
						],
						"iMemberRegistry": [
							2958
						],
						"iTokenMinter": [
							3015
						],
						"iTreasury": [
							3031
						]
					},
					"id": 2769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1933,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1934,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 221,
							"src": "59:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 275,
							"src": "115:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 113,
							"src": "178:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 1937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 545,
							"src": "231:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 720,
							"src": "284:51:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "iTokenMinter.sol",
							"file": "./iTokenMinter.sol",
							"id": 1939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 3016,
							"src": "337:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DoAConstants.sol",
							"file": "./DoAConstants.sol",
							"id": 1940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 1932,
							"src": "366:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "iDoACollection.sol",
							"file": "./iDoACollection.sol",
							"id": 1941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 2922,
							"src": "395:30:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "iTreasury.sol",
							"file": "./iTreasury.sol",
							"id": 1942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 3032,
							"src": "426:25:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "iMemberRegistry.sol",
							"file": "./iMemberRegistry.sol",
							"id": 1943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2769,
							"sourceUnit": 2959,
							"src": "452:31:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1944,
										"name": "iTokenMinter",
										"nameLocations": [
											"510:12:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3015,
										"src": "510:12:12"
									},
									"id": 1945,
									"nodeType": "InheritanceSpecifier",
									"src": "510:12:12"
								},
								{
									"baseName": {
										"id": 1946,
										"name": "Ownable",
										"nameLocations": [
											"524:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "524:7:12"
									},
									"id": 1947,
									"nodeType": "InheritanceSpecifier",
									"src": "524:7:12"
								},
								{
									"baseName": {
										"id": 1948,
										"name": "Pausable",
										"nameLocations": [
											"533:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "533:8:12"
									},
									"id": 1949,
									"nodeType": "InheritanceSpecifier",
									"src": "533:8:12"
								},
								{
									"baseName": {
										"id": 1950,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"543:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 274,
										"src": "543:15:12"
									},
									"id": 1951,
									"nodeType": "InheritanceSpecifier",
									"src": "543:15:12"
								}
							],
							"canonicalName": "TokenMinter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2768,
							"linearizedBaseContracts": [
								2768,
								274,
								220,
								112,
								470,
								3015
							],
							"name": "TokenMinter",
							"nameLocation": "495:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1955,
									"libraryName": {
										"id": 1952,
										"name": "Counters",
										"nameLocations": [
											"571:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 544,
										"src": "571:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "565:36:12",
									"typeName": {
										"id": 1954,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1953,
											"name": "Counters.Counter",
											"nameLocations": [
												"584:8:12",
												"593:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 476,
											"src": "584:16:12"
										},
										"referencedDeclaration": 476,
										"src": "584:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1958,
									"mutability": "mutable",
									"name": "_doaCollection",
									"nameLocation": "830:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "807:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_iDoACollection_$2921",
										"typeString": "contract iDoACollection"
									},
									"typeName": {
										"id": 1957,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1956,
											"name": "iDoACollection",
											"nameLocations": [
												"807:14:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2921,
											"src": "807:14:12"
										},
										"referencedDeclaration": 2921,
										"src": "807:14:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_iDoACollection_$2921",
											"typeString": "contract iDoACollection"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1961,
									"mutability": "mutable",
									"name": "_treasury",
									"nameLocation": "868:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "850:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_iTreasury_$3031",
										"typeString": "contract iTreasury"
									},
									"typeName": {
										"id": 1960,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1959,
											"name": "iTreasury",
											"nameLocations": [
												"850:9:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3031,
											"src": "850:9:12"
										},
										"referencedDeclaration": 3031,
										"src": "850:9:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_iTreasury_$3031",
											"typeString": "contract iTreasury"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1964,
									"mutability": "mutable",
									"name": "_memberRegistry",
									"nameLocation": "907:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "883:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_iMemberRegistry_$2958",
										"typeString": "contract iMemberRegistry"
									},
									"typeName": {
										"id": 1963,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1962,
											"name": "iMemberRegistry",
											"nameLocations": [
												"883:15:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2958,
											"src": "883:15:12"
										},
										"referencedDeclaration": 2958,
										"src": "883:15:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_iMemberRegistry_$2958",
											"typeString": "contract iMemberRegistry"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1968,
									"mutability": "mutable",
									"name": "_authorizedContracts",
									"nameLocation": "962:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "929:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1967,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1965,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "937:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "929:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1966,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "948:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "087bd107",
									"id": 1971,
									"mutability": "mutable",
									"name": "_heroNFTsMinted",
									"nameLocation": "1076:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1052:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$476_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1970,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1969,
											"name": "Counters.Counter",
											"nameLocations": [
												"1052:8:12",
												"1061:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 476,
											"src": "1052:16:12"
										},
										"referencedDeclaration": 476,
										"src": "1052:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1592fb2a",
									"id": 1974,
									"mutability": "mutable",
									"name": "_legendNFTsMinted",
									"nameLocation": "1121:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1097:41:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$476_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1973,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1972,
											"name": "Counters.Counter",
											"nameLocations": [
												"1097:8:12",
												"1106:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 476,
											"src": "1097:16:12"
										},
										"referencedDeclaration": 476,
										"src": "1097:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a149127",
									"id": 1977,
									"mutability": "mutable",
									"name": "_rareNFTsMinted",
									"nameLocation": "1168:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1144:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$476_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1976,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1975,
											"name": "Counters.Counter",
											"nameLocations": [
												"1144:8:12",
												"1153:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 476,
											"src": "1144:16:12"
										},
										"referencedDeclaration": 476,
										"src": "1144:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9f158a78",
									"id": 1980,
									"mutability": "mutable",
									"name": "_uncommonNFTsMinted",
									"nameLocation": "1213:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1189:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$476_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1979,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1978,
											"name": "Counters.Counter",
											"nameLocations": [
												"1189:8:12",
												"1198:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 476,
											"src": "1189:16:12"
										},
										"referencedDeclaration": 476,
										"src": "1189:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6f785cdf",
									"id": 1983,
									"mutability": "mutable",
									"name": "_commonNFTsMinted",
									"nameLocation": "1262:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1238:41:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$476_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1982,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1981,
											"name": "Counters.Counter",
											"nameLocations": [
												"1238:8:12",
												"1247:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 476,
											"src": "1238:16:12"
										},
										"referencedDeclaration": 476,
										"src": "1238:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$476_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8d4fc60",
									"id": 1985,
									"mutability": "mutable",
									"name": "_areHerosMinted",
									"nameLocation": "1321:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1309:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1984,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1309:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "953a6ca8",
									"id": 1987,
									"mutability": "mutable",
									"name": "_is1stPublicRoundUnlocked",
									"nameLocation": "1354:25:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1342:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1986,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1342:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f2c5d797",
									"id": 1989,
									"mutability": "mutable",
									"name": "_is2ndPublicRoundUnlocked",
									"nameLocation": "1397:25:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1385:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1988,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1385:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5eee43f0",
									"id": 1991,
									"mutability": "mutable",
									"name": "_is3rdPublicRoundUnlocked",
									"nameLocation": "1440:25:12",
									"nodeType": "VariableDeclaration",
									"scope": 2768,
									"src": "1428:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1990,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1428:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2025,
										"nodeType": "Block",
										"src": "2355:269:12",
										"statements": [
											{
												"expression": {
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2000,
														"name": "_doaCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "2365:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_iDoACollection_$2921",
															"typeString": "contract iDoACollection"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2002,
																"name": "doaCollectionAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "2397:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2001,
															"name": "iDoACollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2921,
															"src": "2382:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_iDoACollection_$2921_$",
																"typeString": "type(contract iDoACollection)"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2382:36:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_iDoACollection_$2921",
															"typeString": "contract iDoACollection"
														}
													},
													"src": "2365:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_iDoACollection_$2921",
														"typeString": "contract iDoACollection"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "2365:53:12"
											},
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2006,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "2428:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_iTreasury_$3031",
															"typeString": "contract iTreasury"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2008,
																"name": "treasuryAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "2450:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2007,
															"name": "iTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3031,
															"src": "2440:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_iTreasury_$3031_$",
																"typeString": "type(contract iTreasury)"
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2440:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_iTreasury_$3031",
															"typeString": "contract iTreasury"
														}
													},
													"src": "2428:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_iTreasury_$3031",
														"typeString": "contract iTreasury"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "2428:38:12"
											},
											{
												"expression": {
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2012,
														"name": "_memberRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "2476:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_iMemberRegistry_$2958",
															"typeString": "contract iMemberRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2014,
																"name": "memberRegistryAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "2510:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2013,
															"name": "iMemberRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2958,
															"src": "2494:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_iMemberRegistry_$2958_$",
																"typeString": "type(contract iMemberRegistry)"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2494:38:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_iMemberRegistry_$2958",
															"typeString": "contract iMemberRegistry"
														}
													},
													"src": "2476:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_iMemberRegistry_$2958",
														"typeString": "contract iMemberRegistry"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "2476:56:12"
											},
											{
												"expression": {
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2018,
															"name": "_authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "2543:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2021,
														"indexExpression": {
															"expression": {
																"id": 2019,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2564:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2568:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2564:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2543:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2578:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2543:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2024,
												"nodeType": "ExpressionStatement",
												"src": "2543:39:12"
											}
										]
									},
									"id": 2026,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "doaCollectionAddress",
												"nameLocation": "2276:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "2268:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "treasuryAddress",
												"nameLocation": "2306:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "2298:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "memberRegistryAddress",
												"nameLocation": "2331:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "2323:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:86:12"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:12"
									},
									"scope": 2768,
									"src": "2256:368:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "2704:61:12",
										"statements": [
											{
												"expression": {
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2033,
															"name": "_authorizedContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "2714:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2035,
														"indexExpression": {
															"id": 2034,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "2735:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2714:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2754:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2714:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2038,
												"nodeType": "ExpressionStatement",
												"src": "2714:44:12"
											}
										]
									},
									"functionSelector": "98eaa4a7",
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2031,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2030,
												"name": "onlyOwner",
												"nameLocations": [
													"2694:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2694:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2694:9:12"
										}
									],
									"name": "addAuthorizedContract",
									"nameLocation": "2640:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "2670:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "2662:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2661:25:12"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2704:0:12"
									},
									"scope": 2768,
									"src": "2631:134:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "3011:25:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2045,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "3021:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3021:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "3021:8:12"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2043,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2042,
												"name": "onlyOwner",
												"nameLocations": [
													"3001:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3001:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3001:9:12"
										}
									],
									"name": "pause",
									"nameLocation": "2986:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2991:2:12"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3011:0:12"
									},
									"scope": 2768,
									"src": "2977:59:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "3078:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2054,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "3088:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "3088:10:12"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2052,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2051,
												"name": "onlyOwner",
												"nameLocations": [
													"3068:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3068:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3068:9:12"
										}
									],
									"name": "unpause",
									"nameLocation": "3051:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3058:2:12"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3078:0:12"
									},
									"scope": 2768,
									"src": "3042:63:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "3392:232:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2066,
																"name": "_authorizedContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "3410:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2069,
															"indexExpression": {
																"expression": {
																	"id": 2067,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3431:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3435:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3431:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3410:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2041757468",
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3444:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f",
																"typeString": "literal_string \"No Auth\""
															},
															"value": "No Auth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f",
																"typeString": "literal_string \"No Auth\""
															}
														],
														"id": 2065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3402:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3402:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "3402:52:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3472:26:12",
															"subExpression": {
																"id": 2074,
																"name": "_is1stPublicRoundUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1987,
																"src": "3473:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920756e6c6f636b6564",
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3500:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702",
																"typeString": "literal_string \"Already unlocked\""
															},
															"value": "Already unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702",
																"typeString": "literal_string \"Already unlocked\""
															}
														],
														"id": 2073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3464:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3464:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "3464:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2080,
															"name": "_areHerosMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "3538:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865726f73206e6f74206d696e746564",
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3555:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																"typeString": "literal_string \"Heros not minted\""
															},
															"value": "Heros not minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																"typeString": "literal_string \"Heros not minted\""
															}
														],
														"id": 2079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3530:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3530:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "3530:44:12"
											},
											{
												"expression": {
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2084,
														"name": "_is1stPublicRoundUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "3585:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3613:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3585:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "3585:32:12"
											}
										]
									},
									"functionSelector": "7e7f57f2",
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2061,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2060,
												"name": "whenNotPaused",
												"nameLocations": [
													"3365:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3365:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3365:13:12"
										},
										{
											"id": 2063,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2062,
												"name": "nonReentrant",
												"nameLocations": [
													"3379:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "3379:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3379:12:12"
										}
									],
									"name": "unlock1stPublicRound",
									"nameLocation": "3332:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3352:2:12"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3392:0:12"
									},
									"scope": 2768,
									"src": "3323:301:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "3700:905:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2097,
																"name": "_authorizedContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "3718:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2100,
															"indexExpression": {
																"expression": {
																	"id": 2098,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3739:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3743:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3739:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3718:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2041757468",
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3752:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f",
																"typeString": "literal_string \"No Auth\""
															},
															"value": "No Auth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f",
																"typeString": "literal_string \"No Auth\""
															}
														],
														"id": 2096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3710:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3710:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "3710:52:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3780:26:12",
															"subExpression": {
																"id": 2105,
																"name": "_is2ndPublicRoundUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "3781:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920756e6c6f636b6564",
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702",
																"typeString": "literal_string \"Already unlocked\""
															},
															"value": "Already unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_843d29d711540db75fcc0916ab47ef48781106828208ea9ea5df6f88d24ae702",
																"typeString": "literal_string \"Already unlocked\""
															}
														],
														"id": 2104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3772:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "3772:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2111,
															"name": "_areHerosMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "3897:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865726f73206e6f74206d696e746564",
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3914:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																"typeString": "literal_string \"Heros not minted\""
															},
															"value": "Heros not minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																"typeString": "literal_string \"Heros not minted\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3889:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2114,
												"nodeType": "ExpressionStatement",
												"src": "3889:44:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2116,
																"name": "_is1stPublicRoundUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1987,
																"src": "3951:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2119,
																					"name": "_legendNFTsMinted",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1974,
																					"src": "3987:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$476_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 2120,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4005:7:12",
																				"memberName": "current",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 488,
																				"src": "3987:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$476_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																				}
																			},
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3987:27:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3980:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2117,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "3980:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3980:35:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2123,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "4018:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4031:21:12",
																	"memberName": "LEGEND_NFT_SUPPLY_1st",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1610,
																	"src": "4018:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "3980:72:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3951:101:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6d696e746564206c6567656e6473",
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4054:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c",
																"typeString": "literal_string \"Unminted legends\""
															},
															"value": "Unminted legends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8c5240cf5891aec4942f354d991ea8efe9e88c535b735752383a2cd6893688c",
																"typeString": "literal_string \"Unminted legends\""
															}
														],
														"id": 2115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3943:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:130:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "3943:130:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2131,
																"name": "_is1stPublicRoundUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1987,
																"src": "4091:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2134,
																					"name": "_rareNFTsMinted",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1977,
																					"src": "4127:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$476_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 2135,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4143:7:12",
																				"memberName": "current",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 488,
																				"src": "4127:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$476_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																				}
																			},
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4127:25:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4120:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2132,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "4120:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4120:33:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2138,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "4156:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4169:19:12",
																	"memberName": "RARE_NFT_SUPPLY_1st",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1613,
																	"src": "4156:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4120:68:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4091:97:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6d696e746564207261726573",
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4190:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23",
																"typeString": "literal_string \"Unminted rares\""
															},
															"value": "Unminted rares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8591812ca0d56d3f4445a4fbc55b6bdb370bc7e93472fdaa8918eefcd91acf23",
																"typeString": "literal_string \"Unminted rares\""
															}
														],
														"id": 2130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4083:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:124:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "4083:124:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2146,
																"name": "_is1stPublicRoundUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1987,
																"src": "4225:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2149,
																					"name": "_uncommonNFTsMinted",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1980,
																					"src": "4261:19:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$476_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 2150,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4281:7:12",
																				"memberName": "current",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 488,
																				"src": "4261:27:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$476_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																				}
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4261:29:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4254:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2147,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "4254:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4254:37:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2153,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "4294:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4307:23:12",
																	"memberName": "UNCOMMON_NFT_SUPPLY_1st",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1616,
																	"src": "4294:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4254:76:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4225:105:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6d696e74656420756e636f6d6d6f6e73",
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4332:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6",
																"typeString": "literal_string \"Unminted uncommons\""
															},
															"value": "Unminted uncommons"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ee0b57a16b82c5febc8850c95421f130fef7dbd63e1230c62bd51beeba77cd6",
																"typeString": "literal_string \"Unminted uncommons\""
															}
														],
														"id": 2145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4217:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4217:136:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "4217:136:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2161,
																"name": "_is1stPublicRoundUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1987,
																"src": "4371:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2164,
																					"name": "_commonNFTsMinted",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "4407:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$476_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 2165,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4425:7:12",
																				"memberName": "current",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 488,
																				"src": "4407:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$476_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																				}
																			},
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4407:27:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4400:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2162,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "4400:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4400:35:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 2168,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "4437:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4450:21:12",
																	"memberName": "COMMON_NFT_SUPPLY_1st",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1619,
																	"src": "4437:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4400:71:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4371:100:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6d696e74656420636f6d6d6f6e73",
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4473:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d",
																"typeString": "literal_string \"Unminted commons\""
															},
															"value": "Unminted commons"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af79f95bd4334974c6f77ff640e578dba09a37e5f1f1fb421d5565b9ec9e362d",
																"typeString": "literal_string \"Unminted commons\""
															}
														],
														"id": 2160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4363:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4363:129:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "4363:129:12"
											},
											{
												"expression": {
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2175,
														"name": "_is2ndPublicRoundUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "4503:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4531:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4503:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "4503:32:12"
											},
											{
												"expression": {
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2179,
														"name": "_is1stPublicRoundUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "4545:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4573:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4545:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2182,
												"nodeType": "ExpressionStatement",
												"src": "4545:33:12"
											}
										]
									},
									"functionSelector": "28d3bd1b",
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2091,
												"name": "whenNotPaused",
												"nameLocations": [
													"3673:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3673:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3673:13:12"
										},
										{
											"id": 2094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2093,
												"name": "nonReentrant",
												"nameLocations": [
													"3687:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "3687:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3687:12:12"
										}
									],
									"name": "unlock2ndPublicRound",
									"nameLocation": "3640:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3660:2:12"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3700:0:12"
									},
									"scope": 2768,
									"src": "3631:974:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2966
									],
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "4703:316:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2194,
																"name": "_authorizedContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "4721:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2197,
															"indexExpression": {
																"expression": {
																	"id": 2195,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4742:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4746:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4742:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4721:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2041757468",
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4755:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f",
																"typeString": "literal_string \"No Auth\""
															},
															"value": "No Auth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b67f792ae2cc809634a48911fdf2bfe86ac3c93e9c23fdefa1c711f1c8e5c5f",
																"typeString": "literal_string \"No Auth\""
															}
														],
														"id": 2193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4713:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4713:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2200,
												"nodeType": "ExpressionStatement",
												"src": "4713:52:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4783:16:12",
															"subExpression": {
																"id": 2202,
																"name": "_areHerosMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "4784:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479206d696e746564",
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4801:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
																"typeString": "literal_string \"Already minted\""
															},
															"value": "Already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
																"typeString": "literal_string \"Already minted\""
															}
														],
														"id": 2201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4775:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4775:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2206,
												"nodeType": "ExpressionStatement",
												"src": "4775:43:12"
											},
											{
												"assignments": [
													2208
												],
												"declarations": [
													{
														"constant": false,
														"id": 2208,
														"mutability": "mutable",
														"name": "numMinted",
														"nameLocation": "4837:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 2226,
														"src": "4829:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4829:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2216,
												"initialValue": {
													"arguments": [
														{
															"id": 2210,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "4859:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2211,
																"name": "DoAConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "4867:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																	"typeString": "type(library DoAConstants)"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4880:19:12",
															"memberName": "HERO_NFT_SUPPLY_1st",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "4867:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"expression": {
																"id": 2213,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "4901:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4911:4:12",
															"memberName": "HERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1599,
															"src": "4901:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2209,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "4849:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4849:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4829:87:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2217,
														"name": "numMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "4930:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2218,
															"name": "DoAConstants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "4943:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																"typeString": "type(library DoAConstants)"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4956:19:12",
														"memberName": "HERO_NFT_SUPPLY_1st",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1607,
														"src": "4943:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "4930:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2225,
												"nodeType": "IfStatement",
												"src": "4927:84:12",
												"trueBody": {
													"expression": {
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2221,
															"name": "_areHerosMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "4989:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "74727565",
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5007:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "4989:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2224,
													"nodeType": "ExpressionStatement",
													"src": "4989:22:12"
												}
											}
										]
									},
									"functionSelector": "329cc83f",
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2189,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2188,
												"name": "whenNotPaused",
												"nameLocations": [
													"4676:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4676:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4676:13:12"
										},
										{
											"id": 2191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2190,
												"name": "nonReentrant",
												"nameLocations": [
													"4690:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "4690:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4690:12:12"
										}
									],
									"name": "mintHeros",
									"nameLocation": "4640:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "4658:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "4650:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4650:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:16:12"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4703:0:12"
									},
									"scope": 2768,
									"src": "4631:388:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2523,
										"nodeType": "Block",
										"src": "5176:3178:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2242,
																"name": "numToMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "5194:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5206:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5194:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e756d546f4d696e742030",
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5209:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea",
																"typeString": "literal_string \"numToMint 0\""
															},
															"value": "numToMint 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d7bc406e1be3cc0e575b368f0ef71ce92d3ee06b778eb3e119d08d16b29d8ea",
																"typeString": "literal_string \"numToMint 0\""
															}
														],
														"id": 2241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5186:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5186:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2247,
												"nodeType": "ExpressionStatement",
												"src": "5186:37:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2249,
															"name": "_areHerosMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "5241:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865726f73206e6f74206d696e746564",
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5258:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																"typeString": "literal_string \"Heros not minted\""
															},
															"value": "Heros not minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																"typeString": "literal_string \"Heros not minted\""
															}
														],
														"id": 2248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5233:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "5233:44:12"
											},
											{
												"assignments": [
													2254
												],
												"declarations": [
													{
														"constant": false,
														"id": 2254,
														"mutability": "mutable",
														"name": "currentCount",
														"nameLocation": "5295:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2523,
														"src": "5288:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2253,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "5288:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2255,
												"nodeType": "VariableDeclarationStatement",
												"src": "5288:19:12"
											},
											{
												"assignments": [
													2257
												],
												"declarations": [
													{
														"constant": false,
														"id": 2257,
														"mutability": "mutable",
														"name": "futureCount",
														"nameLocation": "5324:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2523,
														"src": "5317:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2256,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "5317:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2258,
												"nodeType": "VariableDeclarationStatement",
												"src": "5317:18:12"
											},
											{
												"assignments": [
													2260
												],
												"declarations": [
													{
														"constant": false,
														"id": 2260,
														"mutability": "mutable",
														"name": "classNFTSupply_1st",
														"nameLocation": "5353:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 2523,
														"src": "5345:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5345:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2261,
												"nodeType": "VariableDeclarationStatement",
												"src": "5345:26:12"
											},
											{
												"assignments": [
													2263
												],
												"declarations": [
													{
														"constant": false,
														"id": 2263,
														"mutability": "mutable",
														"name": "classNFTSupply_2nd",
														"nameLocation": "5389:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 2523,
														"src": "5381:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5381:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2264,
												"nodeType": "VariableDeclarationStatement",
												"src": "5381:26:12"
											},
											{
												"assignments": [
													2266
												],
												"declarations": [
													{
														"constant": false,
														"id": 2266,
														"mutability": "mutable",
														"name": "classNFTSupply_3rd",
														"nameLocation": "5425:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 2523,
														"src": "5417:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5417:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2267,
												"nodeType": "VariableDeclarationStatement",
												"src": "5417:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2268,
														"name": "classToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "5505:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2269,
															"name": "NFT_CLASS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "5520:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																"typeString": "type(enum NFT_CLASS)"
															}
														},
														"id": 2270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5530:6:12",
														"memberName": "LEGEND",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1600,
														"src": "5520:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														}
													},
													"src": "5505:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
															"typeString": "enum NFT_CLASS"
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2322,
															"name": "classToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "6090:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2323,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "6105:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6115:4:12",
															"memberName": "RARE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1601,
															"src": "6105:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														},
														"src": "6090:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															},
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2376,
																"name": "classToMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2232,
																"src": "6661:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2377,
																	"name": "NFT_CLASS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "6676:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																		"typeString": "type(enum NFT_CLASS)"
																	}
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6686:8:12",
																"memberName": "UNCOMMON",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1602,
																"src": "6676:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																}
															},
															"src": "6661:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2430,
																	"name": "classToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "7260:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2431,
																		"name": "NFT_CLASS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "7275:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																			"typeString": "type(enum NFT_CLASS)"
																		}
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7285:6:12",
																	"memberName": "COMMON",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1603,
																	"src": "7275:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"src": "7260:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "496e76616c696420636c617373",
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7867:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																				"typeString": "literal_string \"Invalid class\""
																			},
																			"value": "Invalid class"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																				"typeString": "literal_string \"Invalid class\""
																			}
																		],
																		"id": 2484,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "7860:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7860:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2487,
																"nodeType": "ExpressionStatement",
																"src": "7860:23:12"
															},
															"id": 2488,
															"nodeType": "IfStatement",
															"src": "7257:626:12",
															"trueBody": {
																"id": 2483,
																"nodeType": "Block",
																"src": "7293:552:12",
																"statements": [
																	{
																		"expression": {
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2434,
																				"name": "currentCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2254,
																				"src": "7311:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"id": 2437,
																								"name": "_commonNFTsMinted",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1983,
																								"src": "7333:17:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Counter_$476_storage",
																									"typeString": "struct Counters.Counter storage ref"
																								}
																							},
																							"id": 2438,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7351:7:12",
																							"memberName": "current",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 488,
																							"src": "7333:25:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$476_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																								"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																							}
																						},
																						"id": 2439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7333:27:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7326:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint16_$",
																						"typeString": "type(uint16)"
																					},
																					"typeName": {
																						"id": 2435,
																						"name": "uint16",
																						"nodeType": "ElementaryTypeName",
																						"src": "7326:6:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7326:35:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "7311:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"id": 2442,
																		"nodeType": "ExpressionStatement",
																		"src": "7311:50:12"
																	},
																	{
																		"expression": {
																			"id": 2450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2443,
																				"name": "futureCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2257,
																				"src": "7379:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 2449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2444,
																					"name": "currentCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2254,
																					"src": "7393:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 2447,
																							"name": "numToMint",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2229,
																							"src": "7415:9:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7408:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint16_$",
																							"typeString": "type(uint16)"
																						},
																						"typeName": {
																							"id": 2445,
																							"name": "uint16",
																							"nodeType": "ElementaryTypeName",
																							"src": "7408:6:12",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2448,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7408:17:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "7393:32:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "7379:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"id": 2451,
																		"nodeType": "ExpressionStatement",
																		"src": "7379:46:12"
																	},
																	{
																		"expression": {
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2452,
																				"name": "classNFTSupply_1st",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2260,
																				"src": "7444:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2453,
																					"name": "DoAConstants",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "7465:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																						"typeString": "type(library DoAConstants)"
																					}
																				},
																				"id": 2454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "7478:21:12",
																				"memberName": "COMMON_NFT_SUPPLY_1st",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1619,
																				"src": "7465:34:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "7444:55:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2456,
																		"nodeType": "ExpressionStatement",
																		"src": "7444:55:12"
																	},
																	{
																		"expression": {
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2457,
																				"name": "classNFTSupply_2nd",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2263,
																				"src": "7517:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2458,
																					"name": "DoAConstants",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "7538:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																						"typeString": "type(library DoAConstants)"
																					}
																				},
																				"id": 2459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "7551:21:12",
																				"memberName": "COMMON_NFT_SUPPLY_2nd",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1634,
																				"src": "7538:34:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "7517:55:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2461,
																		"nodeType": "ExpressionStatement",
																		"src": "7517:55:12"
																	},
																	{
																		"expression": {
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2462,
																				"name": "classNFTSupply_3rd",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2266,
																				"src": "7590:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2463,
																					"name": "DoAConstants",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "7611:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																						"typeString": "type(library DoAConstants)"
																					}
																				},
																				"id": 2464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "7624:21:12",
																				"memberName": "COMMON_NFT_SUPPLY_3rd",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1649,
																				"src": "7611:34:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "7590:55:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2466,
																		"nodeType": "ExpressionStatement",
																		"src": "7590:55:12"
																	},
																	{
																		"expression": {
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2467,
																				"name": "mintStartIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2237,
																				"src": "7664:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 2471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2468,
																						"name": "DoAConstants",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1931,
																						"src": "7681:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																							"typeString": "type(library DoAConstants)"
																						}
																					},
																					"id": 2469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "7694:22:12",
																					"memberName": "COMMON_NFT_START_INDEX",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1673,
																					"src": "7681:35:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2470,
																					"name": "currentCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2254,
																					"src": "7719:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "7681:50:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "7664:67:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2473,
																		"nodeType": "ExpressionStatement",
																		"src": "7664:67:12"
																	},
																	{
																		"expression": {
																			"id": 2481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2474,
																				"name": "mintEndIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2239,
																				"src": "7749:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 2480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 2478,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2475,
																							"name": "DoAConstants",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1931,
																							"src": "7764:12:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																								"typeString": "type(library DoAConstants)"
																							}
																						},
																						"id": 2476,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "7777:22:12",
																						"memberName": "COMMON_NFT_START_INDEX",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1673,
																						"src": "7764:35:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 2477,
																						"name": "futureCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2257,
																						"src": "7802:11:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					"src": "7764:49:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2479,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7816:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7764:53:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "7749:68:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2482,
																		"nodeType": "ExpressionStatement",
																		"src": "7749:68:12"
																	}
																]
															}
														},
														"id": 2489,
														"nodeType": "IfStatement",
														"src": "6658:1225:12",
														"trueBody": {
															"id": 2429,
															"nodeType": "Block",
															"src": "6696:547:12",
															"statements": [
																{
																	"expression": {
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2380,
																			"name": "currentCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "6714:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 2383,
																							"name": "_uncommonNFTsMinted",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1980,
																							"src": "6736:19:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Counter_$476_storage",
																								"typeString": "struct Counters.Counter storage ref"
																							}
																						},
																						"id": 2384,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6756:7:12",
																						"memberName": "current",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 488,
																						"src": "6736:27:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$476_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																							"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																						}
																					},
																					"id": 2385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6736:29:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6729:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint16_$",
																					"typeString": "type(uint16)"
																				},
																				"typeName": {
																					"id": 2381,
																					"name": "uint16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6729:6:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6729:37:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "6714:52:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"id": 2388,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:52:12"
																},
																{
																	"expression": {
																		"id": 2396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2389,
																			"name": "futureCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "6784:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2390,
																				"name": "currentCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2254,
																				"src": "6798:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2393,
																						"name": "numToMint",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2229,
																						"src": "6820:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2392,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6813:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint16_$",
																						"typeString": "type(uint16)"
																					},
																					"typeName": {
																						"id": 2391,
																						"name": "uint16",
																						"nodeType": "ElementaryTypeName",
																						"src": "6813:6:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6813:17:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "6798:32:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "6784:46:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"id": 2397,
																	"nodeType": "ExpressionStatement",
																	"src": "6784:46:12"
																},
																{
																	"expression": {
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2398,
																			"name": "classNFTSupply_1st",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2260,
																			"src": "6849:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 2399,
																				"name": "DoAConstants",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1931,
																				"src": "6870:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																					"typeString": "type(library DoAConstants)"
																				}
																			},
																			"id": 2400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6883:23:12",
																			"memberName": "UNCOMMON_NFT_SUPPLY_1st",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1616,
																			"src": "6870:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "6849:57:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2402,
																	"nodeType": "ExpressionStatement",
																	"src": "6849:57:12"
																},
																{
																	"expression": {
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2403,
																			"name": "classNFTSupply_2nd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "6924:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 2404,
																				"name": "DoAConstants",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1931,
																				"src": "6945:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																					"typeString": "type(library DoAConstants)"
																				}
																			},
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6958:23:12",
																			"memberName": "UNCOMMON_NFT_SUPPLY_2nd",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1631,
																			"src": "6945:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "6924:57:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2407,
																	"nodeType": "ExpressionStatement",
																	"src": "6924:57:12"
																},
																{
																	"expression": {
																		"id": 2411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "classNFTSupply_3rd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2266,
																			"src": "6999:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 2409,
																				"name": "DoAConstants",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1931,
																				"src": "7020:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																					"typeString": "type(library DoAConstants)"
																				}
																			},
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7033:23:12",
																			"memberName": "UNCOMMON_NFT_SUPPLY_3rd",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1646,
																			"src": "7020:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "6999:57:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2412,
																	"nodeType": "ExpressionStatement",
																	"src": "6999:57:12"
																},
																{
																	"expression": {
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2413,
																			"name": "mintStartIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "7075:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2414,
																					"name": "DoAConstants",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "7092:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																						"typeString": "type(library DoAConstants)"
																					}
																				},
																				"id": 2415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "7105:24:12",
																				"memberName": "UNCOMMON_NFT_START_INDEX",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1670,
																				"src": "7092:37:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2416,
																				"name": "currentCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2254,
																				"src": "7132:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "7092:52:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "7075:69:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2419,
																	"nodeType": "ExpressionStatement",
																	"src": "7075:69:12"
																},
																{
																	"expression": {
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2420,
																			"name": "mintEndIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "7162:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 2424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2421,
																						"name": "DoAConstants",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1931,
																						"src": "7177:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																							"typeString": "type(library DoAConstants)"
																						}
																					},
																					"id": 2422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "7190:24:12",
																					"memberName": "UNCOMMON_NFT_START_INDEX",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1670,
																					"src": "7177:37:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2423,
																					"name": "futureCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2257,
																					"src": "7217:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "7177:51:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7231:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7177:55:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "7162:70:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2428,
																	"nodeType": "ExpressionStatement",
																	"src": "7162:70:12"
																}
															]
														}
													},
													"id": 2490,
													"nodeType": "IfStatement",
													"src": "6087:1796:12",
													"trueBody": {
														"id": 2375,
														"nodeType": "Block",
														"src": "6121:523:12",
														"statements": [
															{
																"expression": {
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2326,
																		"name": "currentCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2254,
																		"src": "6139:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2329,
																						"name": "_rareNFTsMinted",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1977,
																						"src": "6161:15:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Counter_$476_storage",
																							"typeString": "struct Counters.Counter storage ref"
																						}
																					},
																					"id": 2330,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6177:7:12",
																					"memberName": "current",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 488,
																					"src": "6161:23:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$476_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																						"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																					}
																				},
																				"id": 2331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6161:25:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6154:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 2327,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "6154:6:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6154:33:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "6139:48:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"id": 2334,
																"nodeType": "ExpressionStatement",
																"src": "6139:48:12"
															},
															{
																"expression": {
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2335,
																		"name": "futureCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "6205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2336,
																			"name": "currentCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "6219:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2339,
																					"name": "numToMint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2229,
																					"src": "6241:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6234:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint16_$",
																					"typeString": "type(uint16)"
																				},
																				"typeName": {
																					"id": 2337,
																					"name": "uint16",
																					"nodeType": "ElementaryTypeName",
																					"src": "6234:6:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6234:17:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "6219:32:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "6205:46:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"id": 2343,
																"nodeType": "ExpressionStatement",
																"src": "6205:46:12"
															},
															{
																"expression": {
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2344,
																		"name": "classNFTSupply_1st",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "6270:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 2345,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "6291:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 2346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6304:19:12",
																		"memberName": "RARE_NFT_SUPPLY_1st",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1613,
																		"src": "6291:32:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "6270:53:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2348,
																"nodeType": "ExpressionStatement",
																"src": "6270:53:12"
															},
															{
																"expression": {
																	"id": 2352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2349,
																		"name": "classNFTSupply_2nd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2263,
																		"src": "6341:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 2350,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "6362:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6375:19:12",
																		"memberName": "RARE_NFT_SUPPLY_2nd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1628,
																		"src": "6362:32:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "6341:53:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2353,
																"nodeType": "ExpressionStatement",
																"src": "6341:53:12"
															},
															{
																"expression": {
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2354,
																		"name": "classNFTSupply_3rd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2266,
																		"src": "6412:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 2355,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "6433:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6446:19:12",
																		"memberName": "RARE_NFT_SUPPLY_3rd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1643,
																		"src": "6433:32:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "6412:53:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2358,
																"nodeType": "ExpressionStatement",
																"src": "6412:53:12"
															},
															{
																"expression": {
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2359,
																		"name": "mintStartIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2237,
																		"src": "6484:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2360,
																				"name": "DoAConstants",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1931,
																				"src": "6501:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																					"typeString": "type(library DoAConstants)"
																				}
																			},
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6514:20:12",
																			"memberName": "RARE_NFT_START_INDEX",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1667,
																			"src": "6501:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 2362,
																			"name": "currentCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "6537:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "6501:48:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "6484:65:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2365,
																"nodeType": "ExpressionStatement",
																"src": "6484:65:12"
															},
															{
																"expression": {
																	"id": 2373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2366,
																		"name": "mintEndIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2239,
																		"src": "6567:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2367,
																					"name": "DoAConstants",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "6582:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																						"typeString": "type(library DoAConstants)"
																					}
																				},
																				"id": 2368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "6595:20:12",
																				"memberName": "RARE_NFT_START_INDEX",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1667,
																				"src": "6582:33:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2369,
																				"name": "futureCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2257,
																				"src": "6618:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "6582:47:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6632:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6582:51:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "6567:66:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2374,
																"nodeType": "ExpressionStatement",
																"src": "6567:66:12"
															}
														]
													}
												},
												"id": 2491,
												"nodeType": "IfStatement",
												"src": "5502:2381:12",
												"trueBody": {
													"id": 2321,
													"nodeType": "Block",
													"src": "5538:535:12",
													"statements": [
														{
															"expression": {
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2272,
																	"name": "currentCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "5556:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2275,
																					"name": "_legendNFTsMinted",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1974,
																					"src": "5578:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$476_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5596:7:12",
																				"memberName": "current",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 488,
																				"src": "5578:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$476_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																				}
																			},
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5578:27:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5571:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2273,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "5571:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5571:35:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5556:50:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2280,
															"nodeType": "ExpressionStatement",
															"src": "5556:50:12"
														},
														{
															"expression": {
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2281,
																	"name": "futureCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "5624:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2282,
																		"name": "currentCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2254,
																		"src": "5638:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2285,
																				"name": "numToMint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2229,
																				"src": "5660:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5653:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint16_$",
																				"typeString": "type(uint16)"
																			},
																			"typeName": {
																				"id": 2283,
																				"name": "uint16",
																				"nodeType": "ElementaryTypeName",
																				"src": "5653:6:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5653:17:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "5638:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5624:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2289,
															"nodeType": "ExpressionStatement",
															"src": "5624:46:12"
														},
														{
															"expression": {
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2290,
																	"name": "classNFTSupply_1st",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2260,
																	"src": "5689:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2291,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "5710:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 2292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5723:21:12",
																	"memberName": "LEGEND_NFT_SUPPLY_1st",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1610,
																	"src": "5710:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5689:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2294,
															"nodeType": "ExpressionStatement",
															"src": "5689:55:12"
														},
														{
															"expression": {
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2295,
																	"name": "classNFTSupply_2nd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "5762:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2296,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "5783:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5796:21:12",
																	"memberName": "LEGEND_NFT_SUPPLY_2nd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "5783:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5762:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2299,
															"nodeType": "ExpressionStatement",
															"src": "5762:55:12"
														},
														{
															"expression": {
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2300,
																	"name": "classNFTSupply_3rd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "5835:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2301,
																		"name": "DoAConstants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "5856:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																			"typeString": "type(library DoAConstants)"
																		}
																	},
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5869:21:12",
																	"memberName": "LEGEND_NFT_SUPPLY_3rd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1640,
																	"src": "5856:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5835:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2304,
															"nodeType": "ExpressionStatement",
															"src": "5835:55:12"
														},
														{
															"expression": {
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2305,
																	"name": "mintStartIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "5909:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2306,
																			"name": "DoAConstants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "5926:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																				"typeString": "type(library DoAConstants)"
																			}
																		},
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5939:22:12",
																		"memberName": "LEGEND_NFT_START_INDEX",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1664,
																		"src": "5926:35:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2308,
																		"name": "currentCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2254,
																		"src": "5964:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "5926:50:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5909:67:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2311,
															"nodeType": "ExpressionStatement",
															"src": "5909:67:12"
														},
														{
															"expression": {
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2312,
																	"name": "mintEndIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "5994:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2313,
																				"name": "DoAConstants",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1931,
																				"src": "6009:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_DoAConstants_$1931_$",
																					"typeString": "type(library DoAConstants)"
																				}
																			},
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6022:22:12",
																			"memberName": "LEGEND_NFT_START_INDEX",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1664,
																			"src": "6009:35:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 2315,
																			"name": "futureCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "6047:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "6009:49:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6061:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "6009:53:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5994:68:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2320,
															"nodeType": "ExpressionStatement",
															"src": "5994:68:12"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2492,
													"name": "_is1stPublicRoundUnlocked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1987,
													"src": "7935:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 2500,
														"name": "_is2ndPublicRoundUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "8058:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"id": 2508,
															"name": "_is3rdPublicRoundUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "8181:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"arguments": [
																	{
																		"hexValue": "6e6f207075626c696320726f756e6420756e6c6f636b6564",
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8319:26:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a",
																			"typeString": "literal_string \"no public round unlocked\""
																		},
																		"value": "no public round unlocked"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_ee8f8c01746280a5ce49834a2f7c1bbce00b524df0ab6c5236474d30e4fb190a",
																			"typeString": "literal_string \"no public round unlocked\""
																		}
																	],
																	"id": 2516,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8312:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2519,
															"nodeType": "ExpressionStatement",
															"src": "8312:34:12"
														},
														"id": 2520,
														"nodeType": "IfStatement",
														"src": "8178:168:12",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2510,
																			"name": "futureCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "8228:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2511,
																			"name": "classNFTSupply_3rd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2266,
																			"src": "8243:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8228:33:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "737570706c7920696e73756666696369656e74",
																		"id": 2513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8263:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622",
																			"typeString": "literal_string \"supply insufficient\""
																		},
																		"value": "supply insufficient"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622",
																			"typeString": "literal_string \"supply insufficient\""
																		}
																	],
																	"id": 2509,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8220:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8220:65:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2515,
															"nodeType": "ExpressionStatement",
															"src": "8220:65:12"
														}
													},
													"id": 2521,
													"nodeType": "IfStatement",
													"src": "8055:291:12",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2502,
																		"name": "futureCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "8106:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2503,
																		"name": "classNFTSupply_2nd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2263,
																		"src": "8121:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8106:33:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "737570706c7920696e73756666696369656e74",
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8141:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622",
																		"typeString": "literal_string \"supply insufficient\""
																	},
																	"value": "supply insufficient"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622",
																		"typeString": "literal_string \"supply insufficient\""
																	}
																],
																"id": 2501,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "8098:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8098:65:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2507,
														"nodeType": "ExpressionStatement",
														"src": "8098:65:12"
													}
												},
												"id": 2522,
												"nodeType": "IfStatement",
												"src": "7932:414:12",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2494,
																	"name": "futureCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "7983:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2495,
																	"name": "classNFTSupply_1st",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2260,
																	"src": "7998:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7983:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "737570706c7920696e73756666696369656e74",
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8018:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622",
																	"typeString": "literal_string \"supply insufficient\""
																},
																"value": "supply insufficient"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_d60904da65fa1da5d7c694981f68ed8343eaa44999e6109ff13838be6bf8a622",
																	"typeString": "literal_string \"supply insufficient\""
																}
															],
															"id": 2493,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "7975:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (bool,string memory) pure"
															}
														},
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7975:65:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2499,
													"nodeType": "ExpressionStatement",
													"src": "7975:65:12"
												}
											}
										]
									},
									"functionSelector": "d87b320b",
									"id": 2524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2234,
												"name": "whenNotPaused",
												"nameLocations": [
													"5107:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "5107:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5107:13:12"
										}
									],
									"name": "getMintIndexRange",
									"nameLocation": "5035:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "5061:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "5053:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5053:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "classToMint",
												"nameLocation": "5082:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "5072:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 2231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2230,
														"name": "NFT_CLASS",
														"nameLocations": [
															"5072:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1604,
														"src": "5072:9:12"
													},
													"referencedDeclaration": 1604,
													"src": "5072:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5052:42:12"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "mintStartIndex",
												"nameLocation": "5138:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "5130:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5130:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "mintEndIndex",
												"nameLocation": "5162:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "5154:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5154:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5129:46:12"
									},
									"scope": 2768,
									"src": "5026:3328:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2638,
										"nodeType": "Block",
										"src": "8488:1381:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2539,
															"name": "_areHerosMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "8507:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865726f73206e6f74206d696e746564",
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8524:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																"typeString": "literal_string \"Heros not minted\""
															},
															"value": "Heros not minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c1f186ae59ab9167251bcbafe12d6ddf3b7f955e41fe1cfdd412b7054d7ae43",
																"typeString": "literal_string \"Heros not minted\""
															}
														],
														"id": 2538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8499:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8499:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2542,
												"nodeType": "ExpressionStatement",
												"src": "8499:44:12"
											},
											{
												"assignments": [
													2544,
													2546
												],
												"declarations": [
													{
														"constant": false,
														"id": 2544,
														"mutability": "mutable",
														"name": "mintStartIndex",
														"nameLocation": "8759:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2638,
														"src": "8751:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8751:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2546,
														"mutability": "mutable",
														"name": "mintEndIndex",
														"nameLocation": "8783:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2638,
														"src": "8775:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8775:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2551,
												"initialValue": {
													"arguments": [
														{
															"id": 2548,
															"name": "numToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "8830:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2549,
															"name": "classToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "8841:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2547,
														"name": "getMintIndexRange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2524,
														"src": "8812:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,enum NFT_CLASS) view returns (uint256,uint256)"
														}
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8812:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8750:103:12"
											},
											{
												"assignments": [
													2553
												],
												"declarations": [
													{
														"constant": false,
														"id": 2553,
														"mutability": "mutable",
														"name": "actualMintEndIndex",
														"nameLocation": "8873:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 2638,
														"src": "8865:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2555,
												"initialValue": {
													"id": 2554,
													"name": "mintStartIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2544,
													"src": "8894:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8865:43:12"
											},
											{
												"body": {
													"id": 2628,
													"nodeType": "Block",
													"src": "9027:673:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2569,
																		"name": "toAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2526,
																		"src": "9078:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2570,
																		"name": "currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2557,
																		"src": "9086:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2566,
																		"name": "_doaCollection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1958,
																		"src": "9054:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_iDoACollection_$2921",
																			"typeString": "contract iDoACollection"
																		}
																	},
																	"id": 2568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9069:8:12",
																	"memberName": "safeMint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2791,
																	"src": "9054:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9054:45:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2572,
															"nodeType": "ExpressionStatement",
															"src": "9054:45:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2576,
																		"name": "toAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2526,
																		"src": "9139:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2577,
																		"name": "classToMint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2531,
																		"src": "9147:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	],
																	"expression": {
																		"id": 2573,
																		"name": "_memberRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "9113:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_iMemberRegistry_$2958",
																			"typeString": "contract iMemberRegistry"
																		}
																	},
																	"id": 2575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9129:9:12",
																	"memberName": "nftMinted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2932,
																	"src": "9113:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_enum$_NFT_CLASS_$1604_$returns$__$",
																		"typeString": "function (address,enum NFT_CLASS) external"
																	}
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9113:46:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2579,
															"nodeType": "ExpressionStatement",
															"src": "9113:46:12"
														},
														{
															"expression": {
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2580,
																	"name": "actualMintEndIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2553,
																	"src": "9174:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2581,
																	"name": "currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "9195:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9174:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2583,
															"nodeType": "ExpressionStatement",
															"src": "9174:33:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																	"typeString": "enum NFT_CLASS"
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2584,
																	"name": "classToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2531,
																	"src": "9268:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2585,
																		"name": "NFT_CLASS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "9283:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																			"typeString": "type(enum NFT_CLASS)"
																		}
																	},
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9293:6:12",
																	"memberName": "LEGEND",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1600,
																	"src": "9283:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	}
																},
																"src": "9268:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																		"typeString": "enum NFT_CLASS"
																	},
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2593,
																		"name": "classToMint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2531,
																		"src": "9368:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 2594,
																			"name": "NFT_CLASS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "9383:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																				"typeString": "type(enum NFT_CLASS)"
																			}
																		},
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "9393:4:12",
																		"memberName": "RARE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1601,
																		"src": "9383:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		}
																	},
																	"src": "9368:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																			"typeString": "enum NFT_CLASS"
																		},
																		"id": 2605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2602,
																			"name": "classToMint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "9464:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																				"typeString": "enum NFT_CLASS"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2603,
																				"name": "NFT_CLASS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "9479:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																					"typeString": "type(enum NFT_CLASS)"
																				}
																			},
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "9489:8:12",
																			"memberName": "UNCOMMON",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1602,
																			"src": "9479:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																				"typeString": "enum NFT_CLASS"
																			}
																		},
																		"src": "9464:33:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																				"typeString": "enum NFT_CLASS"
																			},
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2611,
																				"name": "classToMint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2531,
																				"src": "9568:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																					"typeString": "enum NFT_CLASS"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 2612,
																					"name": "NFT_CLASS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1604,
																					"src": "9583:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																						"typeString": "type(enum NFT_CLASS)"
																					}
																				},
																				"id": 2613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "9593:6:12",
																				"memberName": "COMMON",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1603,
																				"src": "9583:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																					"typeString": "enum NFT_CLASS"
																				}
																			},
																			"src": "9568:31:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "496e76616c696420636c617373",
																						"id": 2621,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9672:15:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																							"typeString": "literal_string \"Invalid class\""
																						},
																						"value": "Invalid class"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_e2b502b328ef17b0d4d6041aab0e9780b8d5ea66fdd3b542a714283013d65e3b",
																							"typeString": "literal_string \"Invalid class\""
																						}
																					],
																					"id": 2620,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "9665:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 2622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9665:23:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2623,
																			"nodeType": "ExpressionStatement",
																			"src": "9665:23:12"
																		},
																		"id": 2624,
																		"nodeType": "IfStatement",
																		"src": "9565:123:12",
																		"trueBody": {
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2615,
																						"name": "_commonNFTsMinted",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1983,
																						"src": "9617:17:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Counter_$476_storage",
																							"typeString": "struct Counters.Counter storage ref"
																						}
																					},
																					"id": 2617,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9635:9:12",
																					"memberName": "increment",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 502,
																					"src": "9617:27:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$476_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																						"typeString": "function (struct Counters.Counter storage pointer)"
																					}
																				},
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9617:29:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2619,
																			"nodeType": "ExpressionStatement",
																			"src": "9617:29:12"
																		}
																	},
																	"id": 2625,
																	"nodeType": "IfStatement",
																	"src": "9461:227:12",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2606,
																					"name": "_uncommonNFTsMinted",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1980,
																					"src": "9515:19:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$476_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9535:9:12",
																				"memberName": "increment",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 502,
																				"src": "9515:29:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$476_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer)"
																				}
																			},
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9515:31:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2610,
																		"nodeType": "ExpressionStatement",
																		"src": "9515:31:12"
																	}
																},
																"id": 2626,
																"nodeType": "IfStatement",
																"src": "9365:323:12",
																"trueBody": {
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2597,
																				"name": "_rareNFTsMinted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1977,
																				"src": "9415:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Counter_$476_storage",
																					"typeString": "struct Counters.Counter storage ref"
																				}
																			},
																			"id": 2599,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9431:9:12",
																			"memberName": "increment",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 502,
																			"src": "9415:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$476_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																				"typeString": "function (struct Counters.Counter storage pointer)"
																			}
																		},
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9415:27:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2601,
																	"nodeType": "ExpressionStatement",
																	"src": "9415:27:12"
																}
															},
															"id": 2627,
															"nodeType": "IfStatement",
															"src": "9265:423:12",
															"trueBody": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2588,
																			"name": "_legendNFTsMinted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1974,
																			"src": "9317:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$476_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9335:9:12",
																		"memberName": "increment",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 502,
																		"src": "9317:27:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$476_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$476_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer)"
																		}
																	},
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9317:29:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2592,
																"nodeType": "ExpressionStatement",
																"src": "9317:29:12"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2560,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2557,
														"src": "8981:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2561,
														"name": "mintEndIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "8997:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8981:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2629,
												"initializationExpression": {
													"assignments": [
														2557
													],
													"declarations": [
														{
															"constant": false,
															"id": 2557,
															"mutability": "mutable",
															"name": "currentIndex",
															"nameLocation": "8950:12:12",
															"nodeType": "VariableDeclaration",
															"scope": 2629,
															"src": "8942:20:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2556,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8942:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2559,
													"initialValue": {
														"id": 2558,
														"name": "mintStartIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "8965:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8942:37:12"
												},
												"loopExpression": {
													"expression": {
														"id": 2564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9011:14:12",
														"subExpression": {
															"id": 2563,
															"name": "currentIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "9011:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2565,
													"nodeType": "ExpressionStatement",
													"src": "9011:14:12"
												},
												"nodeType": "ForStatement",
												"src": "8938:762:12"
											},
											{
												"expression": {
													"id": 2636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2630,
														"name": "numMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2536,
														"src": "9811:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2631,
																"name": "actualMintEndIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "9823:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2632,
																"name": "mintStartIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "9844:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9823:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9861:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "9823:39:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9811:51:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2637,
												"nodeType": "ExpressionStatement",
												"src": "9811:51:12"
											}
										]
									},
									"id": 2639,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2534,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2533,
												"name": "whenNotPaused",
												"nameLocations": [
													"8446:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "8446:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8446:13:12"
										}
									],
									"name": "_mintNFTs",
									"nameLocation": "8370:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "8388:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "8380:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8380:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "8404:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "8396:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "classToMint",
												"nameLocation": "8425:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "8415:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 2530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2529,
														"name": "NFT_CLASS",
														"nameLocations": [
															"8415:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1604,
														"src": "8415:9:12"
													},
													"referencedDeclaration": 1604,
													"src": "8415:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8379:58:12"
									},
									"returnParameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "numMinted",
												"nameLocation": "8478:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "8470:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8470:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8469:19:12"
									},
									"scope": 2768,
									"src": "8361:1508:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2973
									],
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "9964:63:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2649,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2641,
															"src": "9984:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2650,
															"name": "numToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2643,
															"src": "9992:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2651,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "10003:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10013:6:12",
															"memberName": "LEGEND",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1600,
															"src": "10003:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2648,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "9974:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9974:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2654,
												"nodeType": "ExpressionStatement",
												"src": "9974:46:12"
											}
										]
									},
									"functionSelector": "20a0c034",
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2645,
												"name": "whenNotPaused",
												"nameLocations": [
													"9941:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "9941:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9941:13:12"
										}
									],
									"name": "mintLegends",
									"nameLocation": "9885:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "9905:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "9897:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9897:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "9921:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "9913:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9913:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9896:35:12"
									},
									"returnParameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9964:0:12"
									},
									"scope": 2768,
									"src": "9876:151:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2978
									],
									"body": {
										"id": 2670,
										"nodeType": "Block",
										"src": "10111:55:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2664,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "10131:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10139:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"expression": {
																"id": 2666,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "10142:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10152:6:12",
															"memberName": "LEGEND",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1600,
															"src": "10142:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2663,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "10121:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10121:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2669,
												"nodeType": "ExpressionStatement",
												"src": "10121:38:12"
											}
										]
									},
									"functionSelector": "a8372307",
									"id": 2671,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2661,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2660,
												"name": "whenNotPaused",
												"nameLocations": [
													"10088:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "10088:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10088:13:12"
										}
									],
									"name": "mintLegend",
									"nameLocation": "10051:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "10070:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "10062:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10062:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10061:16:12"
									},
									"returnParameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10111:0:12"
									},
									"scope": 2768,
									"src": "10042:124:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2985
									],
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "10260:61:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2681,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "10280:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2682,
															"name": "numToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "10288:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2683,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "10299:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10309:4:12",
															"memberName": "RARE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1601,
															"src": "10299:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2680,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "10270:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10270:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2686,
												"nodeType": "ExpressionStatement",
												"src": "10270:44:12"
											}
										]
									},
									"functionSelector": "f78f680a",
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2678,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2677,
												"name": "whenNotPaused",
												"nameLocations": [
													"10237:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "10237:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10237:13:12"
										}
									],
									"name": "mintRares",
									"nameLocation": "10182:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "10200:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "10192:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "10216:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "10208:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10208:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:35:12"
									},
									"returnParameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10260:0:12"
									},
									"scope": 2768,
									"src": "10173:148:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2990
									],
									"body": {
										"id": 2702,
										"nodeType": "Block",
										"src": "10394:53:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2696,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "10414:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10422:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"expression": {
																"id": 2698,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "10425:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10435:4:12",
															"memberName": "RARE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1601,
															"src": "10425:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2695,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "10404:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10404:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2701,
												"nodeType": "ExpressionStatement",
												"src": "10404:36:12"
											}
										]
									},
									"functionSelector": "8d36f8f4",
									"id": 2703,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2692,
												"name": "whenNotPaused",
												"nameLocations": [
													"10371:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "10371:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10371:13:12"
										}
									],
									"name": "mintRare",
									"nameLocation": "10336:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "10353:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "10345:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10345:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10344:16:12"
									},
									"returnParameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10394:0:12"
									},
									"scope": 2768,
									"src": "10327:120:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2997
									],
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "10544:65:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2713,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "10564:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2714,
															"name": "numToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "10572:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2715,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "10583:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10593:8:12",
															"memberName": "UNCOMMON",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1602,
															"src": "10583:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2712,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "10554:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10554:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2718,
												"nodeType": "ExpressionStatement",
												"src": "10554:48:12"
											}
										]
									},
									"functionSelector": "f17a6777",
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2709,
												"name": "whenNotPaused",
												"nameLocations": [
													"10521:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "10521:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10521:13:12"
										}
									],
									"name": "mintUncommons",
									"nameLocation": "10462:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "10484:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "10476:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10476:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "10500:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "10492:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10492:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10475:35:12"
									},
									"returnParameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10544:0:12"
									},
									"scope": 2768,
									"src": "10453:156:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3002
									],
									"body": {
										"id": 2734,
										"nodeType": "Block",
										"src": "10686:57:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2728,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2722,
															"src": "10706:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10714:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"expression": {
																"id": 2730,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "10717:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10727:8:12",
															"memberName": "UNCOMMON",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1602,
															"src": "10717:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2727,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "10696:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10696:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2733,
												"nodeType": "ExpressionStatement",
												"src": "10696:40:12"
											}
										]
									},
									"functionSelector": "508f0628",
									"id": 2735,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2725,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2724,
												"name": "whenNotPaused",
												"nameLocations": [
													"10663:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "10663:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10663:13:12"
										}
									],
									"name": "mintUncommon",
									"nameLocation": "10624:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "10645:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "10637:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10637:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10636:16:12"
									},
									"returnParameters": {
										"id": 2726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10686:0:12"
									},
									"scope": 2768,
									"src": "10615:128:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3009
									],
									"body": {
										"id": 2751,
										"nodeType": "Block",
										"src": "10838:63:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2745,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "10858:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2746,
															"name": "numToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "10866:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2747,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "10877:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10887:6:12",
															"memberName": "COMMON",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1603,
															"src": "10877:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2744,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "10848:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10848:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2750,
												"nodeType": "ExpressionStatement",
												"src": "10848:46:12"
											}
										]
									},
									"functionSelector": "bad688c6",
									"id": 2752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2742,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2741,
												"name": "whenNotPaused",
												"nameLocations": [
													"10815:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "10815:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10815:13:12"
										}
									],
									"name": "mintCommons",
									"nameLocation": "10758:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "10778:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "10770:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10770:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "10794:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "10786:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10786:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10769:35:12"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10838:0:12"
									},
									"scope": 2768,
									"src": "10749:152:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3014
									],
									"body": {
										"id": 2766,
										"nodeType": "Block",
										"src": "10976:55:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2760,
															"name": "toAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2754,
															"src": "10996:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11004:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"expression": {
																"id": 2762,
																"name": "NFT_CLASS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "11007:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_NFT_CLASS_$1604_$",
																	"typeString": "type(enum NFT_CLASS)"
																}
															},
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "11017:6:12",
															"memberName": "COMMON",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1603,
															"src": "11007:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
																"typeString": "enum NFT_CLASS"
															}
														],
														"id": 2759,
														"name": "_mintNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "10986:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_enum$_NFT_CLASS_$1604_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,enum NFT_CLASS) returns (uint256)"
														}
													},
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10986:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2765,
												"nodeType": "ExpressionStatement",
												"src": "10986:38:12"
											}
										]
									},
									"functionSelector": "d47e107e",
									"id": 2767,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2757,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2756,
												"name": "whenNotPaused",
												"nameLocations": [
													"10953:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "10953:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10953:13:12"
										}
									],
									"name": "mintCommon",
									"nameLocation": "10916:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "10935:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "10927:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10927:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10926:16:12"
									},
									"returnParameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10976:0:12"
									},
									"scope": 2768,
									"src": "10907:124:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2769,
							"src": "486:10752:12",
							"usedErrors": []
						}
					],
					"src": "32:11206:12"
				},
				"id": 12
			},
			"iDoACollection.sol": {
				"ast": {
					"absolutePath": "iDoACollection.sol",
					"exportedSymbols": {
						"IERC165": [
							731
						],
						"IERC721": [
							390
						],
						"IERC721Enumerable": [
							421
						],
						"IERC721Metadata": [
							448
						],
						"iDoACollection": [
							2921
						]
					},
					"id": 2922,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2770,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2922,
							"sourceUnit": 391,
							"src": "59:58:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 2772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2922,
							"sourceUnit": 422,
							"src": "118:79:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 2773,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2922,
							"sourceUnit": 449,
							"src": "198:77:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2774,
										"name": "IERC721",
										"nameLocations": [
											"306:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 390,
										"src": "306:7:13"
									},
									"id": 2775,
									"nodeType": "InheritanceSpecifier",
									"src": "306:7:13"
								},
								{
									"baseName": {
										"id": 2776,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"315:17:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "315:17:13"
									},
									"id": 2777,
									"nodeType": "InheritanceSpecifier",
									"src": "315:17:13"
								},
								{
									"baseName": {
										"id": 2778,
										"name": "IERC721Metadata",
										"nameLocations": [
											"334:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "334:15:13"
									},
									"id": 2779,
									"nodeType": "InheritanceSpecifier",
									"src": "334:15:13"
								}
							],
							"canonicalName": "iDoACollection",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2921,
							"linearizedBaseContracts": [
								2921,
								448,
								421,
								390,
								731
							],
							"name": "iDoACollection",
							"nameLocation": "288:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40d097c3",
									"id": 2784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "574:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "591:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "583:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:12:13"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:0:13"
									},
									"scope": 2921,
									"src": "565:39:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a1448194",
									"id": 2791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "619:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "636:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "628:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "648:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "640:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:29:13"
									},
									"returnParameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:0:13"
									},
									"scope": 2921,
									"src": "610:56:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f9f49952",
									"id": 2798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchMint",
									"nameLocation": "681:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "703:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "695:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "tokensToMint",
												"nameLocation": "715:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "707:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:34:13"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:0:13"
									},
									"scope": 2921,
									"src": "672:66:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										433
									],
									"functionSelector": "06fdde03",
									"id": 2803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1537:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1541:2:13"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1567:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1567:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:15:13"
									},
									"scope": 2921,
									"src": "1528:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										439
									],
									"functionSelector": "95d89b41",
									"id": 2808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1637:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1643:2:13"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "1669:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:15:13"
									},
									"scope": 2921,
									"src": "1628:56:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										402
									],
									"functionSelector": "18160ddd",
									"id": 2813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1747:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1758:2:13"
									},
									"returnParameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "1784:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:9:13"
									},
									"scope": 2921,
									"src": "1738:55:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										323
									],
									"functionSelector": "6352211e",
									"id": 2820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1854:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1870:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2820,
												"src": "1862:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:18:13"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2820,
												"src": "1903:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:9:13"
									},
									"scope": 2921,
									"src": "1845:67:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										355
									],
									"functionSelector": "23b872dd",
									"id": 2829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2001:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2022:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "2014:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2037:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "2029:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2050:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "2042:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:46:13"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2068:0:13"
									},
									"scope": 2921,
									"src": "1992:77:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										363
									],
									"functionSelector": "095ea7b3",
									"id": 2836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2154:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "2170:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "2162:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2189:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "2181:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:37:13"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2207:0:13"
									},
									"scope": 2921,
									"src": "2145:63:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										379
									],
									"functionSelector": "081812fc",
									"id": 2843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "2277:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2297:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "2289:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2288:18:13"
									},
									"returnParameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "2330:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:9:13"
									},
									"scope": 2921,
									"src": "2268:71:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										371
									],
									"functionSelector": "a22cb465",
									"id": 2850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2459:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "2485:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "2477:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "2501:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "2496:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2496:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:35:13"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2520:0:13"
									},
									"scope": 2921,
									"src": "2450:71:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										389
									],
									"functionSelector": "e985e9c5",
									"id": 2859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2634:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2659:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "2651:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "2675:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "2667:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:35:13"
									},
									"returnParameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "2709:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2709:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:6:13"
									},
									"scope": 2921,
									"src": "2625:90:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										335
									],
									"functionSelector": "b88d4fde",
									"id": 2870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2811:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2836:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "2828:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2851:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "2843:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2864:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "2856:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2889:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "2874:20:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2874:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:68:13"
									},
									"returnParameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2904:0:13"
									},
									"scope": 2921,
									"src": "2802:103:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										345
									],
									"functionSelector": "42842e0e",
									"id": 2879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3051:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3076:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "3068:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3068:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3091:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "3083:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3104:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "3096:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3096:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3067:46:13"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3122:0:13"
									},
									"scope": 2921,
									"src": "3042:81:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										315
									],
									"functionSelector": "70a08231",
									"id": 2886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3186:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3204:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "3196:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:15:13"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3242:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "3234:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3233:17:13"
									},
									"scope": 2921,
									"src": "3177:74:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										420
									],
									"functionSelector": "4f6ccce7",
									"id": 2893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "3530:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "3551:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "3543:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:16:13"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "3582:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:9:13"
									},
									"scope": 2921,
									"src": "3521:70:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										412
									],
									"functionSelector": "2f745c59",
									"id": 2902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "3655:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3683:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "3675:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "3699:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "3691:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3674:32:13"
									},
									"returnParameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "3730:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3729:9:13"
									},
									"scope": 2921,
									"src": "3646:93:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										447
									],
									"functionSelector": "c87b56dd",
									"id": 2909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "4006:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4023:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "4015:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:17:13"
									},
									"returnParameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "4055:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2906,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4055:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4054:15:13"
									},
									"scope": 2921,
									"src": "3997:73:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 2914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4396:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4409:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "4401:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:17:13"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4426:0:13"
									},
									"scope": 2921,
									"src": "4387:40:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dc8e92ea",
									"id": 2920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchBurn",
									"nameLocation": "4469:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "4498:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "4479:27:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2915,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4479:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2916,
													"nodeType": "ArrayTypeName",
													"src": "4479:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:29:13"
									},
									"returnParameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4516:0:13"
									},
									"scope": 2921,
									"src": "4460:57:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2922,
							"src": "278:4247:13",
							"usedErrors": []
						}
					],
					"src": "32:4493:13"
				},
				"id": 13
			},
			"iMemberRegistry.sol": {
				"ast": {
					"absolutePath": "iMemberRegistry.sol",
					"exportedSymbols": {
						"DoAConstants": [
							1931
						],
						"NFT_CLASS": [
							1604
						],
						"iMemberRegistry": [
							2958
						]
					},
					"id": 2959,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2923,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"absolutePath": "DoAConstants.sol",
							"file": "./DoAConstants.sol",
							"id": 2924,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2959,
							"sourceUnit": 1932,
							"src": "58:28:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "iMemberRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2958,
							"linearizedBaseContracts": [
								2958
							],
							"name": "iMemberRegistry",
							"nameLocation": "98:15:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "be1e1145",
									"id": 2932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nftMinted",
									"nameLocation": "130:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "148:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "140:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "nftClasse",
												"nameLocation": "166:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "156:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 2928,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2927,
														"name": "NFT_CLASS",
														"nameLocations": [
															"156:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1604,
														"src": "156:9:14"
													},
													"referencedDeclaration": 1604,
													"src": "156:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:37:14"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:0:14"
									},
									"scope": 2958,
									"src": "121:65:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f8ff71c",
									"id": 2940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nftBurned",
									"nameLocation": "200:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "218:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "210:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "nftClasse",
												"nameLocation": "236:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "226:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 2936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2935,
														"name": "NFT_CLASS",
														"nameLocations": [
															"226:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1604,
														"src": "226:9:14"
													},
													"referencedDeclaration": 1604,
													"src": "226:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:37:14"
									},
									"returnParameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "255:0:14"
									},
									"scope": 2958,
									"src": "191:65:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e0fe939f",
									"id": 2948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMemberClass",
									"nameLocation": "270:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "293:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "285:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:16:14"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "319:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
													"typeString": "enum NFT_CLASS"
												},
												"typeName": {
													"id": 2945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2944,
														"name": "NFT_CLASS",
														"nameLocations": [
															"319:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1604,
														"src": "319:9:14"
													},
													"referencedDeclaration": 1604,
													"src": "319:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_NFT_CLASS_$1604",
														"typeString": "enum NFT_CLASS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:11:14"
									},
									"scope": 2958,
									"src": "261:69:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "741ca6bb",
									"id": 2957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nftTransferred",
									"nameLocation": "345:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "oldMember",
												"nameLocation": "368:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2957,
												"src": "360:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "toNewMember",
												"nameLocation": "387:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2957,
												"src": "379:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "408:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2957,
												"src": "400:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:57:14"
									},
									"returnParameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "425:0:14"
									},
									"scope": 2958,
									"src": "336:90:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2959,
							"src": "88:342:14",
							"usedErrors": []
						}
					],
					"src": "32:398:14"
				},
				"id": 14
			},
			"iTokenMinter.sol": {
				"ast": {
					"absolutePath": "iTokenMinter.sol",
					"exportedSymbols": {
						"iTokenMinter": [
							3015
						],
						"iTreasury": [
							3031
						]
					},
					"id": 3016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2960,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:15"
						},
						{
							"absolutePath": "iTreasury.sol",
							"file": "./iTreasury.sol",
							"id": 2961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3016,
							"sourceUnit": 3032,
							"src": "58:25:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "iTokenMinter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3015,
							"linearizedBaseContracts": [
								3015
							],
							"name": "iTokenMinter",
							"nameLocation": "95:12:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "329cc83f",
									"id": 2966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintHeros",
									"nameLocation": "157:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "175:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "167:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:12:15"
									},
									"returnParameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:15"
									},
									"scope": 3015,
									"src": "148:40:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "20a0c034",
									"id": 2973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintLegends",
									"nameLocation": "204:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "224:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "216:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "236:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "228:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:31:15"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:0:15"
									},
									"scope": 3015,
									"src": "195:69:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a8372307",
									"id": 2978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintLegend",
									"nameLocation": "278:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "297:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "289:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:12:15"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:0:15"
									},
									"scope": 3015,
									"src": "269:49:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f78f680a",
									"id": 2985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintRares",
									"nameLocation": "333:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "351:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2985,
												"src": "343:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "363:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2985,
												"src": "355:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:31:15"
									},
									"returnParameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:0:15"
									},
									"scope": 3015,
									"src": "324:67:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8d36f8f4",
									"id": 2990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintRare",
									"nameLocation": "405:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "422:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "414:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:12:15"
									},
									"returnParameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:15"
									},
									"scope": 3015,
									"src": "396:47:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f17a6777",
									"id": 2997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintUncommons",
									"nameLocation": "458:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "480:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "472:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "492:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "484:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:31:15"
									},
									"returnParameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "519:0:15"
									},
									"scope": 3015,
									"src": "449:71:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "508f0628",
									"id": 3002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintUncommon",
									"nameLocation": "534:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "555:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "547:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:12:15"
									},
									"returnParameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:15"
									},
									"scope": 3015,
									"src": "525:51:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bad688c6",
									"id": 3009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintCommons",
									"nameLocation": "592:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "612:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "604:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "numToMint",
												"nameLocation": "624:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "616:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:31:15"
									},
									"returnParameters": {
										"id": 3008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:15"
									},
									"scope": 3015,
									"src": "583:69:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d47e107e",
									"id": 3014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintCommon",
									"nameLocation": "666:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "685:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "677:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:12:15"
									},
									"returnParameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:0:15"
									},
									"scope": 3015,
									"src": "657:49:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3016,
							"src": "85:629:15",
							"usedErrors": []
						}
					],
					"src": "32:682:15"
				},
				"id": 15
			},
			"iTreasury.sol": {
				"ast": {
					"absolutePath": "iTreasury.sol",
					"exportedSymbols": {
						"iTreasury": [
							3031
						]
					},
					"id": 3032,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "iTreasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3031,
							"linearizedBaseContracts": [
								3031
							],
							"name": "iTreasury",
							"nameLocation": "70:9:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "760c764d",
									"id": 3020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositNFTRevenue",
									"nameLocation": "97:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:16"
									},
									"returnParameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:0:16"
									},
									"scope": 3031,
									"src": "88:46:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3419628b",
									"id": 3025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawPrivateFund",
									"nameLocation": "149:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "177:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "169:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:16:16"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:0:16"
									},
									"scope": 3031,
									"src": "140:55:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d2ba888",
									"id": 3030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCombinedBalance",
									"nameLocation": "214:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:16"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "258:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:9:16"
									},
									"scope": 3031,
									"src": "205:63:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3032,
							"src": "60:210:16",
							"usedErrors": []
						}
					],
					"src": "32:238:16"
				},
				"id": 16
			}
		}
	}
}